/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// CallRoutingUrlSecurityConfigType the model 'CallRoutingUrlSecurityConfigType'
type CallRoutingUrlSecurityConfigType string

// List of CallRoutingUrlSecurityConfigType
const (
	CALLROUTINGURLSECURITYCONFIGTYPE_BASIC CallRoutingUrlSecurityConfigType = "BASIC"
	CALLROUTINGURLSECURITYCONFIGTYPE_HMAC  CallRoutingUrlSecurityConfigType = "HMAC"
)

// All allowed values of CallRoutingUrlSecurityConfigType enum
var AllowedCallRoutingUrlSecurityConfigTypeEnumValues = []CallRoutingUrlSecurityConfigType{
	"BASIC",
	"HMAC",
}

func (v *CallRoutingUrlSecurityConfigType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CallRoutingUrlSecurityConfigType(value)
	for _, existing := range AllowedCallRoutingUrlSecurityConfigTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CallRoutingUrlSecurityConfigType", value)
}

// NewCallRoutingUrlSecurityConfigTypeFromValue returns a pointer to a valid CallRoutingUrlSecurityConfigType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCallRoutingUrlSecurityConfigTypeFromValue(v string) (*CallRoutingUrlSecurityConfigType, error) {
	ev := CallRoutingUrlSecurityConfigType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CallRoutingUrlSecurityConfigType: valid values are %v", v, AllowedCallRoutingUrlSecurityConfigTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CallRoutingUrlSecurityConfigType) IsValid() bool {
	for _, existing := range AllowedCallRoutingUrlSecurityConfigTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CallRoutingUrlSecurityConfigType value
func (v CallRoutingUrlSecurityConfigType) Ptr() *CallRoutingUrlSecurityConfigType {
	return &v
}

type NullableCallRoutingUrlSecurityConfigType struct {
	value *CallRoutingUrlSecurityConfigType
	isSet bool
}

func (v NullableCallRoutingUrlSecurityConfigType) Get() *CallRoutingUrlSecurityConfigType {
	return v.value
}

func (v *NullableCallRoutingUrlSecurityConfigType) Set(val *CallRoutingUrlSecurityConfigType) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingUrlSecurityConfigType) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingUrlSecurityConfigType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingUrlSecurityConfigType(val *CallRoutingUrlSecurityConfigType) *NullableCallRoutingUrlSecurityConfigType {
	return &NullableCallRoutingUrlSecurityConfigType{value: val, isSet: true}
}

func (v NullableCallRoutingUrlSecurityConfigType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingUrlSecurityConfigType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
