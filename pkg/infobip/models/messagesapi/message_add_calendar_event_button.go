/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageAddCalendarEventButton type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageAddCalendarEventButton{}

// MessageAddCalendarEventButton struct for MessageAddCalendarEventButton
type MessageAddCalendarEventButton struct {
	Type MessageButtonType
	// Text to be displayed on the button.
	Text string
	// Custom data that will be sent to you when user reply to a message.
	PostbackData string
	// Event start time. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
	StartTime Time
	// Event end time. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
	EndTime Time
	// Event title.
	Title string
	// Event description.
	Description *string
}

type _MessageAddCalendarEventButton MessageAddCalendarEventButton

// NewMessageAddCalendarEventButton instantiates a new MessageAddCalendarEventButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageAddCalendarEventButton(text string, postbackData string, startTime Time, endTime Time, title string) *MessageAddCalendarEventButton {
	this := MessageAddCalendarEventButton{}
	this.Type = "ADD_CALENDAR_EVENT"
	this.Text = text
	this.PostbackData = postbackData
	this.StartTime = startTime
	this.EndTime = endTime
	this.Title = title
	return &this
}

// NewMessageAddCalendarEventButtonWithDefaults instantiates a new MessageAddCalendarEventButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageAddCalendarEventButtonWithDefaults() *MessageAddCalendarEventButton {
	this := MessageAddCalendarEventButton{}
	this.Type = "ADD_CALENDAR_EVENT"
	return &this
}

// GetText returns the Text field value
func (o *MessageAddCalendarEventButton) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MessageAddCalendarEventButton) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MessageAddCalendarEventButton) SetText(v string) {
	o.Text = v
}

// GetPostbackData returns the PostbackData field value
func (o *MessageAddCalendarEventButton) GetPostbackData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostbackData
}

// GetPostbackDataOk returns a tuple with the PostbackData field value
// and a boolean to check if the value has been set.
func (o *MessageAddCalendarEventButton) GetPostbackDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostbackData, true
}

// SetPostbackData sets field value
func (o *MessageAddCalendarEventButton) SetPostbackData(v string) {
	o.PostbackData = v
}

// GetStartTime returns the StartTime field value
func (o *MessageAddCalendarEventButton) GetStartTime() Time {
	if o == nil {
		var ret Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *MessageAddCalendarEventButton) GetStartTimeOk() (*Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *MessageAddCalendarEventButton) SetStartTime(v Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *MessageAddCalendarEventButton) GetEndTime() Time {
	if o == nil {
		var ret Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *MessageAddCalendarEventButton) GetEndTimeOk() (*Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *MessageAddCalendarEventButton) SetEndTime(v Time) {
	o.EndTime = v
}

// GetTitle returns the Title field value
func (o *MessageAddCalendarEventButton) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *MessageAddCalendarEventButton) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *MessageAddCalendarEventButton) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MessageAddCalendarEventButton) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageAddCalendarEventButton) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MessageAddCalendarEventButton) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MessageAddCalendarEventButton) SetDescription(v string) {
	o.Description = &v
}

func (o MessageAddCalendarEventButton) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageAddCalendarEventButton) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["text"] = o.Text
	toSerialize["postbackData"] = o.PostbackData
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableMessageAddCalendarEventButton struct {
	value *MessageAddCalendarEventButton
	isSet bool
}

func (v NullableMessageAddCalendarEventButton) Get() *MessageAddCalendarEventButton {
	return v.value
}

func (v *NullableMessageAddCalendarEventButton) Set(val *MessageAddCalendarEventButton) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageAddCalendarEventButton) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageAddCalendarEventButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageAddCalendarEventButton(val *MessageAddCalendarEventButton) *NullableMessageAddCalendarEventButton {
	return &NullableMessageAddCalendarEventButton{value: val, isSet: true}
}

func (v NullableMessageAddCalendarEventButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageAddCalendarEventButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
