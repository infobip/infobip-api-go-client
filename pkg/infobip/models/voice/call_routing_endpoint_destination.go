/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRoutingEndpointDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRoutingEndpointDestination{}

// CallRoutingEndpointDestination struct for CallRoutingEndpointDestination
type CallRoutingEndpointDestination struct {
	Priority *int32
	Type     CallRoutingDestinationType
	Weight   *int32
	Value    CallRoutingEndpoint
	// Time to wait, in seconds, to establish a call toward the destination endpoint. The call will be terminated if it is not answered within the specified time.
	ConnectTimeout *int32
	Recording      *CallRoutingRecording
	// Sets specific delivery windows outside of which calls won't be forwarded to the destination. If defined, call forwarding is allowed only if any time window in array is satisfied.
	AllowedTimeWindows []DeliveryTimeWindow
}

type _CallRoutingEndpointDestination CallRoutingEndpointDestination

// NewCallRoutingEndpointDestination instantiates a new CallRoutingEndpointDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRoutingEndpointDestination(value CallRoutingEndpoint) *CallRoutingEndpointDestination {
	this := CallRoutingEndpointDestination{}
	this.Type = "ENDPOINT"
	this.Value = value
	return &this
}

// NewCallRoutingEndpointDestinationWithDefaults instantiates a new CallRoutingEndpointDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRoutingEndpointDestinationWithDefaults() *CallRoutingEndpointDestination {
	this := CallRoutingEndpointDestination{}
	this.Type = "ENDPOINT"
	return &this
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CallRoutingEndpointDestination) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingEndpointDestination) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CallRoutingEndpointDestination) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *CallRoutingEndpointDestination) SetPriority(v int32) {
	o.Priority = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CallRoutingEndpointDestination) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingEndpointDestination) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CallRoutingEndpointDestination) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *CallRoutingEndpointDestination) SetWeight(v int32) {
	o.Weight = &v
}

// GetValue returns the Value field value
func (o *CallRoutingEndpointDestination) GetValue() CallRoutingEndpoint {
	if o == nil {
		var ret CallRoutingEndpoint
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CallRoutingEndpointDestination) GetValueOk() (*CallRoutingEndpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CallRoutingEndpointDestination) SetValue(v CallRoutingEndpoint) {
	o.Value = v
}

// GetConnectTimeout returns the ConnectTimeout field value if set, zero value otherwise.
func (o *CallRoutingEndpointDestination) GetConnectTimeout() int32 {
	if o == nil || IsNil(o.ConnectTimeout) {
		var ret int32
		return ret
	}
	return *o.ConnectTimeout
}

// GetConnectTimeoutOk returns a tuple with the ConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingEndpointDestination) GetConnectTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectTimeout) {
		return nil, false
	}
	return o.ConnectTimeout, true
}

// HasConnectTimeout returns a boolean if a field has been set.
func (o *CallRoutingEndpointDestination) HasConnectTimeout() bool {
	if o != nil && !IsNil(o.ConnectTimeout) {
		return true
	}

	return false
}

// SetConnectTimeout gets a reference to the given int32 and assigns it to the ConnectTimeout field.
func (o *CallRoutingEndpointDestination) SetConnectTimeout(v int32) {
	o.ConnectTimeout = &v
}

// GetRecording returns the Recording field value if set, zero value otherwise.
func (o *CallRoutingEndpointDestination) GetRecording() CallRoutingRecording {
	if o == nil || IsNil(o.Recording) {
		var ret CallRoutingRecording
		return ret
	}
	return *o.Recording
}

// GetRecordingOk returns a tuple with the Recording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingEndpointDestination) GetRecordingOk() (*CallRoutingRecording, bool) {
	if o == nil || IsNil(o.Recording) {
		return nil, false
	}
	return o.Recording, true
}

// HasRecording returns a boolean if a field has been set.
func (o *CallRoutingEndpointDestination) HasRecording() bool {
	if o != nil && !IsNil(o.Recording) {
		return true
	}

	return false
}

// SetRecording gets a reference to the given CallRoutingRecording and assigns it to the Recording field.
func (o *CallRoutingEndpointDestination) SetRecording(v CallRoutingRecording) {
	o.Recording = &v
}

// GetAllowedTimeWindows returns the AllowedTimeWindows field value if set, zero value otherwise.
func (o *CallRoutingEndpointDestination) GetAllowedTimeWindows() []DeliveryTimeWindow {
	if o == nil || IsNil(o.AllowedTimeWindows) {
		var ret []DeliveryTimeWindow
		return ret
	}
	return o.AllowedTimeWindows
}

// GetAllowedTimeWindowsOk returns a tuple with the AllowedTimeWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingEndpointDestination) GetAllowedTimeWindowsOk() ([]DeliveryTimeWindow, bool) {
	if o == nil || IsNil(o.AllowedTimeWindows) {
		return nil, false
	}
	return o.AllowedTimeWindows, true
}

// HasAllowedTimeWindows returns a boolean if a field has been set.
func (o *CallRoutingEndpointDestination) HasAllowedTimeWindows() bool {
	if o != nil && !IsNil(o.AllowedTimeWindows) {
		return true
	}

	return false
}

// SetAllowedTimeWindows gets a reference to the given []DeliveryTimeWindow and assigns it to the AllowedTimeWindows field.
func (o *CallRoutingEndpointDestination) SetAllowedTimeWindows(v []DeliveryTimeWindow) {
	o.AllowedTimeWindows = v
}

func (o CallRoutingEndpointDestination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRoutingEndpointDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	toSerialize["value"] = o.Value
	if !IsNil(o.ConnectTimeout) {
		toSerialize["connectTimeout"] = o.ConnectTimeout
	}
	if !IsNil(o.Recording) {
		toSerialize["recording"] = o.Recording
	}
	if !IsNil(o.AllowedTimeWindows) {
		toSerialize["allowedTimeWindows"] = o.AllowedTimeWindows
	}
	return toSerialize, nil
}

type NullableCallRoutingEndpointDestination struct {
	value *CallRoutingEndpointDestination
	isSet bool
}

func (v NullableCallRoutingEndpointDestination) Get() *CallRoutingEndpointDestination {
	return v.value
}

func (v *NullableCallRoutingEndpointDestination) Set(val *CallRoutingEndpointDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingEndpointDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingEndpointDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingEndpointDestination(val *CallRoutingEndpointDestination) *NullableCallRoutingEndpointDestination {
	return &NullableCallRoutingEndpointDestination{value: val, isSet: true}
}

func (v NullableCallRoutingEndpointDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingEndpointDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
