/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// TranscriptionLanguage the model 'TranscriptionLanguage'
type TranscriptionLanguage string

// List of TranscriptionLanguage
const (
	TRANSCRIPTIONLANGUAGE_AF_ZA      TranscriptionLanguage = "af-ZA"
	TRANSCRIPTIONLANGUAGE_SQ_AL      TranscriptionLanguage = "sq-AL"
	TRANSCRIPTIONLANGUAGE_AM_ET      TranscriptionLanguage = "am-ET"
	TRANSCRIPTIONLANGUAGE_AR_KW      TranscriptionLanguage = "ar-KW"
	TRANSCRIPTIONLANGUAGE_AR_AE      TranscriptionLanguage = "ar-AE"
	TRANSCRIPTIONLANGUAGE_AR_BH      TranscriptionLanguage = "ar-BH"
	TRANSCRIPTIONLANGUAGE_AR_DZ      TranscriptionLanguage = "ar-DZ"
	TRANSCRIPTIONLANGUAGE_AR_EG      TranscriptionLanguage = "ar-EG"
	TRANSCRIPTIONLANGUAGE_AR_IL      TranscriptionLanguage = "ar-IL"
	TRANSCRIPTIONLANGUAGE_AR_IQ      TranscriptionLanguage = "ar-IQ"
	TRANSCRIPTIONLANGUAGE_AR_JO      TranscriptionLanguage = "ar-JO"
	TRANSCRIPTIONLANGUAGE_AR_LB      TranscriptionLanguage = "ar-LB"
	TRANSCRIPTIONLANGUAGE_AR_LY      TranscriptionLanguage = "ar-LY"
	TRANSCRIPTIONLANGUAGE_AR_MA      TranscriptionLanguage = "ar-MA"
	TRANSCRIPTIONLANGUAGE_AR_OM      TranscriptionLanguage = "ar-OM"
	TRANSCRIPTIONLANGUAGE_AR_PS      TranscriptionLanguage = "ar-PS"
	TRANSCRIPTIONLANGUAGE_AR_QA      TranscriptionLanguage = "ar-QA"
	TRANSCRIPTIONLANGUAGE_AR_SA      TranscriptionLanguage = "ar-SA"
	TRANSCRIPTIONLANGUAGE_AR_SY      TranscriptionLanguage = "ar-SY"
	TRANSCRIPTIONLANGUAGE_AR_TN      TranscriptionLanguage = "ar-TN"
	TRANSCRIPTIONLANGUAGE_AR_YE      TranscriptionLanguage = "ar-YE"
	TRANSCRIPTIONLANGUAGE_HY_AM      TranscriptionLanguage = "hy-AM"
	TRANSCRIPTIONLANGUAGE_AZ_AZ      TranscriptionLanguage = "az-AZ"
	TRANSCRIPTIONLANGUAGE_EU_ES      TranscriptionLanguage = "eu-ES"
	TRANSCRIPTIONLANGUAGE_BN_IN      TranscriptionLanguage = "bn-IN"
	TRANSCRIPTIONLANGUAGE_BN_BD      TranscriptionLanguage = "bn-BD"
	TRANSCRIPTIONLANGUAGE_BS_BA      TranscriptionLanguage = "bs-BA"
	TRANSCRIPTIONLANGUAGE_BG_BG      TranscriptionLanguage = "bg-BG"
	TRANSCRIPTIONLANGUAGE_MY_MM      TranscriptionLanguage = "my-MM"
	TRANSCRIPTIONLANGUAGE_CA_ES      TranscriptionLanguage = "ca-ES"
	TRANSCRIPTIONLANGUAGE_ZH_CN      TranscriptionLanguage = "zh-CN"
	TRANSCRIPTIONLANGUAGE_ZH_HK      TranscriptionLanguage = "zh-HK"
	TRANSCRIPTIONLANGUAGE_ZH_TW      TranscriptionLanguage = "zh-TW"
	TRANSCRIPTIONLANGUAGE_HR_HR      TranscriptionLanguage = "hr-HR"
	TRANSCRIPTIONLANGUAGE_CS_CZ      TranscriptionLanguage = "cs-CZ"
	TRANSCRIPTIONLANGUAGE_DA_DK      TranscriptionLanguage = "da-DK"
	TRANSCRIPTIONLANGUAGE_NL_NL      TranscriptionLanguage = "nl-NL"
	TRANSCRIPTIONLANGUAGE_NL_BE      TranscriptionLanguage = "nl-BE"
	TRANSCRIPTIONLANGUAGE_EN_AU      TranscriptionLanguage = "en-AU"
	TRANSCRIPTIONLANGUAGE_EN_CA      TranscriptionLanguage = "en-CA"
	TRANSCRIPTIONLANGUAGE_EN_GB      TranscriptionLanguage = "en-GB"
	TRANSCRIPTIONLANGUAGE_EN_GH      TranscriptionLanguage = "en-GH"
	TRANSCRIPTIONLANGUAGE_EN_HK      TranscriptionLanguage = "en-HK"
	TRANSCRIPTIONLANGUAGE_EN_IE      TranscriptionLanguage = "en-IE"
	TRANSCRIPTIONLANGUAGE_EN_IN      TranscriptionLanguage = "en-IN"
	TRANSCRIPTIONLANGUAGE_EN_KE      TranscriptionLanguage = "en-KE"
	TRANSCRIPTIONLANGUAGE_EN_NG      TranscriptionLanguage = "en-NG"
	TRANSCRIPTIONLANGUAGE_EN_NZ      TranscriptionLanguage = "en-NZ"
	TRANSCRIPTIONLANGUAGE_EN_PH      TranscriptionLanguage = "en-PH"
	TRANSCRIPTIONLANGUAGE_EN_PK      TranscriptionLanguage = "en-PK"
	TRANSCRIPTIONLANGUAGE_EN_SG      TranscriptionLanguage = "en-SG"
	TRANSCRIPTIONLANGUAGE_EN_TZ      TranscriptionLanguage = "en-TZ"
	TRANSCRIPTIONLANGUAGE_EN_US      TranscriptionLanguage = "en-US"
	TRANSCRIPTIONLANGUAGE_EN_ZA      TranscriptionLanguage = "en-ZA"
	TRANSCRIPTIONLANGUAGE_ET_EE      TranscriptionLanguage = "et-EE"
	TRANSCRIPTIONLANGUAGE_FIL_PH     TranscriptionLanguage = "fil-PH"
	TRANSCRIPTIONLANGUAGE_FI_FI      TranscriptionLanguage = "fi-FI"
	TRANSCRIPTIONLANGUAGE_FR_BE      TranscriptionLanguage = "fr-BE"
	TRANSCRIPTIONLANGUAGE_FR_CA      TranscriptionLanguage = "fr-CA"
	TRANSCRIPTIONLANGUAGE_FR_CH      TranscriptionLanguage = "fr-CH"
	TRANSCRIPTIONLANGUAGE_FR_FR      TranscriptionLanguage = "fr-FR"
	TRANSCRIPTIONLANGUAGE_GL_ES      TranscriptionLanguage = "gl-ES"
	TRANSCRIPTIONLANGUAGE_KA_GE      TranscriptionLanguage = "ka-GE"
	TRANSCRIPTIONLANGUAGE_DE_AT      TranscriptionLanguage = "de-AT"
	TRANSCRIPTIONLANGUAGE_DE_CH      TranscriptionLanguage = "de-CH"
	TRANSCRIPTIONLANGUAGE_DE_DE      TranscriptionLanguage = "de-DE"
	TRANSCRIPTIONLANGUAGE_EL_GR      TranscriptionLanguage = "el-GR"
	TRANSCRIPTIONLANGUAGE_GU_IN      TranscriptionLanguage = "gu-IN"
	TRANSCRIPTIONLANGUAGE_HE_IL      TranscriptionLanguage = "he-IL"
	TRANSCRIPTIONLANGUAGE_HI_IN      TranscriptionLanguage = "hi-IN"
	TRANSCRIPTIONLANGUAGE_HU_HU      TranscriptionLanguage = "hu-HU"
	TRANSCRIPTIONLANGUAGE_IS_IS      TranscriptionLanguage = "is-IS"
	TRANSCRIPTIONLANGUAGE_ID_ID      TranscriptionLanguage = "id-ID"
	TRANSCRIPTIONLANGUAGE_GA_IE      TranscriptionLanguage = "ga-IE"
	TRANSCRIPTIONLANGUAGE_IT_CH      TranscriptionLanguage = "it-CH"
	TRANSCRIPTIONLANGUAGE_IT_IT      TranscriptionLanguage = "it-IT"
	TRANSCRIPTIONLANGUAGE_JA_JP      TranscriptionLanguage = "ja-JP"
	TRANSCRIPTIONLANGUAGE_JV_ID      TranscriptionLanguage = "jv-ID"
	TRANSCRIPTIONLANGUAGE_KN_IN      TranscriptionLanguage = "kn-IN"
	TRANSCRIPTIONLANGUAGE_KK_KZ      TranscriptionLanguage = "kk-KZ"
	TRANSCRIPTIONLANGUAGE_KM_KH      TranscriptionLanguage = "km-KH"
	TRANSCRIPTIONLANGUAGE_KO_KR      TranscriptionLanguage = "ko-KR"
	TRANSCRIPTIONLANGUAGE_LO_LA      TranscriptionLanguage = "lo-LA"
	TRANSCRIPTIONLANGUAGE_LV_LV      TranscriptionLanguage = "lv-LV"
	TRANSCRIPTIONLANGUAGE_LT_LT      TranscriptionLanguage = "lt-LT"
	TRANSCRIPTIONLANGUAGE_MK_MK      TranscriptionLanguage = "mk-MK"
	TRANSCRIPTIONLANGUAGE_MS_MY      TranscriptionLanguage = "ms-MY"
	TRANSCRIPTIONLANGUAGE_ML_IN      TranscriptionLanguage = "ml-IN"
	TRANSCRIPTIONLANGUAGE_MT_MT      TranscriptionLanguage = "mt-MT"
	TRANSCRIPTIONLANGUAGE_MR_IN      TranscriptionLanguage = "mr-IN"
	TRANSCRIPTIONLANGUAGE_MN_MN      TranscriptionLanguage = "mn-MN"
	TRANSCRIPTIONLANGUAGE_NE_NP      TranscriptionLanguage = "ne-NP"
	TRANSCRIPTIONLANGUAGE_NO_NO      TranscriptionLanguage = "no-NO"
	TRANSCRIPTIONLANGUAGE_FA_IR      TranscriptionLanguage = "fa-IR"
	TRANSCRIPTIONLANGUAGE_PL_PL      TranscriptionLanguage = "pl-PL"
	TRANSCRIPTIONLANGUAGE_PT_PT      TranscriptionLanguage = "pt-PT"
	TRANSCRIPTIONLANGUAGE_PT_BR      TranscriptionLanguage = "pt-BR"
	TRANSCRIPTIONLANGUAGE_PA_GURU_IN TranscriptionLanguage = "pa-Guru-IN"
	TRANSCRIPTIONLANGUAGE_RO_RO      TranscriptionLanguage = "ro-RO"
	TRANSCRIPTIONLANGUAGE_RU_RU      TranscriptionLanguage = "ru-RU"
	TRANSCRIPTIONLANGUAGE_SR_RS      TranscriptionLanguage = "sr-RS"
	TRANSCRIPTIONLANGUAGE_SI_LK      TranscriptionLanguage = "si-LK"
	TRANSCRIPTIONLANGUAGE_SK_SK      TranscriptionLanguage = "sk-SK"
	TRANSCRIPTIONLANGUAGE_SL_SI      TranscriptionLanguage = "sl-SI"
	TRANSCRIPTIONLANGUAGE_ES_BO      TranscriptionLanguage = "es-BO"
	TRANSCRIPTIONLANGUAGE_ES_AR      TranscriptionLanguage = "es-AR"
	TRANSCRIPTIONLANGUAGE_ES_CL      TranscriptionLanguage = "es-CL"
	TRANSCRIPTIONLANGUAGE_ES_CO      TranscriptionLanguage = "es-CO"
	TRANSCRIPTIONLANGUAGE_ES_CR      TranscriptionLanguage = "es-CR"
	TRANSCRIPTIONLANGUAGE_ES_CU      TranscriptionLanguage = "es-CU"
	TRANSCRIPTIONLANGUAGE_ES_DO      TranscriptionLanguage = "es-DO"
	TRANSCRIPTIONLANGUAGE_ES_EC      TranscriptionLanguage = "es-EC"
	TRANSCRIPTIONLANGUAGE_ES_ES      TranscriptionLanguage = "es-ES"
	TRANSCRIPTIONLANGUAGE_ES_GQ      TranscriptionLanguage = "es-GQ"
	TRANSCRIPTIONLANGUAGE_ES_GT      TranscriptionLanguage = "es-GT"
	TRANSCRIPTIONLANGUAGE_ES_HN      TranscriptionLanguage = "es-HN"
	TRANSCRIPTIONLANGUAGE_ES_MX      TranscriptionLanguage = "es-MX"
	TRANSCRIPTIONLANGUAGE_ES_NI      TranscriptionLanguage = "es-NI"
	TRANSCRIPTIONLANGUAGE_ES_PA      TranscriptionLanguage = "es-PA"
	TRANSCRIPTIONLANGUAGE_ES_PE      TranscriptionLanguage = "es-PE"
	TRANSCRIPTIONLANGUAGE_ES_PR      TranscriptionLanguage = "es-PR"
	TRANSCRIPTIONLANGUAGE_ES_PY      TranscriptionLanguage = "es-PY"
	TRANSCRIPTIONLANGUAGE_ES_SV      TranscriptionLanguage = "es-SV"
	TRANSCRIPTIONLANGUAGE_ES_US      TranscriptionLanguage = "es-US"
	TRANSCRIPTIONLANGUAGE_ES_UY      TranscriptionLanguage = "es-UY"
	TRANSCRIPTIONLANGUAGE_ES_VE      TranscriptionLanguage = "es-VE"
	TRANSCRIPTIONLANGUAGE_SU_ID      TranscriptionLanguage = "su-ID"
	TRANSCRIPTIONLANGUAGE_SW_TZ      TranscriptionLanguage = "sw-TZ"
	TRANSCRIPTIONLANGUAGE_SW_KE      TranscriptionLanguage = "sw-KE"
	TRANSCRIPTIONLANGUAGE_SV_SE      TranscriptionLanguage = "sv-SE"
	TRANSCRIPTIONLANGUAGE_TA_IN      TranscriptionLanguage = "ta-IN"
	TRANSCRIPTIONLANGUAGE_TA_LK      TranscriptionLanguage = "ta-LK"
	TRANSCRIPTIONLANGUAGE_TA_MY      TranscriptionLanguage = "ta-MY"
	TRANSCRIPTIONLANGUAGE_TA_SG      TranscriptionLanguage = "ta-SG"
	TRANSCRIPTIONLANGUAGE_TE_IN      TranscriptionLanguage = "te-IN"
	TRANSCRIPTIONLANGUAGE_TH_TH      TranscriptionLanguage = "th-TH"
	TRANSCRIPTIONLANGUAGE_TR_TR      TranscriptionLanguage = "tr-TR"
	TRANSCRIPTIONLANGUAGE_UK_UA      TranscriptionLanguage = "uk-UA"
	TRANSCRIPTIONLANGUAGE_UR_IN      TranscriptionLanguage = "ur-IN"
	TRANSCRIPTIONLANGUAGE_UR_PK      TranscriptionLanguage = "ur-PK"
	TRANSCRIPTIONLANGUAGE_UZ_UZ      TranscriptionLanguage = "uz-UZ"
	TRANSCRIPTIONLANGUAGE_VI_VN      TranscriptionLanguage = "vi-VN"
	TRANSCRIPTIONLANGUAGE_ZU_ZA      TranscriptionLanguage = "zu-ZA"
)

// All allowed values of TranscriptionLanguage enum
var AllowedTranscriptionLanguageEnumValues = []TranscriptionLanguage{
	"af-ZA",
	"sq-AL",
	"am-ET",
	"ar-KW",
	"ar-AE",
	"ar-BH",
	"ar-DZ",
	"ar-EG",
	"ar-IL",
	"ar-IQ",
	"ar-JO",
	"ar-LB",
	"ar-LY",
	"ar-MA",
	"ar-OM",
	"ar-PS",
	"ar-QA",
	"ar-SA",
	"ar-SY",
	"ar-TN",
	"ar-YE",
	"hy-AM",
	"az-AZ",
	"eu-ES",
	"bn-IN",
	"bn-BD",
	"bs-BA",
	"bg-BG",
	"my-MM",
	"ca-ES",
	"zh-CN",
	"zh-HK",
	"zh-TW",
	"hr-HR",
	"cs-CZ",
	"da-DK",
	"nl-NL",
	"nl-BE",
	"en-AU",
	"en-CA",
	"en-GB",
	"en-GH",
	"en-HK",
	"en-IE",
	"en-IN",
	"en-KE",
	"en-NG",
	"en-NZ",
	"en-PH",
	"en-PK",
	"en-SG",
	"en-TZ",
	"en-US",
	"en-ZA",
	"et-EE",
	"fil-PH",
	"fi-FI",
	"fr-BE",
	"fr-CA",
	"fr-CH",
	"fr-FR",
	"gl-ES",
	"ka-GE",
	"de-AT",
	"de-CH",
	"de-DE",
	"el-GR",
	"gu-IN",
	"he-IL",
	"hi-IN",
	"hu-HU",
	"is-IS",
	"id-ID",
	"ga-IE",
	"it-CH",
	"it-IT",
	"ja-JP",
	"jv-ID",
	"kn-IN",
	"kk-KZ",
	"km-KH",
	"ko-KR",
	"lo-LA",
	"lv-LV",
	"lt-LT",
	"mk-MK",
	"ms-MY",
	"ml-IN",
	"mt-MT",
	"mr-IN",
	"mn-MN",
	"ne-NP",
	"no-NO",
	"fa-IR",
	"pl-PL",
	"pt-PT",
	"pt-BR",
	"pa-Guru-IN",
	"ro-RO",
	"ru-RU",
	"sr-RS",
	"si-LK",
	"sk-SK",
	"sl-SI",
	"es-BO",
	"es-AR",
	"es-CL",
	"es-CO",
	"es-CR",
	"es-CU",
	"es-DO",
	"es-EC",
	"es-ES",
	"es-GQ",
	"es-GT",
	"es-HN",
	"es-MX",
	"es-NI",
	"es-PA",
	"es-PE",
	"es-PR",
	"es-PY",
	"es-SV",
	"es-US",
	"es-UY",
	"es-VE",
	"su-ID",
	"sw-TZ",
	"sw-KE",
	"sv-SE",
	"ta-IN",
	"ta-LK",
	"ta-MY",
	"ta-SG",
	"te-IN",
	"th-TH",
	"tr-TR",
	"uk-UA",
	"ur-IN",
	"ur-PK",
	"uz-UZ",
	"vi-VN",
	"zu-ZA",
}

func (v *TranscriptionLanguage) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TranscriptionLanguage(value)
	for _, existing := range AllowedTranscriptionLanguageEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TranscriptionLanguage", value)
}

// NewTranscriptionLanguageFromValue returns a pointer to a valid TranscriptionLanguage
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTranscriptionLanguageFromValue(v string) (*TranscriptionLanguage, error) {
	ev := TranscriptionLanguage(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TranscriptionLanguage: valid values are %v", v, AllowedTranscriptionLanguageEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TranscriptionLanguage) IsValid() bool {
	for _, existing := range AllowedTranscriptionLanguageEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TranscriptionLanguage value
func (v TranscriptionLanguage) Ptr() *TranscriptionLanguage {
	return &v
}

type NullableTranscriptionLanguage struct {
	value *TranscriptionLanguage
	isSet bool
}

func (v NullableTranscriptionLanguage) Get() *TranscriptionLanguage {
	return v.value
}

func (v *NullableTranscriptionLanguage) Set(val *TranscriptionLanguage) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscriptionLanguage) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscriptionLanguage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscriptionLanguage(val *TranscriptionLanguage) *NullableTranscriptionLanguage {
	return &NullableTranscriptionLanguage{value: val, isSet: true}
}

func (v NullableTranscriptionLanguage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscriptionLanguage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
