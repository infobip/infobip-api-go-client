/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FormsResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormsResponseContent{}

// FormsResponseContent struct for FormsResponseContent
type FormsResponseContent struct {
	// Form identifier
	Id string
	// Form name
	Name string
	// List of form fields
	Elements []FormsElement
	// Time when form was created
	CreatedAt *Time
	// Time when form was update last time
	UpdatedAt             *Time
	ActionAfterSubmission *FormsActionAfterSubmission
	// Can resubmit multiple times
	ResubmitEnabled bool
	FormType        FormsType
	FormStatus      FormsStatus
}

type _FormsResponseContent FormsResponseContent

// NewFormsResponseContent instantiates a new FormsResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFormsResponseContent(id string, name string, elements []FormsElement, resubmitEnabled bool, formType FormsType, formStatus FormsStatus) *FormsResponseContent {
	this := FormsResponseContent{}
	this.Id = id
	this.Name = name
	this.Elements = elements
	this.ResubmitEnabled = resubmitEnabled
	this.FormType = formType
	this.FormStatus = formStatus
	return &this
}

// NewFormsResponseContentWithDefaults instantiates a new FormsResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormsResponseContentWithDefaults() *FormsResponseContent {
	this := FormsResponseContent{}

	return &this
}

// GetId returns the Id field value
func (o *FormsResponseContent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FormsResponseContent) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *FormsResponseContent) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FormsResponseContent) SetName(v string) {
	o.Name = v
}

// GetElements returns the Elements field value
func (o *FormsResponseContent) GetElements() []FormsElement {
	if o == nil {
		var ret []FormsElement
		return ret
	}

	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetElementsOk() ([]FormsElement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Elements, true
}

// SetElements sets field value
func (o *FormsResponseContent) SetElements(v []FormsElement) {
	o.Elements = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FormsResponseContent) GetCreatedAt() Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetCreatedAtOk() (*Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FormsResponseContent) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given Time and assigns it to the CreatedAt field.
func (o *FormsResponseContent) SetCreatedAt(v Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FormsResponseContent) GetUpdatedAt() Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetUpdatedAtOk() (*Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FormsResponseContent) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given Time and assigns it to the UpdatedAt field.
func (o *FormsResponseContent) SetUpdatedAt(v Time) {
	o.UpdatedAt = &v
}

// GetActionAfterSubmission returns the ActionAfterSubmission field value if set, zero value otherwise.
func (o *FormsResponseContent) GetActionAfterSubmission() FormsActionAfterSubmission {
	if o == nil || IsNil(o.ActionAfterSubmission) {
		var ret FormsActionAfterSubmission
		return ret
	}
	return *o.ActionAfterSubmission
}

// GetActionAfterSubmissionOk returns a tuple with the ActionAfterSubmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetActionAfterSubmissionOk() (*FormsActionAfterSubmission, bool) {
	if o == nil || IsNil(o.ActionAfterSubmission) {
		return nil, false
	}
	return o.ActionAfterSubmission, true
}

// HasActionAfterSubmission returns a boolean if a field has been set.
func (o *FormsResponseContent) HasActionAfterSubmission() bool {
	if o != nil && !IsNil(o.ActionAfterSubmission) {
		return true
	}

	return false
}

// SetActionAfterSubmission gets a reference to the given FormsActionAfterSubmission and assigns it to the ActionAfterSubmission field.
func (o *FormsResponseContent) SetActionAfterSubmission(v FormsActionAfterSubmission) {
	o.ActionAfterSubmission = &v
}

// GetResubmitEnabled returns the ResubmitEnabled field value
func (o *FormsResponseContent) GetResubmitEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ResubmitEnabled
}

// GetResubmitEnabledOk returns a tuple with the ResubmitEnabled field value
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetResubmitEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResubmitEnabled, true
}

// SetResubmitEnabled sets field value
func (o *FormsResponseContent) SetResubmitEnabled(v bool) {
	o.ResubmitEnabled = v
}

// GetFormType returns the FormType field value
func (o *FormsResponseContent) GetFormType() FormsType {
	if o == nil {
		var ret FormsType
		return ret
	}

	return o.FormType
}

// GetFormTypeOk returns a tuple with the FormType field value
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetFormTypeOk() (*FormsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormType, true
}

// SetFormType sets field value
func (o *FormsResponseContent) SetFormType(v FormsType) {
	o.FormType = v
}

// GetFormStatus returns the FormStatus field value
func (o *FormsResponseContent) GetFormStatus() FormsStatus {
	if o == nil {
		var ret FormsStatus
		return ret
	}

	return o.FormStatus
}

// GetFormStatusOk returns a tuple with the FormStatus field value
// and a boolean to check if the value has been set.
func (o *FormsResponseContent) GetFormStatusOk() (*FormsStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormStatus, true
}

// SetFormStatus sets field value
func (o *FormsResponseContent) SetFormStatus(v FormsStatus) {
	o.FormStatus = v
}

func (o FormsResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormsResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["elements"] = o.Elements
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.ActionAfterSubmission) {
		toSerialize["actionAfterSubmission"] = o.ActionAfterSubmission
	}
	toSerialize["resubmitEnabled"] = o.ResubmitEnabled
	toSerialize["formType"] = o.FormType
	toSerialize["formStatus"] = o.FormStatus
	return toSerialize, nil
}

type NullableFormsResponseContent struct {
	value *FormsResponseContent
	isSet bool
}

func (v NullableFormsResponseContent) Get() *FormsResponseContent {
	return v.value
}

func (v *NullableFormsResponseContent) Set(val *FormsResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableFormsResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableFormsResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormsResponseContent(val *FormsResponseContent) *NullableFormsResponseContent {
	return &NullableFormsResponseContent{value: val, isSet: true}
}

func (v NullableFormsResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormsResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
