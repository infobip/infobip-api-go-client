/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SeenStatusReporting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeenStatusReporting{}

// SeenStatusReporting Provides options for configuring the seen report behavior.
type SeenStatusReporting struct {
	// The URL on your call back server where a seen report will be sent.
	Url *string
}

// NewSeenStatusReporting instantiates a new SeenStatusReporting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeenStatusReporting() *SeenStatusReporting {
	this := SeenStatusReporting{}
	return &this
}

// NewSeenStatusReportingWithDefaults instantiates a new SeenStatusReporting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeenStatusReportingWithDefaults() *SeenStatusReporting {
	this := SeenStatusReporting{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SeenStatusReporting) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeenStatusReporting) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SeenStatusReporting) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SeenStatusReporting) SetUrl(v string) {
	o.Url = &v
}

func (o SeenStatusReporting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeenStatusReporting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableSeenStatusReporting struct {
	value *SeenStatusReporting
	isSet bool
}

func (v NullableSeenStatusReporting) Get() *SeenStatusReporting {
	return v.value
}

func (v *NullableSeenStatusReporting) Set(val *SeenStatusReporting) {
	v.value = val
	v.isSet = true
}

func (v NullableSeenStatusReporting) IsSet() bool {
	return v.isSet
}

func (v *NullableSeenStatusReporting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeenStatusReporting(val *SeenStatusReporting) *NullableSeenStatusReporting {
	return &NullableSeenStatusReporting{value: val, isSet: true}
}

func (v NullableSeenStatusReporting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeenStatusReporting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
