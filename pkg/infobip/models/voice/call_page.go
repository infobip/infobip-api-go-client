/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallPage{}

// CallPage struct for CallPage
type CallPage struct {
	// The list of the results for this page.
	Results []Call
	Paging  *PageInfo
}

// NewCallPage instantiates a new CallPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewCallPage() *CallPage {
	this := CallPage{}
	return &this
}

// NewCallPageWithDefaults instantiates a new CallPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallPageWithDefaults() *CallPage {
	this := CallPage{}

	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *CallPage) GetResults() []Call {
	if o == nil || IsNil(o.Results) {
		var ret []Call
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallPage) GetResultsOk() ([]Call, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *CallPage) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []Call and assigns it to the Results field.
func (o *CallPage) SetResults(v []Call) {
	o.Results = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *CallPage) GetPaging() PageInfo {
	if o == nil || IsNil(o.Paging) {
		var ret PageInfo
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallPage) GetPagingOk() (*PageInfo, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *CallPage) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given PageInfo and assigns it to the Paging field.
func (o *CallPage) SetPaging(v PageInfo) {
	o.Paging = &v
}

func (o CallPage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

type NullableCallPage struct {
	value *CallPage
	isSet bool
}

func (v NullableCallPage) Get() *CallPage {
	return v.value
}

func (v *NullableCallPage) Set(val *CallPage) {
	v.value = val
	v.isSet = true
}

func (v NullableCallPage) IsSet() bool {
	return v.isSet
}

func (v *NullableCallPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallPage(val *CallPage) *NullableCallPage {
	return &NullableCallPage{value: val, isSet: true}
}

func (v NullableCallPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
