/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowPhoneContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowPhoneContact{}

// FlowPhoneContact A list of person's phone numbers. Max 100 numbers per person.
type FlowPhoneContact struct {
	// Person's phone number. Must be in [international format](https://en.wikipedia.org/wiki/E.164) and cannot exceed 50 characters. One person can have up to 100 phone numbers.
	Number *string
}

// NewFlowPhoneContact instantiates a new FlowPhoneContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowPhoneContact() *FlowPhoneContact {
	this := FlowPhoneContact{}
	return &this
}

// NewFlowPhoneContactWithDefaults instantiates a new FlowPhoneContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowPhoneContactWithDefaults() *FlowPhoneContact {
	this := FlowPhoneContact{}

	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *FlowPhoneContact) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPhoneContact) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *FlowPhoneContact) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *FlowPhoneContact) SetNumber(v string) {
	o.Number = &v
}

func (o FlowPhoneContact) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowPhoneContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	return toSerialize, nil
}

type NullableFlowPhoneContact struct {
	value *FlowPhoneContact
	isSet bool
}

func (v NullableFlowPhoneContact) Get() *FlowPhoneContact {
	return v.value
}

func (v *NullableFlowPhoneContact) Set(val *FlowPhoneContact) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowPhoneContact) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowPhoneContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowPhoneContact(val *FlowPhoneContact) *NullableFlowPhoneContact {
	return &NullableFlowPhoneContact{value: val, isSet: true}
}

func (v NullableFlowPhoneContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowPhoneContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
