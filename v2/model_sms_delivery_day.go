/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
	"fmt"
)

// SmsDeliveryDay Days of the week which are included in the delivery time window. At least one day must be provided. Separate multiple days with a comma.
type SmsDeliveryDay string

// List of SmsDeliveryDay
const (
	SMSDELIVERYDAY_MONDAY    SmsDeliveryDay = "MONDAY"
	SMSDELIVERYDAY_TUESDAY   SmsDeliveryDay = "TUESDAY"
	SMSDELIVERYDAY_WEDNESDAY SmsDeliveryDay = "WEDNESDAY"
	SMSDELIVERYDAY_THURSDAY  SmsDeliveryDay = "THURSDAY"
	SMSDELIVERYDAY_FRIDAY    SmsDeliveryDay = "FRIDAY"
	SMSDELIVERYDAY_SATURDAY  SmsDeliveryDay = "SATURDAY"
	SMSDELIVERYDAY_SUNDAY    SmsDeliveryDay = "SUNDAY"
)

func (v *SmsDeliveryDay) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SmsDeliveryDay(value)
	for _, existing := range []SmsDeliveryDay{"MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SmsDeliveryDay", value)
}

// Ptr returns reference to SmsDeliveryDay value
func (v SmsDeliveryDay) Ptr() *SmsDeliveryDay {
	return &v
}

type NullableSmsDeliveryDay struct {
	value *SmsDeliveryDay
	isSet bool
}

func (v NullableSmsDeliveryDay) Get() *SmsDeliveryDay {
	return v.value
}

func (v *NullableSmsDeliveryDay) Set(val *SmsDeliveryDay) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsDeliveryDay) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsDeliveryDay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsDeliveryDay(val *SmsDeliveryDay) *NullableSmsDeliveryDay {
	return &NullableSmsDeliveryDay{value: val, isSet: true}
}

func (v NullableSmsDeliveryDay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsDeliveryDay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
