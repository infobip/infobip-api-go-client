/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the IpPoolDetailResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpPoolDetailResponse{}

// IpPoolDetailResponse struct for IpPoolDetailResponse
type IpPoolDetailResponse struct {
	// IP pool identifier.
	Id string
	// IP pool name.
	Name string
	Ips  []IpResponse
}

type _IpPoolDetailResponse IpPoolDetailResponse

// NewIpPoolDetailResponse instantiates a new IpPoolDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewIpPoolDetailResponse(id string, name string, ips []IpResponse) *IpPoolDetailResponse {
	this := IpPoolDetailResponse{}
	this.Id = id
	this.Name = name
	this.Ips = ips
	return &this
}

// NewIpPoolDetailResponseWithDefaults instantiates a new IpPoolDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpPoolDetailResponseWithDefaults() *IpPoolDetailResponse {
	this := IpPoolDetailResponse{}

	return &this
}

// GetId returns the Id field value
func (o *IpPoolDetailResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IpPoolDetailResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IpPoolDetailResponse) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *IpPoolDetailResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IpPoolDetailResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IpPoolDetailResponse) SetName(v string) {
	o.Name = v
}

// GetIps returns the Ips field value
func (o *IpPoolDetailResponse) GetIps() []IpResponse {
	if o == nil {
		var ret []IpResponse
		return ret
	}

	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value
// and a boolean to check if the value has been set.
func (o *IpPoolDetailResponse) GetIpsOk() ([]IpResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ips, true
}

// SetIps sets field value
func (o *IpPoolDetailResponse) SetIps(v []IpResponse) {
	o.Ips = v
}

func (o IpPoolDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpPoolDetailResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["ips"] = o.Ips
	return toSerialize, nil
}

type NullableIpPoolDetailResponse struct {
	value *IpPoolDetailResponse
	isSet bool
}

func (v NullableIpPoolDetailResponse) Get() *IpPoolDetailResponse {
	return v.value
}

func (v *NullableIpPoolDetailResponse) Set(val *IpPoolDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIpPoolDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIpPoolDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpPoolDetailResponse(val *IpPoolDetailResponse) *NullableIpPoolDetailResponse {
	return &NullableIpPoolDetailResponse{value: val, isSet: true}
}

func (v NullableIpPoolDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpPoolDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
