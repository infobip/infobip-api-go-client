/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageListBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageListBody{}

// MessageListBody struct for MessageListBody
type MessageListBody struct {
	Type MessageBodyType
	// Text to be sent.
	Text string
	// Subtext to be sent.
	Subtext *string
	// URL of the image.
	ImageUrl *string
	// Section's list.
	Sections []MessageListSection
}

type _MessageListBody MessageListBody

// NewMessageListBody instantiates a new MessageListBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageListBody(text string, sections []MessageListSection) *MessageListBody {
	this := MessageListBody{}
	this.Type = "LIST"
	this.Text = text
	this.Sections = sections
	return &this
}

// NewMessageListBodyWithDefaults instantiates a new MessageListBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageListBodyWithDefaults() *MessageListBody {
	this := MessageListBody{}
	this.Type = "LIST"
	return &this
}

// GetText returns the Text field value
func (o *MessageListBody) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MessageListBody) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MessageListBody) SetText(v string) {
	o.Text = v
}

// GetSubtext returns the Subtext field value if set, zero value otherwise.
func (o *MessageListBody) GetSubtext() string {
	if o == nil || IsNil(o.Subtext) {
		var ret string
		return ret
	}
	return *o.Subtext
}

// GetSubtextOk returns a tuple with the Subtext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageListBody) GetSubtextOk() (*string, bool) {
	if o == nil || IsNil(o.Subtext) {
		return nil, false
	}
	return o.Subtext, true
}

// HasSubtext returns a boolean if a field has been set.
func (o *MessageListBody) HasSubtext() bool {
	if o != nil && !IsNil(o.Subtext) {
		return true
	}

	return false
}

// SetSubtext gets a reference to the given string and assigns it to the Subtext field.
func (o *MessageListBody) SetSubtext(v string) {
	o.Subtext = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *MessageListBody) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageListBody) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *MessageListBody) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *MessageListBody) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetSections returns the Sections field value
func (o *MessageListBody) GetSections() []MessageListSection {
	if o == nil {
		var ret []MessageListSection
		return ret
	}

	return o.Sections
}

// GetSectionsOk returns a tuple with the Sections field value
// and a boolean to check if the value has been set.
func (o *MessageListBody) GetSectionsOk() ([]MessageListSection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sections, true
}

// SetSections sets field value
func (o *MessageListBody) SetSections(v []MessageListSection) {
	o.Sections = v
}

func (o MessageListBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageListBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["text"] = o.Text
	if !IsNil(o.Subtext) {
		toSerialize["subtext"] = o.Subtext
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["imageUrl"] = o.ImageUrl
	}
	toSerialize["sections"] = o.Sections
	return toSerialize, nil
}

type NullableMessageListBody struct {
	value *MessageListBody
	isSet bool
}

func (v NullableMessageListBody) Get() *MessageListBody {
	return v.value
}

func (v *NullableMessageListBody) Set(val *MessageListBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageListBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageListBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageListBody(val *MessageListBody) *NullableMessageListBody {
	return &NullableMessageListBody{value: val, isSet: true}
}

func (v NullableMessageListBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageListBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
