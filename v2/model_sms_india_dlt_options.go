/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsIndiaDltOptions Distributed Ledger Technology (DLT) specific parameters required for sending SMS to phone numbers registered in India.
type SmsIndiaDltOptions struct {
	// Registered DLT content template ID which matches message you are sending.
	ContentTemplateId *string `json:"contentTemplateId,omitempty"`
	// Your assigned DLT principal entity ID.
	PrincipalEntityId string `json:"principalEntityId"`
}

// NewSmsIndiaDltOptions instantiates a new SmsIndiaDltOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsIndiaDltOptions(principalEntityId string) *SmsIndiaDltOptions {
	this := SmsIndiaDltOptions{}
	this.PrincipalEntityId = principalEntityId
	return &this
}

// NewSmsIndiaDltOptionsWithDefaults instantiates a new SmsIndiaDltOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsIndiaDltOptionsWithDefaults() *SmsIndiaDltOptions {
	this := SmsIndiaDltOptions{}
	return &this
}

// GetContentTemplateId returns the ContentTemplateId field value if set, zero value otherwise.
func (o *SmsIndiaDltOptions) GetContentTemplateId() string {
	if o == nil || o.ContentTemplateId == nil {
		var ret string
		return ret
	}
	return *o.ContentTemplateId
}

// GetContentTemplateIdOk returns a tuple with the ContentTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsIndiaDltOptions) GetContentTemplateIdOk() (*string, bool) {
	if o == nil || o.ContentTemplateId == nil {
		return nil, false
	}
	return o.ContentTemplateId, true
}

// HasContentTemplateId returns a boolean if a field has been set.
func (o *SmsIndiaDltOptions) HasContentTemplateId() bool {
	if o != nil && o.ContentTemplateId != nil {
		return true
	}

	return false
}

// SetContentTemplateId gets a reference to the given string and assigns it to the ContentTemplateId field.
func (o *SmsIndiaDltOptions) SetContentTemplateId(v string) {
	o.ContentTemplateId = &v
}

// GetPrincipalEntityId returns the PrincipalEntityId field value
func (o *SmsIndiaDltOptions) GetPrincipalEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrincipalEntityId
}

// GetPrincipalEntityIdOk returns a tuple with the PrincipalEntityId field value
// and a boolean to check if the value has been set.
func (o *SmsIndiaDltOptions) GetPrincipalEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrincipalEntityId, true
}

// SetPrincipalEntityId sets field value
func (o *SmsIndiaDltOptions) SetPrincipalEntityId(v string) {
	o.PrincipalEntityId = v
}

func (o SmsIndiaDltOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentTemplateId != nil {
		toSerialize["contentTemplateId"] = o.ContentTemplateId
	}
	if true {
		toSerialize["principalEntityId"] = o.PrincipalEntityId
	}
	return json.Marshal(toSerialize)
}

type NullableSmsIndiaDltOptions struct {
	value *SmsIndiaDltOptions
	isSet bool
}

func (v NullableSmsIndiaDltOptions) Get() *SmsIndiaDltOptions {
	return v.value
}

func (v *NullableSmsIndiaDltOptions) Set(val *SmsIndiaDltOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsIndiaDltOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsIndiaDltOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsIndiaDltOptions(val *SmsIndiaDltOptions) *NullableSmsIndiaDltOptions {
	return &NullableSmsIndiaDltOptions{value: val, isSet: true}
}

func (v NullableSmsIndiaDltOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsIndiaDltOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
