/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the StartTranscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartTranscriptionRequest{}

// StartTranscriptionRequest struct for StartTranscriptionRequest
type StartTranscriptionRequest struct {
	Transcription *Transcription
}

// NewStartTranscriptionRequest instantiates a new StartTranscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewStartTranscriptionRequest() *StartTranscriptionRequest {
	this := StartTranscriptionRequest{}
	return &this
}

// NewStartTranscriptionRequestWithDefaults instantiates a new StartTranscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartTranscriptionRequestWithDefaults() *StartTranscriptionRequest {
	this := StartTranscriptionRequest{}

	return &this
}

// GetTranscription returns the Transcription field value if set, zero value otherwise.
func (o *StartTranscriptionRequest) GetTranscription() Transcription {
	if o == nil || IsNil(o.Transcription) {
		var ret Transcription
		return ret
	}
	return *o.Transcription
}

// GetTranscriptionOk returns a tuple with the Transcription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartTranscriptionRequest) GetTranscriptionOk() (*Transcription, bool) {
	if o == nil || IsNil(o.Transcription) {
		return nil, false
	}
	return o.Transcription, true
}

// HasTranscription returns a boolean if a field has been set.
func (o *StartTranscriptionRequest) HasTranscription() bool {
	if o != nil && !IsNil(o.Transcription) {
		return true
	}

	return false
}

// SetTranscription gets a reference to the given Transcription and assigns it to the Transcription field.
func (o *StartTranscriptionRequest) SetTranscription(v Transcription) {
	o.Transcription = &v
}

func (o StartTranscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartTranscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transcription) {
		toSerialize["transcription"] = o.Transcription
	}
	return toSerialize, nil
}

type NullableStartTranscriptionRequest struct {
	value *StartTranscriptionRequest
	isSet bool
}

func (v NullableStartTranscriptionRequest) Get() *StartTranscriptionRequest {
	return v.value
}

func (v *NullableStartTranscriptionRequest) Set(val *StartTranscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartTranscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartTranscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartTranscriptionRequest(val *StartTranscriptionRequest) *NullableStartTranscriptionRequest {
	return &NullableStartTranscriptionRequest{value: val, isSet: true}
}

func (v NullableStartTranscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartTranscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
