/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MediaStream type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaStream{}

// MediaStream struct for MediaStream
type MediaStream struct {
	AudioProperties *MediaStreamAudioProperties
}

// NewMediaStream instantiates a new MediaStream object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewMediaStream() *MediaStream {
	this := MediaStream{}
	return &this
}

// NewMediaStreamWithDefaults instantiates a new MediaStream object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaStreamWithDefaults() *MediaStream {
	this := MediaStream{}

	return &this
}

// GetAudioProperties returns the AudioProperties field value if set, zero value otherwise.
func (o *MediaStream) GetAudioProperties() MediaStreamAudioProperties {
	if o == nil || IsNil(o.AudioProperties) {
		var ret MediaStreamAudioProperties
		return ret
	}
	return *o.AudioProperties
}

// GetAudioPropertiesOk returns a tuple with the AudioProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStream) GetAudioPropertiesOk() (*MediaStreamAudioProperties, bool) {
	if o == nil || IsNil(o.AudioProperties) {
		return nil, false
	}
	return o.AudioProperties, true
}

// HasAudioProperties returns a boolean if a field has been set.
func (o *MediaStream) HasAudioProperties() bool {
	if o != nil && !IsNil(o.AudioProperties) {
		return true
	}

	return false
}

// SetAudioProperties gets a reference to the given MediaStreamAudioProperties and assigns it to the AudioProperties field.
func (o *MediaStream) SetAudioProperties(v MediaStreamAudioProperties) {
	o.AudioProperties = &v
}

func (o MediaStream) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaStream) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioProperties) {
		toSerialize["audioProperties"] = o.AudioProperties
	}
	return toSerialize, nil
}

type NullableMediaStream struct {
	value *MediaStream
	isSet bool
}

func (v NullableMediaStream) Get() *MediaStream {
	return v.value
}

func (v *NullableMediaStream) Set(val *MediaStream) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaStream) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaStream) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaStream(val *MediaStream) *NullableMediaStream {
	return &NullableMediaStream{value: val, isSet: true}
}

func (v NullableMediaStream) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaStream) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
