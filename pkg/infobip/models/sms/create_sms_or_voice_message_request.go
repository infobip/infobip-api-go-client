/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CreateSmsOrVoiceMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSmsOrVoiceMessageRequest{}

// CreateSmsOrVoiceMessageRequest struct for CreateSmsOrVoiceMessageRequest
type CreateSmsOrVoiceMessageRequest struct {
	Language *TfaLanguage
	// Content of the message being sent which contains at minimum one placeholder for a PIN code (`{{pin}}`). Placeholder format is `{{placeholderName}}`.
	MessageText string
	// PIN code length.
	PinLength *int32
	PinType   PinType
	Regional  *RegionalOptions
	// If the PIN is sent as a voice message, the DTMF code allows the recipient to replay the message.
	RepeatDTMF *string
	// The name that will appear as the sender of the 2FA message (Example: CompanyName).
	SenderId *string
	// The speed of narration for messages sent as voice. Supported range is from `0.5` to `2`.
	SpeechRate *float64
	// Defines the voice that will be used for the chosen language (example: Joanna). For each supported language, we may offer different voices (learn more [here](https://www.infobip.com/docs/voice-and-video/reference#text-to-speech-languages)). You can use this [method](https://www.infobip.com/docs/api/channels/voice/voice-message/get-voices) to retrieve all voices for the given language. If not defined, it will default to the standard voice for the selected language (if available). If the standard voice is not available, the request will fail. To avoid that, you can choose one of the neural voices (charges will apply).
	VoiceName *string
}

type _CreateSmsOrVoiceMessageRequest CreateSmsOrVoiceMessageRequest

// NewCreateSmsOrVoiceMessageRequest instantiates a new CreateSmsOrVoiceMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSmsOrVoiceMessageRequest(messageText string, pinType PinType) *CreateSmsOrVoiceMessageRequest {
	this := CreateSmsOrVoiceMessageRequest{}
	this.MessageText = messageText
	this.PinType = pinType
	return &this
}

// NewCreateSmsOrVoiceMessageRequestWithDefaults instantiates a new CreateSmsOrVoiceMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSmsOrVoiceMessageRequestWithDefaults() *CreateSmsOrVoiceMessageRequest {
	this := CreateSmsOrVoiceMessageRequest{}
	return &this
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetLanguage() TfaLanguage {
	if o == nil || IsNil(o.Language) {
		var ret TfaLanguage
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetLanguageOk() (*TfaLanguage, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given TfaLanguage and assigns it to the Language field.
func (o *CreateSmsOrVoiceMessageRequest) SetLanguage(v TfaLanguage) {
	o.Language = &v
}

// GetMessageText returns the MessageText field value
func (o *CreateSmsOrVoiceMessageRequest) GetMessageText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageText
}

// GetMessageTextOk returns a tuple with the MessageText field value
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetMessageTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageText, true
}

// SetMessageText sets field value
func (o *CreateSmsOrVoiceMessageRequest) SetMessageText(v string) {
	o.MessageText = v
}

// GetPinLength returns the PinLength field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetPinLength() int32 {
	if o == nil || IsNil(o.PinLength) {
		var ret int32
		return ret
	}
	return *o.PinLength
}

// GetPinLengthOk returns a tuple with the PinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetPinLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PinLength) {
		return nil, false
	}
	return o.PinLength, true
}

// HasPinLength returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasPinLength() bool {
	if o != nil && !IsNil(o.PinLength) {
		return true
	}

	return false
}

// SetPinLength gets a reference to the given int32 and assigns it to the PinLength field.
func (o *CreateSmsOrVoiceMessageRequest) SetPinLength(v int32) {
	o.PinLength = &v
}

// GetPinType returns the PinType field value
func (o *CreateSmsOrVoiceMessageRequest) GetPinType() PinType {
	if o == nil {
		var ret PinType
		return ret
	}

	return o.PinType
}

// GetPinTypeOk returns a tuple with the PinType field value
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetPinTypeOk() (*PinType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PinType, true
}

// SetPinType sets field value
func (o *CreateSmsOrVoiceMessageRequest) SetPinType(v PinType) {
	o.PinType = v
}

// GetRegional returns the Regional field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetRegional() RegionalOptions {
	if o == nil || IsNil(o.Regional) {
		var ret RegionalOptions
		return ret
	}
	return *o.Regional
}

// GetRegionalOk returns a tuple with the Regional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetRegionalOk() (*RegionalOptions, bool) {
	if o == nil || IsNil(o.Regional) {
		return nil, false
	}
	return o.Regional, true
}

// HasRegional returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasRegional() bool {
	if o != nil && !IsNil(o.Regional) {
		return true
	}

	return false
}

// SetRegional gets a reference to the given RegionalOptions and assigns it to the Regional field.
func (o *CreateSmsOrVoiceMessageRequest) SetRegional(v RegionalOptions) {
	o.Regional = &v
}

// GetRepeatDTMF returns the RepeatDTMF field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetRepeatDTMF() string {
	if o == nil || IsNil(o.RepeatDTMF) {
		var ret string
		return ret
	}
	return *o.RepeatDTMF
}

// GetRepeatDTMFOk returns a tuple with the RepeatDTMF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetRepeatDTMFOk() (*string, bool) {
	if o == nil || IsNil(o.RepeatDTMF) {
		return nil, false
	}
	return o.RepeatDTMF, true
}

// HasRepeatDTMF returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasRepeatDTMF() bool {
	if o != nil && !IsNil(o.RepeatDTMF) {
		return true
	}

	return false
}

// SetRepeatDTMF gets a reference to the given string and assigns it to the RepeatDTMF field.
func (o *CreateSmsOrVoiceMessageRequest) SetRepeatDTMF(v string) {
	o.RepeatDTMF = &v
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetSenderId() string {
	if o == nil || IsNil(o.SenderId) {
		var ret string
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetSenderIdOk() (*string, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given string and assigns it to the SenderId field.
func (o *CreateSmsOrVoiceMessageRequest) SetSenderId(v string) {
	o.SenderId = &v
}

// GetSpeechRate returns the SpeechRate field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetSpeechRate() float64 {
	if o == nil || IsNil(o.SpeechRate) {
		var ret float64
		return ret
	}
	return *o.SpeechRate
}

// GetSpeechRateOk returns a tuple with the SpeechRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetSpeechRateOk() (*float64, bool) {
	if o == nil || IsNil(o.SpeechRate) {
		return nil, false
	}
	return o.SpeechRate, true
}

// HasSpeechRate returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasSpeechRate() bool {
	if o != nil && !IsNil(o.SpeechRate) {
		return true
	}

	return false
}

// SetSpeechRate gets a reference to the given float64 and assigns it to the SpeechRate field.
func (o *CreateSmsOrVoiceMessageRequest) SetSpeechRate(v float64) {
	o.SpeechRate = &v
}

// GetVoiceName returns the VoiceName field value if set, zero value otherwise.
func (o *CreateSmsOrVoiceMessageRequest) GetVoiceName() string {
	if o == nil || IsNil(o.VoiceName) {
		var ret string
		return ret
	}
	return *o.VoiceName
}

// GetVoiceNameOk returns a tuple with the VoiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSmsOrVoiceMessageRequest) GetVoiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.VoiceName) {
		return nil, false
	}
	return o.VoiceName, true
}

// HasVoiceName returns a boolean if a field has been set.
func (o *CreateSmsOrVoiceMessageRequest) HasVoiceName() bool {
	if o != nil && !IsNil(o.VoiceName) {
		return true
	}

	return false
}

// SetVoiceName gets a reference to the given string and assigns it to the VoiceName field.
func (o *CreateSmsOrVoiceMessageRequest) SetVoiceName(v string) {
	o.VoiceName = &v
}

func (o CreateSmsOrVoiceMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSmsOrVoiceMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	toSerialize["messageText"] = o.MessageText
	if !IsNil(o.PinLength) {
		toSerialize["pinLength"] = o.PinLength
	}
	toSerialize["pinType"] = o.PinType
	if !IsNil(o.Regional) {
		toSerialize["regional"] = o.Regional
	}
	if !IsNil(o.RepeatDTMF) {
		toSerialize["repeatDTMF"] = o.RepeatDTMF
	}
	if !IsNil(o.SenderId) {
		toSerialize["senderId"] = o.SenderId
	}
	if !IsNil(o.SpeechRate) {
		toSerialize["speechRate"] = o.SpeechRate
	}
	if !IsNil(o.VoiceName) {
		toSerialize["voiceName"] = o.VoiceName
	}
	return toSerialize, nil
}

type NullableCreateSmsOrVoiceMessageRequest struct {
	value *CreateSmsOrVoiceMessageRequest
	isSet bool
}

func (v NullableCreateSmsOrVoiceMessageRequest) Get() *CreateSmsOrVoiceMessageRequest {
	return v.value
}

func (v *NullableCreateSmsOrVoiceMessageRequest) Set(val *CreateSmsOrVoiceMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSmsOrVoiceMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSmsOrVoiceMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSmsOrVoiceMessageRequest(val *CreateSmsOrVoiceMessageRequest) *NullableCreateSmsOrVoiceMessageRequest {
	return &NullableCreateSmsOrVoiceMessageRequest{value: val, isSet: true}
}

func (v NullableCreateSmsOrVoiceMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSmsOrVoiceMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
