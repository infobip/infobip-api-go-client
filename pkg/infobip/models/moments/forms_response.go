/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FormsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormsResponse{}

// FormsResponse struct for FormsResponse
type FormsResponse struct {
	// Forms list
	Forms []FormsResponseContent
	// Offset from beginning of list of available forms
	Offset *int32
	// Number of returned forms
	Limit *int32
	// Total number of available forms
	Total *int64
}

type _FormsResponse FormsResponse

// NewFormsResponse instantiates a new FormsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFormsResponse(forms []FormsResponseContent) *FormsResponse {
	this := FormsResponse{}
	this.Forms = forms
	return &this
}

// NewFormsResponseWithDefaults instantiates a new FormsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormsResponseWithDefaults() *FormsResponse {
	this := FormsResponse{}

	return &this
}

// GetForms returns the Forms field value
func (o *FormsResponse) GetForms() []FormsResponseContent {
	if o == nil {
		var ret []FormsResponseContent
		return ret
	}

	return o.Forms
}

// GetFormsOk returns a tuple with the Forms field value
// and a boolean to check if the value has been set.
func (o *FormsResponse) GetFormsOk() ([]FormsResponseContent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Forms, true
}

// SetForms sets field value
func (o *FormsResponse) SetForms(v []FormsResponseContent) {
	o.Forms = v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *FormsResponse) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsResponse) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *FormsResponse) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *FormsResponse) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *FormsResponse) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsResponse) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *FormsResponse) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *FormsResponse) SetLimit(v int32) {
	o.Limit = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *FormsResponse) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsResponse) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *FormsResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *FormsResponse) SetTotal(v int64) {
	o.Total = &v
}

func (o FormsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["forms"] = o.Forms
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableFormsResponse struct {
	value *FormsResponse
	isSet bool
}

func (v NullableFormsResponse) Get() *FormsResponse {
	return v.value
}

func (v *NullableFormsResponse) Set(val *FormsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFormsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFormsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormsResponse(val *FormsResponse) *NullableFormsResponse {
	return &NullableFormsResponse{value: val, isSet: true}
}

func (v NullableFormsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
