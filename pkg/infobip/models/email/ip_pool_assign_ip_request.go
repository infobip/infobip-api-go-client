/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the IpPoolAssignIpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpPoolAssignIpRequest{}

// IpPoolAssignIpRequest struct for IpPoolAssignIpRequest
type IpPoolAssignIpRequest struct {
	// Dedicated IP identifier.
	IpId string
}

type _IpPoolAssignIpRequest IpPoolAssignIpRequest

// NewIpPoolAssignIpRequest instantiates a new IpPoolAssignIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewIpPoolAssignIpRequest(ipId string) *IpPoolAssignIpRequest {
	this := IpPoolAssignIpRequest{}
	this.IpId = ipId
	return &this
}

// NewIpPoolAssignIpRequestWithDefaults instantiates a new IpPoolAssignIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpPoolAssignIpRequestWithDefaults() *IpPoolAssignIpRequest {
	this := IpPoolAssignIpRequest{}

	return &this
}

// GetIpId returns the IpId field value
func (o *IpPoolAssignIpRequest) GetIpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpId
}

// GetIpIdOk returns a tuple with the IpId field value
// and a boolean to check if the value has been set.
func (o *IpPoolAssignIpRequest) GetIpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpId, true
}

// SetIpId sets field value
func (o *IpPoolAssignIpRequest) SetIpId(v string) {
	o.IpId = v
}

func (o IpPoolAssignIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpPoolAssignIpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ipId"] = o.IpId
	return toSerialize, nil
}

type NullableIpPoolAssignIpRequest struct {
	value *IpPoolAssignIpRequest
	isSet bool
}

func (v NullableIpPoolAssignIpRequest) Get() *IpPoolAssignIpRequest {
	return v.value
}

func (v *NullableIpPoolAssignIpRequest) Set(val *IpPoolAssignIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIpPoolAssignIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIpPoolAssignIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpPoolAssignIpRequest(val *IpPoolAssignIpRequest) *NullableIpPoolAssignIpRequest {
	return &NullableIpPoolAssignIpRequest{value: val, isSet: true}
}

func (v NullableIpPoolAssignIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpPoolAssignIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
