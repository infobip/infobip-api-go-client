/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SpeechCaptureRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpeechCaptureRequest{}

// SpeechCaptureRequest struct for SpeechCaptureRequest
type SpeechCaptureRequest struct {
	Language TranscriptionLanguage
	// The maximum duration of speech capture.
	Timeout int32
	// The silence duration before terminating the speech capture after speech has been detected.
	MaxSilence *int32
	// Array of key-phrases used for matching capturing speech.
	KeyPhrases []string
}

type _SpeechCaptureRequest SpeechCaptureRequest

// NewSpeechCaptureRequest instantiates a new SpeechCaptureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewSpeechCaptureRequest(language TranscriptionLanguage, timeout int32, keyPhrases []string) *SpeechCaptureRequest {
	this := SpeechCaptureRequest{}
	this.Language = language
	this.Timeout = timeout
	this.KeyPhrases = keyPhrases
	return &this
}

// NewSpeechCaptureRequestWithDefaults instantiates a new SpeechCaptureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpeechCaptureRequestWithDefaults() *SpeechCaptureRequest {
	this := SpeechCaptureRequest{}

	return &this
}

// GetLanguage returns the Language field value
func (o *SpeechCaptureRequest) GetLanguage() TranscriptionLanguage {
	if o == nil {
		var ret TranscriptionLanguage
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *SpeechCaptureRequest) GetLanguageOk() (*TranscriptionLanguage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *SpeechCaptureRequest) SetLanguage(v TranscriptionLanguage) {
	o.Language = v
}

// GetTimeout returns the Timeout field value
func (o *SpeechCaptureRequest) GetTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *SpeechCaptureRequest) GetTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *SpeechCaptureRequest) SetTimeout(v int32) {
	o.Timeout = v
}

// GetMaxSilence returns the MaxSilence field value if set, zero value otherwise.
func (o *SpeechCaptureRequest) GetMaxSilence() int32 {
	if o == nil || IsNil(o.MaxSilence) {
		var ret int32
		return ret
	}
	return *o.MaxSilence
}

// GetMaxSilenceOk returns a tuple with the MaxSilence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechCaptureRequest) GetMaxSilenceOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSilence) {
		return nil, false
	}
	return o.MaxSilence, true
}

// HasMaxSilence returns a boolean if a field has been set.
func (o *SpeechCaptureRequest) HasMaxSilence() bool {
	if o != nil && !IsNil(o.MaxSilence) {
		return true
	}

	return false
}

// SetMaxSilence gets a reference to the given int32 and assigns it to the MaxSilence field.
func (o *SpeechCaptureRequest) SetMaxSilence(v int32) {
	o.MaxSilence = &v
}

// GetKeyPhrases returns the KeyPhrases field value
func (o *SpeechCaptureRequest) GetKeyPhrases() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.KeyPhrases
}

// GetKeyPhrasesOk returns a tuple with the KeyPhrases field value
// and a boolean to check if the value has been set.
func (o *SpeechCaptureRequest) GetKeyPhrasesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyPhrases, true
}

// SetKeyPhrases sets field value
func (o *SpeechCaptureRequest) SetKeyPhrases(v []string) {
	o.KeyPhrases = v
}

func (o SpeechCaptureRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpeechCaptureRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["language"] = o.Language
	toSerialize["timeout"] = o.Timeout
	if !IsNil(o.MaxSilence) {
		toSerialize["maxSilence"] = o.MaxSilence
	}
	toSerialize["keyPhrases"] = o.KeyPhrases
	return toSerialize, nil
}

type NullableSpeechCaptureRequest struct {
	value *SpeechCaptureRequest
	isSet bool
}

func (v NullableSpeechCaptureRequest) Get() *SpeechCaptureRequest {
	return v.value
}

func (v *NullableSpeechCaptureRequest) Set(val *SpeechCaptureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSpeechCaptureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSpeechCaptureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpeechCaptureRequest(val *SpeechCaptureRequest) *NullableSpeechCaptureRequest {
	return &NullableSpeechCaptureRequest{value: val, isSet: true}
}

func (v NullableSpeechCaptureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpeechCaptureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
