/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ToDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ToDestination{}

// ToDestination Represents a simple destination.
type ToDestination struct {
	// The destination address of the message. It can be alphanumeric or numeric.
	To string
	// The ID that uniquely identifies the message sent.
	MessageId *string
}

type _ToDestination ToDestination

// NewToDestination instantiates a new ToDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewToDestination(to string) *ToDestination {
	this := ToDestination{}
	this.To = to
	return &this
}

// NewToDestinationWithDefaults instantiates a new ToDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewToDestinationWithDefaults() *ToDestination {
	this := ToDestination{}

	return &this
}

// GetTo returns the To field value
func (o *ToDestination) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *ToDestination) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *ToDestination) SetTo(v string) {
	o.To = v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *ToDestination) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ToDestination) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *ToDestination) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *ToDestination) SetMessageId(v string) {
	o.MessageId = &v
}

func (o ToDestination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ToDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["to"] = o.To
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	return toSerialize, nil
}

type NullableToDestination struct {
	value *ToDestination
	isSet bool
}

func (v NullableToDestination) Get() *ToDestination {
	return v.value
}

func (v *NullableToDestination) Set(val *ToDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableToDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableToDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableToDestination(val *ToDestination) *NullableToDestination {
	return &NullableToDestination{value: val, isSet: true}
}

func (v NullableToDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableToDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
