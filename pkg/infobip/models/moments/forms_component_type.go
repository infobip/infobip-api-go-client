/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"
	"fmt"
)

// FormsComponentType the model 'FormsComponentType'
type FormsComponentType string

// List of FormsComponentType
const (
	FORMSCOMPONENTTYPE_TEXT                FormsComponentType = "TEXT"
	FORMSCOMPONENTTYPE_TEXTAREA            FormsComponentType = "TEXTAREA"
	FORMSCOMPONENTTYPE_NUMBER              FormsComponentType = "NUMBER"
	FORMSCOMPONENTTYPE_DROPDOWN            FormsComponentType = "DROPDOWN"
	FORMSCOMPONENTTYPE_CHECKBOX            FormsComponentType = "CHECKBOX"
	FORMSCOMPONENTTYPE_CHECKBOX_GROUP      FormsComponentType = "CHECKBOX_GROUP"
	FORMSCOMPONENTTYPE_RADIOBUTTON         FormsComponentType = "RADIOBUTTON"
	FORMSCOMPONENTTYPE_DATE                FormsComponentType = "DATE"
	FORMSCOMPONENTTYPE_DATETIME            FormsComponentType = "DATETIME"
	FORMSCOMPONENTTYPE_EMAIL               FormsComponentType = "EMAIL"
	FORMSCOMPONENTTYPE_MSISDN              FormsComponentType = "MSISDN"
	FORMSCOMPONENTTYPE_SUBMIT_BUTTON       FormsComponentType = "SUBMIT_BUTTON"
	FORMSCOMPONENTTYPE_TITLE               FormsComponentType = "TITLE"
	FORMSCOMPONENTTYPE_DESCRIPTION         FormsComponentType = "DESCRIPTION"
	FORMSCOMPONENTTYPE_APPLE_SPLASH        FormsComponentType = "APPLE_SPLASH"
	FORMSCOMPONENTTYPE_APPLE_BOOLEAN       FormsComponentType = "APPLE_BOOLEAN"
	FORMSCOMPONENTTYPE_WHATSAPP_SCREEN     FormsComponentType = "WHATSAPP_SCREEN"
	FORMSCOMPONENTTYPE_WHATSAPP_HEADING    FormsComponentType = "WHATSAPP_HEADING"
	FORMSCOMPONENTTYPE_WHATSAPP_SUBHEADING FormsComponentType = "WHATSAPP_SUBHEADING"
	FORMSCOMPONENTTYPE_WHATSAPP_BODY       FormsComponentType = "WHATSAPP_BODY"
)

// All allowed values of FormsComponentType enum
var AllowedFormsComponentTypeEnumValues = []FormsComponentType{
	"TEXT",
	"TEXTAREA",
	"NUMBER",
	"DROPDOWN",
	"CHECKBOX",
	"CHECKBOX_GROUP",
	"RADIOBUTTON",
	"DATE",
	"DATETIME",
	"EMAIL",
	"MSISDN",
	"SUBMIT_BUTTON",
	"TITLE",
	"DESCRIPTION",
	"APPLE_SPLASH",
	"APPLE_BOOLEAN",
	"WHATSAPP_SCREEN",
	"WHATSAPP_HEADING",
	"WHATSAPP_SUBHEADING",
	"WHATSAPP_BODY",
}

func (v *FormsComponentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FormsComponentType(value)
	for _, existing := range AllowedFormsComponentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FormsComponentType", value)
}

// NewFormsComponentTypeFromValue returns a pointer to a valid FormsComponentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFormsComponentTypeFromValue(v string) (*FormsComponentType, error) {
	ev := FormsComponentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FormsComponentType: valid values are %v", v, AllowedFormsComponentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FormsComponentType) IsValid() bool {
	for _, existing := range AllowedFormsComponentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to FormsComponentType value
func (v FormsComponentType) Ptr() *FormsComponentType {
	return &v
}

type NullableFormsComponentType struct {
	value *FormsComponentType
	isSet bool
}

func (v NullableFormsComponentType) Get() *FormsComponentType {
	return v.value
}

func (v *NullableFormsComponentType) Set(val *FormsComponentType) {
	v.value = val
	v.isSet = true
}

func (v NullableFormsComponentType) IsSet() bool {
	return v.isSet
}

func (v *NullableFormsComponentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormsComponentType(val *FormsComponentType) *NullableFormsComponentType {
	return &NullableFormsComponentType{value: val, isSet: true}
}

func (v NullableFormsComponentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormsComponentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
