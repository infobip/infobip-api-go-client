/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// TfaVerificationResponse struct for TfaVerificationResponse
type TfaVerificationResponse struct {
	// Collection of verifications
	Verifications *[]TfaVerification `json:"verifications,omitempty"`
}

// NewTfaVerificationResponse instantiates a new TfaVerificationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTfaVerificationResponse() *TfaVerificationResponse {
	this := TfaVerificationResponse{}
	return &this
}

// NewTfaVerificationResponseWithDefaults instantiates a new TfaVerificationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTfaVerificationResponseWithDefaults() *TfaVerificationResponse {
	this := TfaVerificationResponse{}
	return &this
}

// GetVerifications returns the Verifications field value if set, zero value otherwise.
func (o *TfaVerificationResponse) GetVerifications() []TfaVerification {
	if o == nil || o.Verifications == nil {
		var ret []TfaVerification
		return ret
	}
	return *o.Verifications
}

// GetVerificationsOk returns a tuple with the Verifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaVerificationResponse) GetVerificationsOk() (*[]TfaVerification, bool) {
	if o == nil || o.Verifications == nil {
		return nil, false
	}
	return o.Verifications, true
}

// HasVerifications returns a boolean if a field has been set.
func (o *TfaVerificationResponse) HasVerifications() bool {
	if o != nil && o.Verifications != nil {
		return true
	}

	return false
}

// SetVerifications gets a reference to the given []TfaVerification and assigns it to the Verifications field.
func (o *TfaVerificationResponse) SetVerifications(v []TfaVerification) {
	o.Verifications = &v
}

func (o TfaVerificationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Verifications != nil {
		toSerialize["verifications"] = o.Verifications
	}
	return json.Marshal(toSerialize)
}

type NullableTfaVerificationResponse struct {
	value *TfaVerificationResponse
	isSet bool
}

func (v NullableTfaVerificationResponse) Get() *TfaVerificationResponse {
	return v.value
}

func (v *NullableTfaVerificationResponse) Set(val *TfaVerificationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTfaVerificationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTfaVerificationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTfaVerificationResponse(val *TfaVerificationResponse) *NullableTfaVerificationResponse {
	return &NullableTfaVerificationResponse{value: val, isSet: true}
}

func (v NullableTfaVerificationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTfaVerificationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
