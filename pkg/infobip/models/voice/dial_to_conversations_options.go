/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialToConversationsOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialToConversationsOptions{}

// DialToConversationsOptions struct for DialToConversationsOptions
type DialToConversationsOptions struct {
	TagIdentifierType *TagIdentifierType
	// An array of [conversation tag](https://www.infobip.com/docs/conversations/get-to-know-conversations#tags-templates-and-tags) names or ids that are assigned to this conversation for better categorization of the topics or customer intent. Value can be an array of tag names/ids, empty array, or null value.
	Tags []string
}

type _DialToConversationsOptions DialToConversationsOptions

// NewDialToConversationsOptions instantiates a new DialToConversationsOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialToConversationsOptions(tags []string) *DialToConversationsOptions {
	this := DialToConversationsOptions{}
	this.Tags = tags
	return &this
}

// NewDialToConversationsOptionsWithDefaults instantiates a new DialToConversationsOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialToConversationsOptionsWithDefaults() *DialToConversationsOptions {
	this := DialToConversationsOptions{}

	return &this
}

// GetTagIdentifierType returns the TagIdentifierType field value if set, zero value otherwise.
func (o *DialToConversationsOptions) GetTagIdentifierType() TagIdentifierType {
	if o == nil || IsNil(o.TagIdentifierType) {
		var ret TagIdentifierType
		return ret
	}
	return *o.TagIdentifierType
}

// GetTagIdentifierTypeOk returns a tuple with the TagIdentifierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialToConversationsOptions) GetTagIdentifierTypeOk() (*TagIdentifierType, bool) {
	if o == nil || IsNil(o.TagIdentifierType) {
		return nil, false
	}
	return o.TagIdentifierType, true
}

// HasTagIdentifierType returns a boolean if a field has been set.
func (o *DialToConversationsOptions) HasTagIdentifierType() bool {
	if o != nil && !IsNil(o.TagIdentifierType) {
		return true
	}

	return false
}

// SetTagIdentifierType gets a reference to the given TagIdentifierType and assigns it to the TagIdentifierType field.
func (o *DialToConversationsOptions) SetTagIdentifierType(v TagIdentifierType) {
	o.TagIdentifierType = &v
}

// GetTags returns the Tags field value
func (o *DialToConversationsOptions) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *DialToConversationsOptions) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *DialToConversationsOptions) SetTags(v []string) {
	o.Tags = v
}

func (o DialToConversationsOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialToConversationsOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TagIdentifierType) {
		toSerialize["tagIdentifierType"] = o.TagIdentifierType
	}
	toSerialize["tags"] = o.Tags
	return toSerialize, nil
}

type NullableDialToConversationsOptions struct {
	value *DialToConversationsOptions
	isSet bool
}

func (v NullableDialToConversationsOptions) Get() *DialToConversationsOptions {
	return v.value
}

func (v *NullableDialToConversationsOptions) Set(val *DialToConversationsOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDialToConversationsOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDialToConversationsOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialToConversationsOptions(val *DialToConversationsOptions) *NullableDialToConversationsOptions {
	return &NullableDialToConversationsOptions{value: val, isSet: true}
}

func (v NullableDialToConversationsOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialToConversationsOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
