/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the StandardVoiceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StandardVoiceResponse{}

// StandardVoiceResponse struct for StandardVoiceResponse
type StandardVoiceResponse struct {
	// The ID that uniquely identifies the request. Bulk ID will be received only when you send a message to more than one destination address.
	BulkId *string
	// Array of sent messages, one object per every message.
	Messages []VoiceResponseDetails
}

// NewStandardVoiceResponse instantiates a new StandardVoiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewStandardVoiceResponse() *StandardVoiceResponse {
	this := StandardVoiceResponse{}
	return &this
}

// NewStandardVoiceResponseWithDefaults instantiates a new StandardVoiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandardVoiceResponseWithDefaults() *StandardVoiceResponse {
	this := StandardVoiceResponse{}

	return &this
}

// GetBulkId returns the BulkId field value if set, zero value otherwise.
func (o *StandardVoiceResponse) GetBulkId() string {
	if o == nil || IsNil(o.BulkId) {
		var ret string
		return ret
	}
	return *o.BulkId
}

// GetBulkIdOk returns a tuple with the BulkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardVoiceResponse) GetBulkIdOk() (*string, bool) {
	if o == nil || IsNil(o.BulkId) {
		return nil, false
	}
	return o.BulkId, true
}

// HasBulkId returns a boolean if a field has been set.
func (o *StandardVoiceResponse) HasBulkId() bool {
	if o != nil && !IsNil(o.BulkId) {
		return true
	}

	return false
}

// SetBulkId gets a reference to the given string and assigns it to the BulkId field.
func (o *StandardVoiceResponse) SetBulkId(v string) {
	o.BulkId = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *StandardVoiceResponse) GetMessages() []VoiceResponseDetails {
	if o == nil || IsNil(o.Messages) {
		var ret []VoiceResponseDetails
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardVoiceResponse) GetMessagesOk() ([]VoiceResponseDetails, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *StandardVoiceResponse) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []VoiceResponseDetails and assigns it to the Messages field.
func (o *StandardVoiceResponse) SetMessages(v []VoiceResponseDetails) {
	o.Messages = v
}

func (o StandardVoiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StandardVoiceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BulkId) {
		toSerialize["bulkId"] = o.BulkId
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	return toSerialize, nil
}

type NullableStandardVoiceResponse struct {
	value *StandardVoiceResponse
	isSet bool
}

func (v NullableStandardVoiceResponse) Get() *StandardVoiceResponse {
	return v.value
}

func (v *NullableStandardVoiceResponse) Set(val *StandardVoiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStandardVoiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStandardVoiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandardVoiceResponse(val *StandardVoiceResponse) *NullableStandardVoiceResponse {
	return &NullableStandardVoiceResponse{value: val, isSet: true}
}

func (v NullableStandardVoiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandardVoiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
