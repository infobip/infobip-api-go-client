/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the VerificationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerificationResponse{}

// VerificationResponse struct for VerificationResponse
type VerificationResponse struct {
	// Collection of verifications
	Verifications []Verification
}

// NewVerificationResponse instantiates a new VerificationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationResponse() *VerificationResponse {
	this := VerificationResponse{}
	return &this
}

// NewVerificationResponseWithDefaults instantiates a new VerificationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationResponseWithDefaults() *VerificationResponse {
	this := VerificationResponse{}
	return &this
}

// GetVerifications returns the Verifications field value if set, zero value otherwise.
func (o *VerificationResponse) GetVerifications() []Verification {
	if o == nil || IsNil(o.Verifications) {
		var ret []Verification
		return ret
	}
	return o.Verifications
}

// GetVerificationsOk returns a tuple with the Verifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationResponse) GetVerificationsOk() ([]Verification, bool) {
	if o == nil || IsNil(o.Verifications) {
		return nil, false
	}
	return o.Verifications, true
}

// HasVerifications returns a boolean if a field has been set.
func (o *VerificationResponse) HasVerifications() bool {
	if o != nil && !IsNil(o.Verifications) {
		return true
	}

	return false
}

// SetVerifications gets a reference to the given []Verification and assigns it to the Verifications field.
func (o *VerificationResponse) SetVerifications(v []Verification) {
	o.Verifications = v
}

func (o VerificationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerificationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Verifications) {
		toSerialize["verifications"] = o.Verifications
	}
	return toSerialize, nil
}

type NullableVerificationResponse struct {
	value *VerificationResponse
	isSet bool
}

func (v NullableVerificationResponse) Get() *VerificationResponse {
	return v.value
}

func (v *NullableVerificationResponse) Set(val *VerificationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationResponse(val *VerificationResponse) *NullableVerificationResponse {
	return &NullableVerificationResponse{value: val, isSet: true}
}

func (v NullableVerificationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
