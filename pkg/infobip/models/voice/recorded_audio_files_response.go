/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RecordedAudioFilesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordedAudioFilesResponse{}

// RecordedAudioFilesResponse struct for RecordedAudioFilesResponse
type RecordedAudioFilesResponse struct {
	// Array of recorded files metadata, one for each recorded file.
	Files []RecordedIvrFile
}

// NewRecordedAudioFilesResponse instantiates a new RecordedAudioFilesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewRecordedAudioFilesResponse() *RecordedAudioFilesResponse {
	this := RecordedAudioFilesResponse{}
	return &this
}

// NewRecordedAudioFilesResponseWithDefaults instantiates a new RecordedAudioFilesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordedAudioFilesResponseWithDefaults() *RecordedAudioFilesResponse {
	this := RecordedAudioFilesResponse{}

	return &this
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *RecordedAudioFilesResponse) GetFiles() []RecordedIvrFile {
	if o == nil || IsNil(o.Files) {
		var ret []RecordedIvrFile
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordedAudioFilesResponse) GetFilesOk() ([]RecordedIvrFile, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *RecordedAudioFilesResponse) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []RecordedIvrFile and assigns it to the Files field.
func (o *RecordedAudioFilesResponse) SetFiles(v []RecordedIvrFile) {
	o.Files = v
}

func (o RecordedAudioFilesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordedAudioFilesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	return toSerialize, nil
}

type NullableRecordedAudioFilesResponse struct {
	value *RecordedAudioFilesResponse
	isSet bool
}

func (v NullableRecordedAudioFilesResponse) Get() *RecordedAudioFilesResponse {
	return v.value
}

func (v *NullableRecordedAudioFilesResponse) Set(val *RecordedAudioFilesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordedAudioFilesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordedAudioFilesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordedAudioFilesResponse(val *RecordedAudioFilesResponse) *NullableRecordedAudioFilesResponse {
	return &NullableRecordedAudioFilesResponse{value: val, isSet: true}
}

func (v NullableRecordedAudioFilesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordedAudioFilesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
