/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"
	"fmt"
)

// MessageCardOptionsAlignmentEnum Alignment of the card.
type MessageCardOptionsAlignmentEnum string

// List of MessageCardOptionsAlignmentEnum
const (
	MESSAGECARDOPTIONSALIGNMENTENUM_LEFT  MessageCardOptionsAlignmentEnum = "LEFT"
	MESSAGECARDOPTIONSALIGNMENTENUM_RIGHT MessageCardOptionsAlignmentEnum = "RIGHT"
)

// All allowed values of MessageCardOptionsAlignmentEnum enum
var AllowedMessageCardOptionsAlignmentEnumEnumValues = []MessageCardOptionsAlignmentEnum{
	"LEFT",
	"RIGHT",
}

func (v *MessageCardOptionsAlignmentEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MessageCardOptionsAlignmentEnum(value)
	for _, existing := range AllowedMessageCardOptionsAlignmentEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MessageCardOptionsAlignmentEnum", value)
}

// NewMessageCardOptionsAlignmentEnumFromValue returns a pointer to a valid MessageCardOptionsAlignmentEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMessageCardOptionsAlignmentEnumFromValue(v string) (*MessageCardOptionsAlignmentEnum, error) {
	ev := MessageCardOptionsAlignmentEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MessageCardOptionsAlignmentEnum: valid values are %v", v, AllowedMessageCardOptionsAlignmentEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MessageCardOptionsAlignmentEnum) IsValid() bool {
	for _, existing := range AllowedMessageCardOptionsAlignmentEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MessageCardOptionsAlignmentEnum value
func (v MessageCardOptionsAlignmentEnum) Ptr() *MessageCardOptionsAlignmentEnum {
	return &v
}

type NullableMessageCardOptionsAlignmentEnum struct {
	value *MessageCardOptionsAlignmentEnum
	isSet bool
}

func (v NullableMessageCardOptionsAlignmentEnum) Get() *MessageCardOptionsAlignmentEnum {
	return v.value
}

func (v *NullableMessageCardOptionsAlignmentEnum) Set(val *MessageCardOptionsAlignmentEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageCardOptionsAlignmentEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageCardOptionsAlignmentEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageCardOptionsAlignmentEnum(val *MessageCardOptionsAlignmentEnum) *NullableMessageCardOptionsAlignmentEnum {
	return &NullableMessageCardOptionsAlignmentEnum{value: val, isSet: true}
}

func (v NullableMessageCardOptionsAlignmentEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageCardOptionsAlignmentEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
