/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// CreationMethod File creation method.
type CreationMethod string

// List of CreationMethod
const (
	CREATIONMETHOD_UPLOADED    CreationMethod = "UPLOADED"
	CREATIONMETHOD_SYNTHESIZED CreationMethod = "SYNTHESIZED"
	CREATIONMETHOD_RECORDED    CreationMethod = "RECORDED"
)

// All allowed values of CreationMethod enum
var AllowedCreationMethodEnumValues = []CreationMethod{
	"UPLOADED",
	"SYNTHESIZED",
	"RECORDED",
}

func (v *CreationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CreationMethod(value)
	for _, existing := range AllowedCreationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CreationMethod", value)
}

// NewCreationMethodFromValue returns a pointer to a valid CreationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCreationMethodFromValue(v string) (*CreationMethod, error) {
	ev := CreationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CreationMethod: valid values are %v", v, AllowedCreationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CreationMethod) IsValid() bool {
	for _, existing := range AllowedCreationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CreationMethod value
func (v CreationMethod) Ptr() *CreationMethod {
	return &v
}

type NullableCreationMethod struct {
	value *CreationMethod
	isSet bool
}

func (v NullableCreationMethod) Get() *CreationMethod {
	return v.value
}

func (v *NullableCreationMethod) Set(val *CreationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableCreationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableCreationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreationMethod(val *CreationMethod) *NullableCreationMethod {
	return &NullableCreationMethod{value: val, isSet: true}
}

func (v NullableCreationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
