/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SipEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SipEndpoint{}

// SipEndpoint struct for SipEndpoint
type SipEndpoint struct {
	Type CallEndpointType
	// SIP endpoint username.
	Username string
	// SIP trunk ID.
	SipTrunkId string
	// Custom headers. Only headers starting with `X-Client-` prefix will be propagated.
	CustomHeaders *map[string]string
}

type _SipEndpoint SipEndpoint

// NewSipEndpoint instantiates a new SipEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSipEndpoint(username string, sipTrunkId string) *SipEndpoint {
	this := SipEndpoint{}
	this.Type = "SIP"
	this.Username = username
	this.SipTrunkId = sipTrunkId
	return &this
}

// NewSipEndpointWithDefaults instantiates a new SipEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSipEndpointWithDefaults() *SipEndpoint {
	this := SipEndpoint{}
	this.Type = "SIP"
	return &this
}

// GetUsername returns the Username field value
func (o *SipEndpoint) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *SipEndpoint) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *SipEndpoint) SetUsername(v string) {
	o.Username = v
}

// GetSipTrunkId returns the SipTrunkId field value
func (o *SipEndpoint) GetSipTrunkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SipTrunkId
}

// GetSipTrunkIdOk returns a tuple with the SipTrunkId field value
// and a boolean to check if the value has been set.
func (o *SipEndpoint) GetSipTrunkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SipTrunkId, true
}

// SetSipTrunkId sets field value
func (o *SipEndpoint) SetSipTrunkId(v string) {
	o.SipTrunkId = v
}

// GetCustomHeaders returns the CustomHeaders field value if set, zero value otherwise.
func (o *SipEndpoint) GetCustomHeaders() map[string]string {
	if o == nil || IsNil(o.CustomHeaders) {
		var ret map[string]string
		return ret
	}
	return *o.CustomHeaders
}

// GetCustomHeadersOk returns a tuple with the CustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SipEndpoint) GetCustomHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomHeaders) {
		return nil, false
	}
	return o.CustomHeaders, true
}

// HasCustomHeaders returns a boolean if a field has been set.
func (o *SipEndpoint) HasCustomHeaders() bool {
	if o != nil && !IsNil(o.CustomHeaders) {
		return true
	}

	return false
}

// SetCustomHeaders gets a reference to the given map[string]string and assigns it to the CustomHeaders field.
func (o *SipEndpoint) SetCustomHeaders(v map[string]string) {
	o.CustomHeaders = &v
}

func (o SipEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SipEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["username"] = o.Username
	toSerialize["sipTrunkId"] = o.SipTrunkId
	if !IsNil(o.CustomHeaders) {
		toSerialize["customHeaders"] = o.CustomHeaders
	}
	return toSerialize, nil
}

type NullableSipEndpoint struct {
	value *SipEndpoint
	isSet bool
}

func (v NullableSipEndpoint) Get() *SipEndpoint {
	return v.value
}

func (v *NullableSipEndpoint) Set(val *SipEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableSipEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableSipEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSipEndpoint(val *SipEndpoint) *NullableSipEndpoint {
	return &NullableSipEndpoint{value: val, isSet: true}
}

func (v NullableSipEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSipEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
