/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRoutingSipEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRoutingSipEndpoint{}

// CallRoutingSipEndpoint struct for CallRoutingSipEndpoint
type CallRoutingSipEndpoint struct {
	Type CallRoutingEndpointType
	// Username sent to a selected SIP trunk. When not defined, Infobip DID number is used instead.
	Username *string
	// Unique identifier of a SIP trunk.
	SipTrunkId string
	// Custom headers. Only headers starting with `X-Client-` prefix will be propagated.
	CustomHeaders *map[string]string
}

type _CallRoutingSipEndpoint CallRoutingSipEndpoint

// NewCallRoutingSipEndpoint instantiates a new CallRoutingSipEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRoutingSipEndpoint(sipTrunkId string) *CallRoutingSipEndpoint {
	this := CallRoutingSipEndpoint{}
	this.Type = "SIP"
	this.SipTrunkId = sipTrunkId
	return &this
}

// NewCallRoutingSipEndpointWithDefaults instantiates a new CallRoutingSipEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRoutingSipEndpointWithDefaults() *CallRoutingSipEndpoint {
	this := CallRoutingSipEndpoint{}
	this.Type = "SIP"
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CallRoutingSipEndpoint) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingSipEndpoint) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CallRoutingSipEndpoint) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CallRoutingSipEndpoint) SetUsername(v string) {
	o.Username = &v
}

// GetSipTrunkId returns the SipTrunkId field value
func (o *CallRoutingSipEndpoint) GetSipTrunkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SipTrunkId
}

// GetSipTrunkIdOk returns a tuple with the SipTrunkId field value
// and a boolean to check if the value has been set.
func (o *CallRoutingSipEndpoint) GetSipTrunkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SipTrunkId, true
}

// SetSipTrunkId sets field value
func (o *CallRoutingSipEndpoint) SetSipTrunkId(v string) {
	o.SipTrunkId = v
}

// GetCustomHeaders returns the CustomHeaders field value if set, zero value otherwise.
func (o *CallRoutingSipEndpoint) GetCustomHeaders() map[string]string {
	if o == nil || IsNil(o.CustomHeaders) {
		var ret map[string]string
		return ret
	}
	return *o.CustomHeaders
}

// GetCustomHeadersOk returns a tuple with the CustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingSipEndpoint) GetCustomHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomHeaders) {
		return nil, false
	}
	return o.CustomHeaders, true
}

// HasCustomHeaders returns a boolean if a field has been set.
func (o *CallRoutingSipEndpoint) HasCustomHeaders() bool {
	if o != nil && !IsNil(o.CustomHeaders) {
		return true
	}

	return false
}

// SetCustomHeaders gets a reference to the given map[string]string and assigns it to the CustomHeaders field.
func (o *CallRoutingSipEndpoint) SetCustomHeaders(v map[string]string) {
	o.CustomHeaders = &v
}

func (o CallRoutingSipEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRoutingSipEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	toSerialize["sipTrunkId"] = o.SipTrunkId
	if !IsNil(o.CustomHeaders) {
		toSerialize["customHeaders"] = o.CustomHeaders
	}
	return toSerialize, nil
}

type NullableCallRoutingSipEndpoint struct {
	value *CallRoutingSipEndpoint
	isSet bool
}

func (v NullableCallRoutingSipEndpoint) Get() *CallRoutingSipEndpoint {
	return v.value
}

func (v *NullableCallRoutingSipEndpoint) Set(val *CallRoutingSipEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingSipEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingSipEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingSipEndpoint(val *CallRoutingSipEndpoint) *NullableCallRoutingSipEndpoint {
	return &NullableCallRoutingSipEndpoint{value: val, isSet: true}
}

func (v NullableCallRoutingSipEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingSipEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
