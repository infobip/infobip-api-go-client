/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRoutingWebRTCCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRoutingWebRTCCriteria{}

// CallRoutingWebRTCCriteria struct for CallRoutingWebRTCCriteria
type CallRoutingWebRTCCriteria struct {
	Type CallRoutingCriteriaType
	// WebRTC identity or regular expression pattern representing identity. Examples: `WebRTC_user`, `WebRTC_(.+)`.
	Identity *string
	// WebRTC custom data. To meet the criteria, all of the provided custom data pairs must match.
	CustomData []CallRoutingCustomDataEntry
}

type _CallRoutingWebRTCCriteria CallRoutingWebRTCCriteria

// NewCallRoutingWebRTCCriteria instantiates a new CallRoutingWebRTCCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRoutingWebRTCCriteria() *CallRoutingWebRTCCriteria {
	this := CallRoutingWebRTCCriteria{}
	this.Type = "WEBRTC"
	return &this
}

// NewCallRoutingWebRTCCriteriaWithDefaults instantiates a new CallRoutingWebRTCCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRoutingWebRTCCriteriaWithDefaults() *CallRoutingWebRTCCriteria {
	this := CallRoutingWebRTCCriteria{}
	this.Type = "WEBRTC"
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *CallRoutingWebRTCCriteria) GetIdentity() string {
	if o == nil || IsNil(o.Identity) {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingWebRTCCriteria) GetIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *CallRoutingWebRTCCriteria) HasIdentity() bool {
	if o != nil && !IsNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *CallRoutingWebRTCCriteria) SetIdentity(v string) {
	o.Identity = &v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *CallRoutingWebRTCCriteria) GetCustomData() []CallRoutingCustomDataEntry {
	if o == nil || IsNil(o.CustomData) {
		var ret []CallRoutingCustomDataEntry
		return ret
	}
	return o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingWebRTCCriteria) GetCustomDataOk() ([]CallRoutingCustomDataEntry, bool) {
	if o == nil || IsNil(o.CustomData) {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *CallRoutingWebRTCCriteria) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given []CallRoutingCustomDataEntry and assigns it to the CustomData field.
func (o *CallRoutingWebRTCCriteria) SetCustomData(v []CallRoutingCustomDataEntry) {
	o.CustomData = v
}

func (o CallRoutingWebRTCCriteria) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRoutingWebRTCCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	return toSerialize, nil
}

type NullableCallRoutingWebRTCCriteria struct {
	value *CallRoutingWebRTCCriteria
	isSet bool
}

func (v NullableCallRoutingWebRTCCriteria) Get() *CallRoutingWebRTCCriteria {
	return v.value
}

func (v *NullableCallRoutingWebRTCCriteria) Set(val *CallRoutingWebRTCCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingWebRTCCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingWebRTCCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingWebRTCCriteria(val *CallRoutingWebRTCCriteria) *NullableCallRoutingWebRTCCriteria {
	return &NullableCallRoutingWebRTCCriteria{value: val, isSet: true}
}

func (v NullableCallRoutingWebRTCCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingWebRTCCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
