/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the AddDomainRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDomainRequest{}

// AddDomainRequest struct for AddDomainRequest
type AddDomainRequest struct {
	// Unique name for the domain.
	DomainName string
	// Value for DKIM key length.
	DkimKeyLength *int32
	// Targeted daily traffic.
	TargetedDailyTraffic int64
	// Required for application use in a send request for outbound traffic. Returned in notification events.
	ApplicationId *string
	// Required for entity use in a send request for outbound traffic. Returned in notification events.
	EntityId *string
	// Set a custom return path to customize the mailbox that tells receiving email servers where to route delayed bounces.
	ReturnPathAddress *string
}

type _AddDomainRequest AddDomainRequest

// NewAddDomainRequest instantiates a new AddDomainRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewAddDomainRequest(domainName string, targetedDailyTraffic int64) *AddDomainRequest {
	this := AddDomainRequest{}
	this.DomainName = domainName
	var dkimKeyLength int32 = 2048
	this.DkimKeyLength = &dkimKeyLength
	this.TargetedDailyTraffic = targetedDailyTraffic
	return &this
}

// NewAddDomainRequestWithDefaults instantiates a new AddDomainRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDomainRequestWithDefaults() *AddDomainRequest {
	this := AddDomainRequest{}

	var dkimKeyLength int32 = 2048
	this.DkimKeyLength = &dkimKeyLength
	return &this
}

// GetDomainName returns the DomainName field value
func (o *AddDomainRequest) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *AddDomainRequest) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *AddDomainRequest) SetDomainName(v string) {
	o.DomainName = v
}

// GetDkimKeyLength returns the DkimKeyLength field value if set, zero value otherwise.
func (o *AddDomainRequest) GetDkimKeyLength() int32 {
	if o == nil || IsNil(o.DkimKeyLength) {
		var ret int32
		return ret
	}
	return *o.DkimKeyLength
}

// GetDkimKeyLengthOk returns a tuple with the DkimKeyLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDomainRequest) GetDkimKeyLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.DkimKeyLength) {
		return nil, false
	}
	return o.DkimKeyLength, true
}

// HasDkimKeyLength returns a boolean if a field has been set.
func (o *AddDomainRequest) HasDkimKeyLength() bool {
	if o != nil && !IsNil(o.DkimKeyLength) {
		return true
	}

	return false
}

// SetDkimKeyLength gets a reference to the given int32 and assigns it to the DkimKeyLength field.
func (o *AddDomainRequest) SetDkimKeyLength(v int32) {
	o.DkimKeyLength = &v
}

// GetTargetedDailyTraffic returns the TargetedDailyTraffic field value
func (o *AddDomainRequest) GetTargetedDailyTraffic() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TargetedDailyTraffic
}

// GetTargetedDailyTrafficOk returns a tuple with the TargetedDailyTraffic field value
// and a boolean to check if the value has been set.
func (o *AddDomainRequest) GetTargetedDailyTrafficOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetedDailyTraffic, true
}

// SetTargetedDailyTraffic sets field value
func (o *AddDomainRequest) SetTargetedDailyTraffic(v int64) {
	o.TargetedDailyTraffic = v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *AddDomainRequest) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDomainRequest) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AddDomainRequest) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *AddDomainRequest) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *AddDomainRequest) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDomainRequest) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *AddDomainRequest) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *AddDomainRequest) SetEntityId(v string) {
	o.EntityId = &v
}

// GetReturnPathAddress returns the ReturnPathAddress field value if set, zero value otherwise.
func (o *AddDomainRequest) GetReturnPathAddress() string {
	if o == nil || IsNil(o.ReturnPathAddress) {
		var ret string
		return ret
	}
	return *o.ReturnPathAddress
}

// GetReturnPathAddressOk returns a tuple with the ReturnPathAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDomainRequest) GetReturnPathAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ReturnPathAddress) {
		return nil, false
	}
	return o.ReturnPathAddress, true
}

// HasReturnPathAddress returns a boolean if a field has been set.
func (o *AddDomainRequest) HasReturnPathAddress() bool {
	if o != nil && !IsNil(o.ReturnPathAddress) {
		return true
	}

	return false
}

// SetReturnPathAddress gets a reference to the given string and assigns it to the ReturnPathAddress field.
func (o *AddDomainRequest) SetReturnPathAddress(v string) {
	o.ReturnPathAddress = &v
}

func (o AddDomainRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDomainRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domainName"] = o.DomainName
	if !IsNil(o.DkimKeyLength) {
		toSerialize["dkimKeyLength"] = o.DkimKeyLength
	}
	toSerialize["targetedDailyTraffic"] = o.TargetedDailyTraffic
	if !IsNil(o.ApplicationId) {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.ReturnPathAddress) {
		toSerialize["returnPathAddress"] = o.ReturnPathAddress
	}
	return toSerialize, nil
}

type NullableAddDomainRequest struct {
	value *AddDomainRequest
	isSet bool
}

func (v NullableAddDomainRequest) Get() *AddDomainRequest {
	return v.value
}

func (v *NullableAddDomainRequest) Set(val *AddDomainRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDomainRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDomainRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDomainRequest(val *AddDomainRequest) *NullableAddDomainRequest {
	return &NullableAddDomainRequest{value: val, isSet: true}
}

func (v NullableAddDomainRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDomainRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
