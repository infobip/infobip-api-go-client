/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DeliveryTimeWindow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryTimeWindow{}

// DeliveryTimeWindow Sets specific delivery windows outside of which calls won't be forwarded to the destination. If defined, call forwarding is allowed only if any time window in array is satisfied.
type DeliveryTimeWindow struct {
	From *DeliveryTime
	To   *DeliveryTime
	// Days for which to apply the `from` and `to` properties. If not set, defaults to all days.
	Days []DeliveryDay
}

// NewDeliveryTimeWindow instantiates a new DeliveryTimeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDeliveryTimeWindow() *DeliveryTimeWindow {
	this := DeliveryTimeWindow{}
	return &this
}

// NewDeliveryTimeWindowWithDefaults instantiates a new DeliveryTimeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryTimeWindowWithDefaults() *DeliveryTimeWindow {
	this := DeliveryTimeWindow{}

	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *DeliveryTimeWindow) GetFrom() DeliveryTime {
	if o == nil || IsNil(o.From) {
		var ret DeliveryTime
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeWindow) GetFromOk() (*DeliveryTime, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *DeliveryTimeWindow) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given DeliveryTime and assigns it to the From field.
func (o *DeliveryTimeWindow) SetFrom(v DeliveryTime) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *DeliveryTimeWindow) GetTo() DeliveryTime {
	if o == nil || IsNil(o.To) {
		var ret DeliveryTime
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeWindow) GetToOk() (*DeliveryTime, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *DeliveryTimeWindow) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given DeliveryTime and assigns it to the To field.
func (o *DeliveryTimeWindow) SetTo(v DeliveryTime) {
	o.To = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *DeliveryTimeWindow) GetDays() []DeliveryDay {
	if o == nil || IsNil(o.Days) {
		var ret []DeliveryDay
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryTimeWindow) GetDaysOk() ([]DeliveryDay, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *DeliveryTimeWindow) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []DeliveryDay and assigns it to the Days field.
func (o *DeliveryTimeWindow) SetDays(v []DeliveryDay) {
	o.Days = v
}

func (o DeliveryTimeWindow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryTimeWindow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	return toSerialize, nil
}

type NullableDeliveryTimeWindow struct {
	value *DeliveryTimeWindow
	isSet bool
}

func (v NullableDeliveryTimeWindow) Get() *DeliveryTimeWindow {
	return v.value
}

func (v *NullableDeliveryTimeWindow) Set(val *DeliveryTimeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryTimeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryTimeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryTimeWindow(val *DeliveryTimeWindow) *NullableDeliveryTimeWindow {
	return &NullableDeliveryTimeWindow{value: val, isSet: true}
}

func (v NullableDeliveryTimeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryTimeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
