/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ParticipantSession type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParticipantSession{}

// ParticipantSession List of participant sessions.
type ParticipantSession struct {
	// Unique call ID.
	CallId *string
	// Date and time for when the participant joined the conference.
	JoinTime *Time
	// Date and time for when the participant left the conference.
	LeaveTime *Time
}

// NewParticipantSession instantiates a new ParticipantSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewParticipantSession() *ParticipantSession {
	this := ParticipantSession{}
	return &this
}

// NewParticipantSessionWithDefaults instantiates a new ParticipantSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantSessionWithDefaults() *ParticipantSession {
	this := ParticipantSession{}

	return &this
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *ParticipantSession) GetCallId() string {
	if o == nil || IsNil(o.CallId) {
		var ret string
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantSession) GetCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *ParticipantSession) HasCallId() bool {
	if o != nil && !IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given string and assigns it to the CallId field.
func (o *ParticipantSession) SetCallId(v string) {
	o.CallId = &v
}

// GetJoinTime returns the JoinTime field value if set, zero value otherwise.
func (o *ParticipantSession) GetJoinTime() Time {
	if o == nil || IsNil(o.JoinTime) {
		var ret Time
		return ret
	}
	return *o.JoinTime
}

// GetJoinTimeOk returns a tuple with the JoinTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantSession) GetJoinTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.JoinTime) {
		return nil, false
	}
	return o.JoinTime, true
}

// HasJoinTime returns a boolean if a field has been set.
func (o *ParticipantSession) HasJoinTime() bool {
	if o != nil && !IsNil(o.JoinTime) {
		return true
	}

	return false
}

// SetJoinTime gets a reference to the given Time and assigns it to the JoinTime field.
func (o *ParticipantSession) SetJoinTime(v Time) {
	o.JoinTime = &v
}

// GetLeaveTime returns the LeaveTime field value if set, zero value otherwise.
func (o *ParticipantSession) GetLeaveTime() Time {
	if o == nil || IsNil(o.LeaveTime) {
		var ret Time
		return ret
	}
	return *o.LeaveTime
}

// GetLeaveTimeOk returns a tuple with the LeaveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParticipantSession) GetLeaveTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.LeaveTime) {
		return nil, false
	}
	return o.LeaveTime, true
}

// HasLeaveTime returns a boolean if a field has been set.
func (o *ParticipantSession) HasLeaveTime() bool {
	if o != nil && !IsNil(o.LeaveTime) {
		return true
	}

	return false
}

// SetLeaveTime gets a reference to the given Time and assigns it to the LeaveTime field.
func (o *ParticipantSession) SetLeaveTime(v Time) {
	o.LeaveTime = &v
}

func (o ParticipantSession) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParticipantSession) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallId) {
		toSerialize["callId"] = o.CallId
	}
	if !IsNil(o.JoinTime) {
		toSerialize["joinTime"] = o.JoinTime
	}
	if !IsNil(o.LeaveTime) {
		toSerialize["leaveTime"] = o.LeaveTime
	}
	return toSerialize, nil
}

type NullableParticipantSession struct {
	value *ParticipantSession
	isSet bool
}

func (v NullableParticipantSession) Get() *ParticipantSession {
	return v.value
}

func (v *NullableParticipantSession) Set(val *ParticipantSession) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipantSession) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipantSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipantSession(val *ParticipantSession) *NullableParticipantSession {
	return &NullableParticipantSession{value: val, isSet: true}
}

func (v NullableParticipantSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipantSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
