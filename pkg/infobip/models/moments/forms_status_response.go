/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FormsStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormsStatusResponse{}

// FormsStatusResponse struct for FormsStatusResponse
type FormsStatusResponse struct {
	Status string
}

type _FormsStatusResponse FormsStatusResponse

// NewFormsStatusResponse instantiates a new FormsStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFormsStatusResponse(status string) *FormsStatusResponse {
	this := FormsStatusResponse{}
	this.Status = status
	return &this
}

// NewFormsStatusResponseWithDefaults instantiates a new FormsStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormsStatusResponseWithDefaults() *FormsStatusResponse {
	this := FormsStatusResponse{}

	return &this
}

// GetStatus returns the Status field value
func (o *FormsStatusResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FormsStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FormsStatusResponse) SetStatus(v string) {
	o.Status = v
}

func (o FormsStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormsStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableFormsStatusResponse struct {
	value *FormsStatusResponse
	isSet bool
}

func (v NullableFormsStatusResponse) Get() *FormsStatusResponse {
	return v.value
}

func (v *NullableFormsStatusResponse) Set(val *FormsStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFormsStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFormsStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormsStatusResponse(val *FormsStatusResponse) *NullableFormsStatusResponse {
	return &NullableFormsStatusResponse{value: val, isSet: true}
}

func (v NullableFormsStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormsStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
