/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageCarouselCardBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageCarouselCardBody{}

// MessageCarouselCardBody Body of a card.
type MessageCarouselCardBody struct {
	// Title of the card.
	Title *string
	// Text to be sent.
	Text string
	// URL of the rich link. It can be image or video. When you provide it with `isVideo=true` then it will be mapped as a video, otherwise - as an image.
	Url string
	// Indicates if provided `url` is a video.
	IsVideo *bool
	// URL of the thumbnail image. If you add this, then we use as thumbnail image for video you provided in `url`. Applicable only when `isVideo=true`.
	ThumbnailUrl *string
	CardOptions  *MessageCardOptions
}

type _MessageCarouselCardBody MessageCarouselCardBody

// NewMessageCarouselCardBody instantiates a new MessageCarouselCardBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewMessageCarouselCardBody(text string, url string) *MessageCarouselCardBody {
	this := MessageCarouselCardBody{}
	this.Text = text
	this.Url = url
	var isVideo bool = false
	this.IsVideo = &isVideo
	return &this
}

// NewMessageCarouselCardBodyWithDefaults instantiates a new MessageCarouselCardBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageCarouselCardBodyWithDefaults() *MessageCarouselCardBody {
	this := MessageCarouselCardBody{}

	var isVideo bool = false
	this.IsVideo = &isVideo
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *MessageCarouselCardBody) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCarouselCardBody) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *MessageCarouselCardBody) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *MessageCarouselCardBody) SetTitle(v string) {
	o.Title = &v
}

// GetText returns the Text field value
func (o *MessageCarouselCardBody) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MessageCarouselCardBody) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MessageCarouselCardBody) SetText(v string) {
	o.Text = v
}

// GetUrl returns the Url field value
func (o *MessageCarouselCardBody) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MessageCarouselCardBody) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MessageCarouselCardBody) SetUrl(v string) {
	o.Url = v
}

// GetIsVideo returns the IsVideo field value if set, zero value otherwise.
func (o *MessageCarouselCardBody) GetIsVideo() bool {
	if o == nil || IsNil(o.IsVideo) {
		var ret bool
		return ret
	}
	return *o.IsVideo
}

// GetIsVideoOk returns a tuple with the IsVideo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCarouselCardBody) GetIsVideoOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVideo) {
		return nil, false
	}
	return o.IsVideo, true
}

// HasIsVideo returns a boolean if a field has been set.
func (o *MessageCarouselCardBody) HasIsVideo() bool {
	if o != nil && !IsNil(o.IsVideo) {
		return true
	}

	return false
}

// SetIsVideo gets a reference to the given bool and assigns it to the IsVideo field.
func (o *MessageCarouselCardBody) SetIsVideo(v bool) {
	o.IsVideo = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *MessageCarouselCardBody) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCarouselCardBody) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *MessageCarouselCardBody) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *MessageCarouselCardBody) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetCardOptions returns the CardOptions field value if set, zero value otherwise.
func (o *MessageCarouselCardBody) GetCardOptions() MessageCardOptions {
	if o == nil || IsNil(o.CardOptions) {
		var ret MessageCardOptions
		return ret
	}
	return *o.CardOptions
}

// GetCardOptionsOk returns a tuple with the CardOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageCarouselCardBody) GetCardOptionsOk() (*MessageCardOptions, bool) {
	if o == nil || IsNil(o.CardOptions) {
		return nil, false
	}
	return o.CardOptions, true
}

// HasCardOptions returns a boolean if a field has been set.
func (o *MessageCarouselCardBody) HasCardOptions() bool {
	if o != nil && !IsNil(o.CardOptions) {
		return true
	}

	return false
}

// SetCardOptions gets a reference to the given MessageCardOptions and assigns it to the CardOptions field.
func (o *MessageCarouselCardBody) SetCardOptions(v MessageCardOptions) {
	o.CardOptions = &v
}

func (o MessageCarouselCardBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageCarouselCardBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	toSerialize["text"] = o.Text
	toSerialize["url"] = o.Url
	if !IsNil(o.IsVideo) {
		toSerialize["isVideo"] = o.IsVideo
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnailUrl"] = o.ThumbnailUrl
	}
	if !IsNil(o.CardOptions) {
		toSerialize["cardOptions"] = o.CardOptions
	}
	return toSerialize, nil
}

type NullableMessageCarouselCardBody struct {
	value *MessageCarouselCardBody
	isSet bool
}

func (v NullableMessageCarouselCardBody) Get() *MessageCarouselCardBody {
	return v.value
}

func (v *NullableMessageCarouselCardBody) Set(val *MessageCarouselCardBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageCarouselCardBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageCarouselCardBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageCarouselCardBody(val *MessageCarouselCardBody) *NullableMessageCarouselCardBody {
	return &NullableMessageCarouselCardBody{value: val, isSet: true}
}

func (v NullableMessageCarouselCardBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageCarouselCardBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
