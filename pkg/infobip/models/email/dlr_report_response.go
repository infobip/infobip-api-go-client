/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DLRReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DLRReportResponse{}

// DLRReportResponse struct for DLRReportResponse
type DLRReportResponse struct {
	Results []DeliveryReport
}

// NewDLRReportResponse instantiates a new DLRReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDLRReportResponse() *DLRReportResponse {
	this := DLRReportResponse{}
	return &this
}

// NewDLRReportResponseWithDefaults instantiates a new DLRReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDLRReportResponseWithDefaults() *DLRReportResponse {
	this := DLRReportResponse{}

	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *DLRReportResponse) GetResults() []DeliveryReport {
	if o == nil || IsNil(o.Results) {
		var ret []DeliveryReport
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DLRReportResponse) GetResultsOk() ([]DeliveryReport, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *DLRReportResponse) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []DeliveryReport and assigns it to the Results field.
func (o *DLRReportResponse) SetResults(v []DeliveryReport) {
	o.Results = v
}

func (o DLRReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DLRReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableDLRReportResponse struct {
	value *DLRReportResponse
	isSet bool
}

func (v NullableDLRReportResponse) Get() *DLRReportResponse {
	return v.value
}

func (v *NullableDLRReportResponse) Set(val *DLRReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDLRReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDLRReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDLRReportResponse(val *DLRReportResponse) *NullableDLRReportResponse {
	return &NullableDLRReportResponse{value: val, isSet: true}
}

func (v NullableDLRReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDLRReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
