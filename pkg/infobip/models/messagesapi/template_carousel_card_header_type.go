/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"
	"fmt"
)

// TemplateCarouselCardHeaderType the model 'TemplateCarouselCardHeaderType'
type TemplateCarouselCardHeaderType string

// List of TemplateCarouselCardHeaderType
const (
	TEMPLATECAROUSELCARDHEADERTYPE_IMAGE TemplateCarouselCardHeaderType = "IMAGE"
	TEMPLATECAROUSELCARDHEADERTYPE_VIDEO TemplateCarouselCardHeaderType = "VIDEO"
)

// All allowed values of TemplateCarouselCardHeaderType enum
var AllowedTemplateCarouselCardHeaderTypeEnumValues = []TemplateCarouselCardHeaderType{
	"IMAGE",
	"VIDEO",
}

func (v *TemplateCarouselCardHeaderType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TemplateCarouselCardHeaderType(value)
	for _, existing := range AllowedTemplateCarouselCardHeaderTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TemplateCarouselCardHeaderType", value)
}

// NewTemplateCarouselCardHeaderTypeFromValue returns a pointer to a valid TemplateCarouselCardHeaderType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTemplateCarouselCardHeaderTypeFromValue(v string) (*TemplateCarouselCardHeaderType, error) {
	ev := TemplateCarouselCardHeaderType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TemplateCarouselCardHeaderType: valid values are %v", v, AllowedTemplateCarouselCardHeaderTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TemplateCarouselCardHeaderType) IsValid() bool {
	for _, existing := range AllowedTemplateCarouselCardHeaderTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TemplateCarouselCardHeaderType value
func (v TemplateCarouselCardHeaderType) Ptr() *TemplateCarouselCardHeaderType {
	return &v
}

type NullableTemplateCarouselCardHeaderType struct {
	value *TemplateCarouselCardHeaderType
	isSet bool
}

func (v NullableTemplateCarouselCardHeaderType) Get() *TemplateCarouselCardHeaderType {
	return v.value
}

func (v *NullableTemplateCarouselCardHeaderType) Set(val *TemplateCarouselCardHeaderType) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateCarouselCardHeaderType) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateCarouselCardHeaderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateCarouselCardHeaderType(val *TemplateCarouselCardHeaderType) *NullableTemplateCarouselCardHeaderType {
	return &NullableTemplateCarouselCardHeaderType{value: val, isSet: true}
}

func (v NullableTemplateCarouselCardHeaderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateCarouselCardHeaderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
