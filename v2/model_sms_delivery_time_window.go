/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsDeliveryTimeWindow Sets specific SMS delivery window outside of which messages won't be delivered. Often, used when there are restrictions on when messages can be sent.
type SmsDeliveryTimeWindow struct {
	// Days of the week which are included in the delivery time window. At least one day must be provided. Separate multiple days with a comma.
	Days []SmsDeliveryDay `json:"days"`
	From *SmsDeliveryTime `json:"from,omitempty"`
	To   *SmsDeliveryTime `json:"to,omitempty"`
}

// NewSmsDeliveryTimeWindow instantiates a new SmsDeliveryTimeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsDeliveryTimeWindow(days []SmsDeliveryDay) *SmsDeliveryTimeWindow {
	this := SmsDeliveryTimeWindow{}
	this.Days = days
	return &this
}

// NewSmsDeliveryTimeWindowWithDefaults instantiates a new SmsDeliveryTimeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsDeliveryTimeWindowWithDefaults() *SmsDeliveryTimeWindow {
	this := SmsDeliveryTimeWindow{}
	return &this
}

// GetDays returns the Days field value
func (o *SmsDeliveryTimeWindow) GetDays() []SmsDeliveryDay {
	if o == nil {
		var ret []SmsDeliveryDay
		return ret
	}

	return o.Days
}

// GetDaysOk returns a tuple with the Days field value
// and a boolean to check if the value has been set.
func (o *SmsDeliveryTimeWindow) GetDaysOk() (*[]SmsDeliveryDay, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Days, true
}

// SetDays sets field value
func (o *SmsDeliveryTimeWindow) SetDays(v []SmsDeliveryDay) {
	o.Days = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *SmsDeliveryTimeWindow) GetFrom() SmsDeliveryTime {
	if o == nil || o.From == nil {
		var ret SmsDeliveryTime
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsDeliveryTimeWindow) GetFromOk() (*SmsDeliveryTime, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *SmsDeliveryTimeWindow) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given SmsDeliveryTime and assigns it to the From field.
func (o *SmsDeliveryTimeWindow) SetFrom(v SmsDeliveryTime) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *SmsDeliveryTimeWindow) GetTo() SmsDeliveryTime {
	if o == nil || o.To == nil {
		var ret SmsDeliveryTime
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsDeliveryTimeWindow) GetToOk() (*SmsDeliveryTime, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *SmsDeliveryTimeWindow) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given SmsDeliveryTime and assigns it to the To field.
func (o *SmsDeliveryTimeWindow) SetTo(v SmsDeliveryTime) {
	o.To = &v
}

func (o SmsDeliveryTimeWindow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["days"] = o.Days
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableSmsDeliveryTimeWindow struct {
	value *SmsDeliveryTimeWindow
	isSet bool
}

func (v NullableSmsDeliveryTimeWindow) Get() *SmsDeliveryTimeWindow {
	return v.value
}

func (v *NullableSmsDeliveryTimeWindow) Set(val *SmsDeliveryTimeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsDeliveryTimeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsDeliveryTimeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsDeliveryTimeWindow(val *SmsDeliveryTimeWindow) *NullableSmsDeliveryTimeWindow {
	return &NullableSmsDeliveryTimeWindow{value: val, isSet: true}
}

func (v NullableSmsDeliveryTimeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsDeliveryTimeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
