/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRoutingViberEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRoutingViberEndpoint{}

// CallRoutingViberEndpoint struct for CallRoutingViberEndpoint
type CallRoutingViberEndpoint struct {
	Type CallRoutingEndpointType
	// Viber registered phone number. Defaults to `from` value used in inbound call.
	From *string
	// Phone number in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Defaults to `to` value used in inbound call.
	PhoneNumber *string
}

type _CallRoutingViberEndpoint CallRoutingViberEndpoint

// NewCallRoutingViberEndpoint instantiates a new CallRoutingViberEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRoutingViberEndpoint() *CallRoutingViberEndpoint {
	this := CallRoutingViberEndpoint{}
	this.Type = "VIBER"
	return &this
}

// NewCallRoutingViberEndpointWithDefaults instantiates a new CallRoutingViberEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRoutingViberEndpointWithDefaults() *CallRoutingViberEndpoint {
	this := CallRoutingViberEndpoint{}
	this.Type = "VIBER"
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *CallRoutingViberEndpoint) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingViberEndpoint) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CallRoutingViberEndpoint) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *CallRoutingViberEndpoint) SetFrom(v string) {
	o.From = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CallRoutingViberEndpoint) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingViberEndpoint) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CallRoutingViberEndpoint) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CallRoutingViberEndpoint) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

func (o CallRoutingViberEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRoutingViberEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	return toSerialize, nil
}

type NullableCallRoutingViberEndpoint struct {
	value *CallRoutingViberEndpoint
	isSet bool
}

func (v NullableCallRoutingViberEndpoint) Get() *CallRoutingViberEndpoint {
	return v.value
}

func (v *NullableCallRoutingViberEndpoint) Set(val *CallRoutingViberEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingViberEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingViberEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingViberEndpoint(val *CallRoutingViberEndpoint) *NullableCallRoutingViberEndpoint {
	return &NullableCallRoutingViberEndpoint{value: val, isSet: true}
}

func (v NullableCallRoutingViberEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingViberEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
