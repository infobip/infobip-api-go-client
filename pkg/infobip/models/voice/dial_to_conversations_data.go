/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialToConversationsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialToConversationsData{}

// DialToConversationsData struct for DialToConversationsData
type DialToConversationsData struct {
	Options DialToConversationsOptions
}

type _DialToConversationsData DialToConversationsData

// NewDialToConversationsData instantiates a new DialToConversationsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialToConversationsData(options DialToConversationsOptions) *DialToConversationsData {
	this := DialToConversationsData{}
	this.Options = options
	return &this
}

// NewDialToConversationsDataWithDefaults instantiates a new DialToConversationsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialToConversationsDataWithDefaults() *DialToConversationsData {
	this := DialToConversationsData{}

	return &this
}

// GetOptions returns the Options field value
func (o *DialToConversationsData) GetOptions() DialToConversationsOptions {
	if o == nil {
		var ret DialToConversationsOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *DialToConversationsData) GetOptionsOk() (*DialToConversationsOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *DialToConversationsData) SetOptions(v DialToConversationsOptions) {
	o.Options = v
}

func (o DialToConversationsData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialToConversationsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["options"] = o.Options
	return toSerialize, nil
}

type NullableDialToConversationsData struct {
	value *DialToConversationsData
	isSet bool
}

func (v NullableDialToConversationsData) Get() *DialToConversationsData {
	return v.value
}

func (v *NullableDialToConversationsData) Set(val *DialToConversationsData) {
	v.value = val
	v.isSet = true
}

func (v NullableDialToConversationsData) IsSet() bool {
	return v.isSet
}

func (v *NullableDialToConversationsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialToConversationsData(val *DialToConversationsData) *NullableDialToConversationsData {
	return &NullableDialToConversationsData{value: val, isSet: true}
}

func (v NullableDialToConversationsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialToConversationsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
