/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// CallRoutingCriteriaType the model 'CallRoutingCriteriaType'
type CallRoutingCriteriaType string

// List of CallRoutingCriteriaType
const (
	CALLROUTINGCRITERIATYPE_PHONE  CallRoutingCriteriaType = "PHONE"
	CALLROUTINGCRITERIATYPE_SIP    CallRoutingCriteriaType = "SIP"
	CALLROUTINGCRITERIATYPE_WEBRTC CallRoutingCriteriaType = "WEBRTC"
)

// All allowed values of CallRoutingCriteriaType enum
var AllowedCallRoutingCriteriaTypeEnumValues = []CallRoutingCriteriaType{
	"PHONE",
	"SIP",
	"WEBRTC",
}

func (v *CallRoutingCriteriaType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CallRoutingCriteriaType(value)
	for _, existing := range AllowedCallRoutingCriteriaTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CallRoutingCriteriaType", value)
}

// NewCallRoutingCriteriaTypeFromValue returns a pointer to a valid CallRoutingCriteriaType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCallRoutingCriteriaTypeFromValue(v string) (*CallRoutingCriteriaType, error) {
	ev := CallRoutingCriteriaType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CallRoutingCriteriaType: valid values are %v", v, AllowedCallRoutingCriteriaTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CallRoutingCriteriaType) IsValid() bool {
	for _, existing := range AllowedCallRoutingCriteriaTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CallRoutingCriteriaType value
func (v CallRoutingCriteriaType) Ptr() *CallRoutingCriteriaType {
	return &v
}

type NullableCallRoutingCriteriaType struct {
	value *CallRoutingCriteriaType
	isSet bool
}

func (v NullableCallRoutingCriteriaType) Get() *CallRoutingCriteriaType {
	return v.value
}

func (v *NullableCallRoutingCriteriaType) Set(val *CallRoutingCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingCriteriaType(val *CallRoutingCriteriaType) *NullableCallRoutingCriteriaType {
	return &NullableCallRoutingCriteriaType{value: val, isSet: true}
}

func (v NullableCallRoutingCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
