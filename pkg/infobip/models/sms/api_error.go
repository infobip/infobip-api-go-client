/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ApiError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiError{}

// ApiError struct for ApiError
type ApiError struct {
	// An error code uniquely identifying the error case.
	ErrorCode string
	// A detailed description of an error.
	Description string
	// An action that should be taken to recover from the error.
	Action string
	// List of violations that caused the error.
	Violations []ApiErrorViolation
	// List of available resources to recover from the error.
	Resources []ApiErrorResource
}

type _ApiError ApiError

// NewApiError instantiates a new ApiError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewApiError(errorCode string, description string, action string, violations []ApiErrorViolation, resources []ApiErrorResource) *ApiError {
	this := ApiError{}
	this.ErrorCode = errorCode
	this.Description = description
	this.Action = action
	this.Violations = violations
	this.Resources = resources
	return &this
}

// NewApiErrorWithDefaults instantiates a new ApiError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiErrorWithDefaults() *ApiError {
	this := ApiError{}

	return &this
}

// GetErrorCode returns the ErrorCode field value
func (o *ApiError) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *ApiError) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *ApiError) SetErrorCode(v string) {
	o.ErrorCode = v
}

// GetDescription returns the Description field value
func (o *ApiError) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ApiError) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ApiError) SetDescription(v string) {
	o.Description = v
}

// GetAction returns the Action field value
func (o *ApiError) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ApiError) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ApiError) SetAction(v string) {
	o.Action = v
}

// GetViolations returns the Violations field value
func (o *ApiError) GetViolations() []ApiErrorViolation {
	if o == nil {
		var ret []ApiErrorViolation
		return ret
	}

	return o.Violations
}

// GetViolationsOk returns a tuple with the Violations field value
// and a boolean to check if the value has been set.
func (o *ApiError) GetViolationsOk() ([]ApiErrorViolation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Violations, true
}

// SetViolations sets field value
func (o *ApiError) SetViolations(v []ApiErrorViolation) {
	o.Violations = v
}

// GetResources returns the Resources field value
func (o *ApiError) GetResources() []ApiErrorResource {
	if o == nil {
		var ret []ApiErrorResource
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *ApiError) GetResourcesOk() ([]ApiErrorResource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *ApiError) SetResources(v []ApiErrorResource) {
	o.Resources = v
}

func (o ApiError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["errorCode"] = o.ErrorCode
	toSerialize["description"] = o.Description
	toSerialize["action"] = o.Action
	toSerialize["violations"] = o.Violations
	toSerialize["resources"] = o.Resources
	return toSerialize, nil
}

type NullableApiError struct {
	value *ApiError
	isSet bool
}

func (v NullableApiError) Get() *ApiError {
	return v.value
}

func (v *NullableApiError) Set(val *ApiError) {
	v.value = val
	v.isSet = true
}

func (v NullableApiError) IsSet() bool {
	return v.isSet
}

func (v *NullableApiError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiError(val *ApiError) *NullableApiError {
	return &NullableApiError{value: val, isSet: true}
}

func (v NullableApiError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
