/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DeliveryReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryReport{}

// DeliveryReport struct for DeliveryReport
type DeliveryReport struct {
	// Incoming Delivery reports.
	Results []DeliveryResult
}

type _DeliveryReport DeliveryReport

// NewDeliveryReport instantiates a new DeliveryReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDeliveryReport(results []DeliveryResult) *DeliveryReport {
	this := DeliveryReport{}
	this.Results = results
	return &this
}

// NewDeliveryReportWithDefaults instantiates a new DeliveryReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryReportWithDefaults() *DeliveryReport {
	this := DeliveryReport{}

	return &this
}

// GetResults returns the Results field value
func (o *DeliveryReport) GetResults() []DeliveryResult {
	if o == nil {
		var ret []DeliveryResult
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetResultsOk() ([]DeliveryResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *DeliveryReport) SetResults(v []DeliveryResult) {
	o.Results = v
}

func (o DeliveryReport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableDeliveryReport struct {
	value *DeliveryReport
	isSet bool
}

func (v NullableDeliveryReport) Get() *DeliveryReport {
	return v.value
}

func (v *NullableDeliveryReport) Set(val *DeliveryReport) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryReport) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryReport(val *DeliveryReport) *NullableDeliveryReport {
	return &NullableDeliveryReport{value: val, isSet: true}
}

func (v NullableDeliveryReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
