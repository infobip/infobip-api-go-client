/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsDeliveryTime The exact time of day to end sending messages. Time is expressed in the UTC time zone. If set, use it together with the `from` property with minimum 1 hour difference.
type SmsDeliveryTime struct {
	// Hour when the time window opens when used in the `from` property or closes when used in the `to` property.
	Hour int32 `json:"hour"`
	// Minute when the time window opens when used in the `from` property or closes when used in the `to` property.
	Minute int32 `json:"minute"`
}

// NewSmsDeliveryTime instantiates a new SmsDeliveryTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsDeliveryTime(hour int32, minute int32) *SmsDeliveryTime {
	this := SmsDeliveryTime{}
	this.Hour = hour
	this.Minute = minute
	return &this
}

// NewSmsDeliveryTimeWithDefaults instantiates a new SmsDeliveryTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsDeliveryTimeWithDefaults() *SmsDeliveryTime {
	this := SmsDeliveryTime{}
	return &this
}

// GetHour returns the Hour field value
func (o *SmsDeliveryTime) GetHour() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Hour
}

// GetHourOk returns a tuple with the Hour field value
// and a boolean to check if the value has been set.
func (o *SmsDeliveryTime) GetHourOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hour, true
}

// SetHour sets field value
func (o *SmsDeliveryTime) SetHour(v int32) {
	o.Hour = v
}

// GetMinute returns the Minute field value
func (o *SmsDeliveryTime) GetMinute() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Minute
}

// GetMinuteOk returns a tuple with the Minute field value
// and a boolean to check if the value has been set.
func (o *SmsDeliveryTime) GetMinuteOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Minute, true
}

// SetMinute sets field value
func (o *SmsDeliveryTime) SetMinute(v int32) {
	o.Minute = v
}

func (o SmsDeliveryTime) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hour"] = o.Hour
	}
	if true {
		toSerialize["minute"] = o.Minute
	}
	return json.Marshal(toSerialize)
}

type NullableSmsDeliveryTime struct {
	value *SmsDeliveryTime
	isSet bool
}

func (v NullableSmsDeliveryTime) Get() *SmsDeliveryTime {
	return v.value
}

func (v *NullableSmsDeliveryTime) Set(val *SmsDeliveryTime) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsDeliveryTime) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsDeliveryTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsDeliveryTime(val *SmsDeliveryTime) *NullableSmsDeliveryTime {
	return &NullableSmsDeliveryTime{value: val, isSet: true}
}

func (v NullableSmsDeliveryTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsDeliveryTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
