/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the Participant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Participant{}

// Participant struct for Participant
type Participant struct {
	// Participant call ID.
	CallId   *string
	Endpoint CallEndpoint
	State    *ParticipantState
	// Date and time when the participant has joined.
	JoinTime *Time
	// Date and time when the participant has left.
	LeaveTime *Time
	Media     *MediaProperties
}

type _Participant Participant

// NewParticipant instantiates a new Participant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewParticipant(endpoint CallEndpoint) *Participant {
	this := Participant{}
	this.Endpoint = endpoint
	return &this
}

// NewParticipantWithDefaults instantiates a new Participant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantWithDefaults() *Participant {
	this := Participant{}

	return &this
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *Participant) GetCallId() string {
	if o == nil || IsNil(o.CallId) {
		var ret string
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *Participant) HasCallId() bool {
	if o != nil && !IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given string and assigns it to the CallId field.
func (o *Participant) SetCallId(v string) {
	o.CallId = &v
}

// GetEndpoint returns the Endpoint field value
func (o *Participant) GetEndpoint() CallEndpoint {
	if o == nil {
		var ret CallEndpoint
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *Participant) GetEndpointOk() (*CallEndpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *Participant) SetEndpoint(v CallEndpoint) {
	o.Endpoint = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Participant) GetState() ParticipantState {
	if o == nil || IsNil(o.State) {
		var ret ParticipantState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetStateOk() (*ParticipantState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Participant) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given ParticipantState and assigns it to the State field.
func (o *Participant) SetState(v ParticipantState) {
	o.State = &v
}

// GetJoinTime returns the JoinTime field value if set, zero value otherwise.
func (o *Participant) GetJoinTime() Time {
	if o == nil || IsNil(o.JoinTime) {
		var ret Time
		return ret
	}
	return *o.JoinTime
}

// GetJoinTimeOk returns a tuple with the JoinTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetJoinTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.JoinTime) {
		return nil, false
	}
	return o.JoinTime, true
}

// HasJoinTime returns a boolean if a field has been set.
func (o *Participant) HasJoinTime() bool {
	if o != nil && !IsNil(o.JoinTime) {
		return true
	}

	return false
}

// SetJoinTime gets a reference to the given Time and assigns it to the JoinTime field.
func (o *Participant) SetJoinTime(v Time) {
	o.JoinTime = &v
}

// GetLeaveTime returns the LeaveTime field value if set, zero value otherwise.
func (o *Participant) GetLeaveTime() Time {
	if o == nil || IsNil(o.LeaveTime) {
		var ret Time
		return ret
	}
	return *o.LeaveTime
}

// GetLeaveTimeOk returns a tuple with the LeaveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetLeaveTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.LeaveTime) {
		return nil, false
	}
	return o.LeaveTime, true
}

// HasLeaveTime returns a boolean if a field has been set.
func (o *Participant) HasLeaveTime() bool {
	if o != nil && !IsNil(o.LeaveTime) {
		return true
	}

	return false
}

// SetLeaveTime gets a reference to the given Time and assigns it to the LeaveTime field.
func (o *Participant) SetLeaveTime(v Time) {
	o.LeaveTime = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *Participant) GetMedia() MediaProperties {
	if o == nil || IsNil(o.Media) {
		var ret MediaProperties
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Participant) GetMediaOk() (*MediaProperties, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *Participant) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given MediaProperties and assigns it to the Media field.
func (o *Participant) SetMedia(v MediaProperties) {
	o.Media = &v
}

func (o Participant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Participant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallId) {
		toSerialize["callId"] = o.CallId
	}
	toSerialize["endpoint"] = o.Endpoint
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.JoinTime) {
		toSerialize["joinTime"] = o.JoinTime
	}
	if !IsNil(o.LeaveTime) {
		toSerialize["leaveTime"] = o.LeaveTime
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	return toSerialize, nil
}

type NullableParticipant struct {
	value *Participant
	isSet bool
}

func (v NullableParticipant) Get() *Participant {
	return v.value
}

func (v *NullableParticipant) Set(val *Participant) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipant(val *Participant) *NullableParticipant {
	return &NullableParticipant{value: val, isSet: true}
}

func (v NullableParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
