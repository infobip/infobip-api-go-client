/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RegisteredSipTrunkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisteredSipTrunkRequest{}

// RegisteredSipTrunkRequest struct for RegisteredSipTrunkRequest
type RegisteredSipTrunkRequest struct {
	Type                      SipTrunkType
	Name                      string
	Location                  *SipTrunkLocation
	Tls                       *bool
	InternationalCallsAllowed *bool
	ChannelLimit              int32
	BillingPackage            BillingPackage
	// List of audio codecs supported by a SIP trunk.
	Codecs        []AudioCodec
	Dtmf          *DtmfType
	Fax           *FaxType
	NumberFormat  *NumberPresentationFormat
	Anonymization *AnonymizationType
	// Enables an authentication challenge for each call.
	InviteAuthentication *bool
}

type _RegisteredSipTrunkRequest RegisteredSipTrunkRequest

// NewRegisteredSipTrunkRequest instantiates a new RegisteredSipTrunkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisteredSipTrunkRequest() *RegisteredSipTrunkRequest {
	this := RegisteredSipTrunkRequest{}
	this.Type = "REGISTERED"
	var dtmf DtmfType = DTMFTYPE_RFC2833
	this.Dtmf = &dtmf
	var fax FaxType = FAXTYPE_NONE
	this.Fax = &fax
	var anonymization AnonymizationType = ANONYMIZATIONTYPE_NONE
	this.Anonymization = &anonymization
	var inviteAuthentication bool = false
	this.InviteAuthentication = &inviteAuthentication
	return &this
}

// NewRegisteredSipTrunkRequestWithDefaults instantiates a new RegisteredSipTrunkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisteredSipTrunkRequestWithDefaults() *RegisteredSipTrunkRequest {
	this := RegisteredSipTrunkRequest{}
	this.Type = "REGISTERED"
	var dtmf DtmfType = DTMFTYPE_RFC2833
	this.Dtmf = &dtmf
	var fax FaxType = FAXTYPE_NONE
	this.Fax = &fax
	var anonymization AnonymizationType = ANONYMIZATIONTYPE_NONE
	this.Anonymization = &anonymization
	var inviteAuthentication bool = false
	this.InviteAuthentication = &inviteAuthentication
	return &this
}

// GetName returns the Name field value
func (o *RegisteredSipTrunkRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RegisteredSipTrunkRequest) SetName(v string) {
	o.Name = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetLocation() SipTrunkLocation {
	if o == nil || IsNil(o.Location) {
		var ret SipTrunkLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetLocationOk() (*SipTrunkLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given SipTrunkLocation and assigns it to the Location field.
func (o *RegisteredSipTrunkRequest) SetLocation(v SipTrunkLocation) {
	o.Location = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetTls() bool {
	if o == nil || IsNil(o.Tls) {
		var ret bool
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.Tls) {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasTls() bool {
	if o != nil && !IsNil(o.Tls) {
		return true
	}

	return false
}

// SetTls gets a reference to the given bool and assigns it to the Tls field.
func (o *RegisteredSipTrunkRequest) SetTls(v bool) {
	o.Tls = &v
}

// GetInternationalCallsAllowed returns the InternationalCallsAllowed field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetInternationalCallsAllowed() bool {
	if o == nil || IsNil(o.InternationalCallsAllowed) {
		var ret bool
		return ret
	}
	return *o.InternationalCallsAllowed
}

// GetInternationalCallsAllowedOk returns a tuple with the InternationalCallsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetInternationalCallsAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.InternationalCallsAllowed) {
		return nil, false
	}
	return o.InternationalCallsAllowed, true
}

// HasInternationalCallsAllowed returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasInternationalCallsAllowed() bool {
	if o != nil && !IsNil(o.InternationalCallsAllowed) {
		return true
	}

	return false
}

// SetInternationalCallsAllowed gets a reference to the given bool and assigns it to the InternationalCallsAllowed field.
func (o *RegisteredSipTrunkRequest) SetInternationalCallsAllowed(v bool) {
	o.InternationalCallsAllowed = &v
}

// GetChannelLimit returns the ChannelLimit field value
func (o *RegisteredSipTrunkRequest) GetChannelLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelLimit
}

// GetChannelLimitOk returns a tuple with the ChannelLimit field value
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetChannelLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelLimit, true
}

// SetChannelLimit sets field value
func (o *RegisteredSipTrunkRequest) SetChannelLimit(v int32) {
	o.ChannelLimit = v
}

// GetBillingPackage returns the BillingPackage field value
func (o *RegisteredSipTrunkRequest) GetBillingPackage() BillingPackage {
	if o == nil {
		var ret BillingPackage
		return ret
	}

	return o.BillingPackage
}

// GetBillingPackageOk returns a tuple with the BillingPackage field value
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetBillingPackageOk() (*BillingPackage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingPackage, true
}

// SetBillingPackage sets field value
func (o *RegisteredSipTrunkRequest) SetBillingPackage(v BillingPackage) {
	o.BillingPackage = v
}

// GetCodecs returns the Codecs field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetCodecs() []AudioCodec {
	if o == nil || IsNil(o.Codecs) {
		var ret []AudioCodec
		return ret
	}
	return o.Codecs
}

// GetCodecsOk returns a tuple with the Codecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetCodecsOk() ([]AudioCodec, bool) {
	if o == nil || IsNil(o.Codecs) {
		return nil, false
	}
	return o.Codecs, true
}

// HasCodecs returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasCodecs() bool {
	if o != nil && !IsNil(o.Codecs) {
		return true
	}

	return false
}

// SetCodecs gets a reference to the given []AudioCodec and assigns it to the Codecs field.
func (o *RegisteredSipTrunkRequest) SetCodecs(v []AudioCodec) {
	o.Codecs = v
}

// GetDtmf returns the Dtmf field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetDtmf() DtmfType {
	if o == nil || IsNil(o.Dtmf) {
		var ret DtmfType
		return ret
	}
	return *o.Dtmf
}

// GetDtmfOk returns a tuple with the Dtmf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetDtmfOk() (*DtmfType, bool) {
	if o == nil || IsNil(o.Dtmf) {
		return nil, false
	}
	return o.Dtmf, true
}

// HasDtmf returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasDtmf() bool {
	if o != nil && !IsNil(o.Dtmf) {
		return true
	}

	return false
}

// SetDtmf gets a reference to the given DtmfType and assigns it to the Dtmf field.
func (o *RegisteredSipTrunkRequest) SetDtmf(v DtmfType) {
	o.Dtmf = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetFax() FaxType {
	if o == nil || IsNil(o.Fax) {
		var ret FaxType
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetFaxOk() (*FaxType, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given FaxType and assigns it to the Fax field.
func (o *RegisteredSipTrunkRequest) SetFax(v FaxType) {
	o.Fax = &v
}

// GetNumberFormat returns the NumberFormat field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetNumberFormat() NumberPresentationFormat {
	if o == nil || IsNil(o.NumberFormat) {
		var ret NumberPresentationFormat
		return ret
	}
	return *o.NumberFormat
}

// GetNumberFormatOk returns a tuple with the NumberFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetNumberFormatOk() (*NumberPresentationFormat, bool) {
	if o == nil || IsNil(o.NumberFormat) {
		return nil, false
	}
	return o.NumberFormat, true
}

// HasNumberFormat returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasNumberFormat() bool {
	if o != nil && !IsNil(o.NumberFormat) {
		return true
	}

	return false
}

// SetNumberFormat gets a reference to the given NumberPresentationFormat and assigns it to the NumberFormat field.
func (o *RegisteredSipTrunkRequest) SetNumberFormat(v NumberPresentationFormat) {
	o.NumberFormat = &v
}

// GetAnonymization returns the Anonymization field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetAnonymization() AnonymizationType {
	if o == nil || IsNil(o.Anonymization) {
		var ret AnonymizationType
		return ret
	}
	return *o.Anonymization
}

// GetAnonymizationOk returns a tuple with the Anonymization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetAnonymizationOk() (*AnonymizationType, bool) {
	if o == nil || IsNil(o.Anonymization) {
		return nil, false
	}
	return o.Anonymization, true
}

// HasAnonymization returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasAnonymization() bool {
	if o != nil && !IsNil(o.Anonymization) {
		return true
	}

	return false
}

// SetAnonymization gets a reference to the given AnonymizationType and assigns it to the Anonymization field.
func (o *RegisteredSipTrunkRequest) SetAnonymization(v AnonymizationType) {
	o.Anonymization = &v
}

// GetInviteAuthentication returns the InviteAuthentication field value if set, zero value otherwise.
func (o *RegisteredSipTrunkRequest) GetInviteAuthentication() bool {
	if o == nil || IsNil(o.InviteAuthentication) {
		var ret bool
		return ret
	}
	return *o.InviteAuthentication
}

// GetInviteAuthenticationOk returns a tuple with the InviteAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisteredSipTrunkRequest) GetInviteAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.InviteAuthentication) {
		return nil, false
	}
	return o.InviteAuthentication, true
}

// HasInviteAuthentication returns a boolean if a field has been set.
func (o *RegisteredSipTrunkRequest) HasInviteAuthentication() bool {
	if o != nil && !IsNil(o.InviteAuthentication) {
		return true
	}

	return false
}

// SetInviteAuthentication gets a reference to the given bool and assigns it to the InviteAuthentication field.
func (o *RegisteredSipTrunkRequest) SetInviteAuthentication(v bool) {
	o.InviteAuthentication = &v
}

func (o RegisteredSipTrunkRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisteredSipTrunkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Tls) {
		toSerialize["tls"] = o.Tls
	}
	if !IsNil(o.InternationalCallsAllowed) {
		toSerialize["internationalCallsAllowed"] = o.InternationalCallsAllowed
	}
	toSerialize["channelLimit"] = o.ChannelLimit
	toSerialize["billingPackage"] = o.BillingPackage
	if !IsNil(o.Codecs) {
		toSerialize["codecs"] = o.Codecs
	}
	if !IsNil(o.Dtmf) {
		toSerialize["dtmf"] = o.Dtmf
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.NumberFormat) {
		toSerialize["numberFormat"] = o.NumberFormat
	}
	if !IsNil(o.Anonymization) {
		toSerialize["anonymization"] = o.Anonymization
	}
	if !IsNil(o.InviteAuthentication) {
		toSerialize["inviteAuthentication"] = o.InviteAuthentication
	}
	return toSerialize, nil
}

type NullableRegisteredSipTrunkRequest struct {
	value *RegisteredSipTrunkRequest
	isSet bool
}

func (v NullableRegisteredSipTrunkRequest) Get() *RegisteredSipTrunkRequest {
	return v.value
}

func (v *NullableRegisteredSipTrunkRequest) Set(val *RegisteredSipTrunkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisteredSipTrunkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisteredSipTrunkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisteredSipTrunkRequest(val *RegisteredSipTrunkRequest) *NullableRegisteredSipTrunkRequest {
	return &NullableRegisteredSipTrunkRequest{value: val, isSet: true}
}

func (v NullableRegisteredSipTrunkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisteredSipTrunkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
