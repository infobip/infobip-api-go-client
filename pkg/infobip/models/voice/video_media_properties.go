/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the VideoMediaProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VideoMediaProperties{}

// VideoMediaProperties Video media properties.
type VideoMediaProperties struct {
	// Indicates whether there is a video feed.
	Camera *bool
	// Indicates whether the end user is sharing their screen.
	ScreenShare *bool
}

// NewVideoMediaProperties instantiates a new VideoMediaProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewVideoMediaProperties() *VideoMediaProperties {
	this := VideoMediaProperties{}
	return &this
}

// NewVideoMediaPropertiesWithDefaults instantiates a new VideoMediaProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoMediaPropertiesWithDefaults() *VideoMediaProperties {
	this := VideoMediaProperties{}

	return &this
}

// GetCamera returns the Camera field value if set, zero value otherwise.
func (o *VideoMediaProperties) GetCamera() bool {
	if o == nil || IsNil(o.Camera) {
		var ret bool
		return ret
	}
	return *o.Camera
}

// GetCameraOk returns a tuple with the Camera field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMediaProperties) GetCameraOk() (*bool, bool) {
	if o == nil || IsNil(o.Camera) {
		return nil, false
	}
	return o.Camera, true
}

// HasCamera returns a boolean if a field has been set.
func (o *VideoMediaProperties) HasCamera() bool {
	if o != nil && !IsNil(o.Camera) {
		return true
	}

	return false
}

// SetCamera gets a reference to the given bool and assigns it to the Camera field.
func (o *VideoMediaProperties) SetCamera(v bool) {
	o.Camera = &v
}

// GetScreenShare returns the ScreenShare field value if set, zero value otherwise.
func (o *VideoMediaProperties) GetScreenShare() bool {
	if o == nil || IsNil(o.ScreenShare) {
		var ret bool
		return ret
	}
	return *o.ScreenShare
}

// GetScreenShareOk returns a tuple with the ScreenShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoMediaProperties) GetScreenShareOk() (*bool, bool) {
	if o == nil || IsNil(o.ScreenShare) {
		return nil, false
	}
	return o.ScreenShare, true
}

// HasScreenShare returns a boolean if a field has been set.
func (o *VideoMediaProperties) HasScreenShare() bool {
	if o != nil && !IsNil(o.ScreenShare) {
		return true
	}

	return false
}

// SetScreenShare gets a reference to the given bool and assigns it to the ScreenShare field.
func (o *VideoMediaProperties) SetScreenShare(v bool) {
	o.ScreenShare = &v
}

func (o VideoMediaProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VideoMediaProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Camera) {
		toSerialize["camera"] = o.Camera
	}
	if !IsNil(o.ScreenShare) {
		toSerialize["screenShare"] = o.ScreenShare
	}
	return toSerialize, nil
}

type NullableVideoMediaProperties struct {
	value *VideoMediaProperties
	isSet bool
}

func (v NullableVideoMediaProperties) Get() *VideoMediaProperties {
	return v.value
}

func (v *NullableVideoMediaProperties) Set(val *VideoMediaProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoMediaProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoMediaProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoMediaProperties(val *VideoMediaProperties) *NullableVideoMediaProperties {
	return &NullableVideoMediaProperties{value: val, isSet: true}
}

func (v NullableVideoMediaProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoMediaProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
