/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowExceptionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowExceptionResponse{}

// FlowExceptionResponse Response error codes  <table> <tr><th>Error</th><th>ErrorCode</th><th>HTTP status</th></tr> <tr><td>Bad request</td><td>40001</td><td>400</td></tr> <tr><td>Duplicate person</td><td>40002</td><td>400</td></tr> <tr><td>Person manipulation failed</td><td>40003</td><td>400</td></tr> <tr><td>Person already in flow</td><td>40004</td><td>400</td></tr> <tr><td>Flow inactive</td><td>40005</td><td>400</td></tr> <tr><td>Person is not in the flow</td><td>40006</td><td>400</td></tr> <tr><td>Flow not found</td><td>40401</td><td>404</td></tr> <tr><td>Person not found</td><td>40402</td><td>404</td></tr> <tr><td>Action not found</td><td>40403</td><td>404</td></tr> <tr><td>Internal server error</td><td>50001</td><td>500</td></tr> </table>
type FlowExceptionResponse struct {
	ErrorCode    *int32
	ErrorMessage *string
}

// NewFlowExceptionResponse instantiates a new FlowExceptionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowExceptionResponse() *FlowExceptionResponse {
	this := FlowExceptionResponse{}
	return &this
}

// NewFlowExceptionResponseWithDefaults instantiates a new FlowExceptionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowExceptionResponseWithDefaults() *FlowExceptionResponse {
	this := FlowExceptionResponse{}

	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *FlowExceptionResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowExceptionResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *FlowExceptionResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *FlowExceptionResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *FlowExceptionResponse) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowExceptionResponse) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *FlowExceptionResponse) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *FlowExceptionResponse) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o FlowExceptionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowExceptionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableFlowExceptionResponse struct {
	value *FlowExceptionResponse
	isSet bool
}

func (v NullableFlowExceptionResponse) Get() *FlowExceptionResponse {
	return v.value
}

func (v *NullableFlowExceptionResponse) Set(val *FlowExceptionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowExceptionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowExceptionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowExceptionResponse(val *FlowExceptionResponse) *NullableFlowExceptionResponse {
	return &NullableFlowExceptionResponse{value: val, isSet: true}
}

func (v NullableFlowExceptionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowExceptionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
