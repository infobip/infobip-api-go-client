/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DomainIpPoolUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainIpPoolUpdateRequest{}

// DomainIpPoolUpdateRequest struct for DomainIpPoolUpdateRequest
type DomainIpPoolUpdateRequest struct {
	// IP pool sending priority.
	Priority int32
}

type _DomainIpPoolUpdateRequest DomainIpPoolUpdateRequest

// NewDomainIpPoolUpdateRequest instantiates a new DomainIpPoolUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDomainIpPoolUpdateRequest(priority int32) *DomainIpPoolUpdateRequest {
	this := DomainIpPoolUpdateRequest{}
	this.Priority = priority
	return &this
}

// NewDomainIpPoolUpdateRequestWithDefaults instantiates a new DomainIpPoolUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainIpPoolUpdateRequestWithDefaults() *DomainIpPoolUpdateRequest {
	this := DomainIpPoolUpdateRequest{}

	return &this
}

// GetPriority returns the Priority field value
func (o *DomainIpPoolUpdateRequest) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *DomainIpPoolUpdateRequest) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *DomainIpPoolUpdateRequest) SetPriority(v int32) {
	o.Priority = v
}

func (o DomainIpPoolUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainIpPoolUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["priority"] = o.Priority
	return toSerialize, nil
}

type NullableDomainIpPoolUpdateRequest struct {
	value *DomainIpPoolUpdateRequest
	isSet bool
}

func (v NullableDomainIpPoolUpdateRequest) Get() *DomainIpPoolUpdateRequest {
	return v.value
}

func (v *NullableDomainIpPoolUpdateRequest) Set(val *DomainIpPoolUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainIpPoolUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainIpPoolUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainIpPoolUpdateRequest(val *DomainIpPoolUpdateRequest) *NullableDomainIpPoolUpdateRequest {
	return &NullableDomainIpPoolUpdateRequest{value: val, isSet: true}
}

func (v NullableDomainIpPoolUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainIpPoolUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
