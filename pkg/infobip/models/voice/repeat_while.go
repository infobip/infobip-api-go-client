/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RepeatWhile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepeatWhile{}

// RepeatWhile Repeat-While action is a control flow statement that repeatedly executes a block of code, as long as the boolean condition in the while field is true. Comparison is done using equal (==) or not equal (!=) operators. Make sure not to provide a condition that causes an infinite loop.
type RepeatWhile struct {
	// Array of IVR actions defining scenario. NOTE: Answering Machine Detection, Call Recording and Speech Recognition (used for Capture action) are add-on features. To enable these add-ons, please contact our [sales](https://www.infobip.com/contact) organisation.
	Repeat []ScriptInner
	// The expression to evaluate.
	While string
}

type _RepeatWhile RepeatWhile

// NewRepeatWhile instantiates a new RepeatWhile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewRepeatWhile(repeat []ScriptInner, while string) *RepeatWhile {
	this := RepeatWhile{}
	this.Repeat = repeat
	this.While = while
	return &this
}

// NewRepeatWhileWithDefaults instantiates a new RepeatWhile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepeatWhileWithDefaults() *RepeatWhile {
	this := RepeatWhile{}

	return &this
}

// GetRepeat returns the Repeat field value
func (o *RepeatWhile) GetRepeat() []ScriptInner {
	if o == nil {
		var ret []ScriptInner
		return ret
	}

	return o.Repeat
}

// GetRepeatOk returns a tuple with the Repeat field value
// and a boolean to check if the value has been set.
func (o *RepeatWhile) GetRepeatOk() ([]ScriptInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Repeat, true
}

// SetRepeat sets field value
func (o *RepeatWhile) SetRepeat(v []ScriptInner) {
	o.Repeat = v
}

// GetWhile returns the While field value
func (o *RepeatWhile) GetWhile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.While
}

// GetWhileOk returns a tuple with the While field value
// and a boolean to check if the value has been set.
func (o *RepeatWhile) GetWhileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.While, true
}

// SetWhile sets field value
func (o *RepeatWhile) SetWhile(v string) {
	o.While = v
}

func (o RepeatWhile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepeatWhile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repeat"] = o.Repeat
	toSerialize["while"] = o.While
	return toSerialize, nil
}

type NullableRepeatWhile struct {
	value *RepeatWhile
	isSet bool
}

func (v NullableRepeatWhile) Get() *RepeatWhile {
	return v.value
}

func (v *NullableRepeatWhile) Set(val *RepeatWhile) {
	v.value = val
	v.isSet = true
}

func (v NullableRepeatWhile) IsSet() bool {
	return v.isSet
}

func (v *NullableRepeatWhile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepeatWhile(val *RepeatWhile) *NullableRepeatWhile {
	return &NullableRepeatWhile{value: val, isSet: true}
}

func (v NullableRepeatWhile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepeatWhile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
