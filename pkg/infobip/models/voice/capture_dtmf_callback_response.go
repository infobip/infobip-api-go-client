/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CaptureDtmfCallbackResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaptureDtmfCallbackResponse{}

// CaptureDtmfCallbackResponse struct for CaptureDtmfCallbackResponse
type CaptureDtmfCallbackResponse struct {
	Command string
	// ID of an audio file to play. Required if `fileUrl` is not provided.
	FileId *string
	// URL of an audio file to play. Required if `fileId` is not provided.
	FileUrl *string
	// Maximum number of digits to capture.
	MaxLength int32
	// The duration, in milliseconds, to wait for the first DTMF digit response.
	Timeout int32
	// Duration, in milliseconds, to wait for a DTMF digit in-between individual digit inputs. If not set, `digitTimeout` will use the same duration as `timeout`.
	DigitTimeout *int32
	// Digit used to end input if less than `maxLength` digits have been pressed.
	Terminator *string
	// Whether to convert the collected number into international format or not.
	AddCountryCode *bool
}

type _CaptureDtmfCallbackResponse CaptureDtmfCallbackResponse

// NewCaptureDtmfCallbackResponse instantiates a new CaptureDtmfCallbackResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaptureDtmfCallbackResponse(maxLength int32, timeout int32) *CaptureDtmfCallbackResponse {
	this := CaptureDtmfCallbackResponse{}
	this.Command = "captureDtmf"
	this.MaxLength = maxLength
	this.Timeout = timeout
	var terminator string = "#"
	this.Terminator = &terminator
	var addCountryCode bool = false
	this.AddCountryCode = &addCountryCode
	return &this
}

// NewCaptureDtmfCallbackResponseWithDefaults instantiates a new CaptureDtmfCallbackResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaptureDtmfCallbackResponseWithDefaults() *CaptureDtmfCallbackResponse {
	this := CaptureDtmfCallbackResponse{}
	this.Command = "captureDtmf"
	var maxLength int32 = 15
	this.MaxLength = maxLength
	var terminator string = "#"
	this.Terminator = &terminator
	var addCountryCode bool = false
	this.AddCountryCode = &addCountryCode
	return &this
}

// GetCommand returns the Command field value
func (o *CaptureDtmfCallbackResponse) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *CaptureDtmfCallbackResponse) SetCommand(v string) {
	o.Command = v
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *CaptureDtmfCallbackResponse) GetFileId() string {
	if o == nil || IsNil(o.FileId) {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileId) {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *CaptureDtmfCallbackResponse) HasFileId() bool {
	if o != nil && !IsNil(o.FileId) {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *CaptureDtmfCallbackResponse) SetFileId(v string) {
	o.FileId = &v
}

// GetFileUrl returns the FileUrl field value if set, zero value otherwise.
func (o *CaptureDtmfCallbackResponse) GetFileUrl() string {
	if o == nil || IsNil(o.FileUrl) {
		var ret string
		return ret
	}
	return *o.FileUrl
}

// GetFileUrlOk returns a tuple with the FileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetFileUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileUrl) {
		return nil, false
	}
	return o.FileUrl, true
}

// HasFileUrl returns a boolean if a field has been set.
func (o *CaptureDtmfCallbackResponse) HasFileUrl() bool {
	if o != nil && !IsNil(o.FileUrl) {
		return true
	}

	return false
}

// SetFileUrl gets a reference to the given string and assigns it to the FileUrl field.
func (o *CaptureDtmfCallbackResponse) SetFileUrl(v string) {
	o.FileUrl = &v
}

// GetMaxLength returns the MaxLength field value
func (o *CaptureDtmfCallbackResponse) GetMaxLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetMaxLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxLength, true
}

// SetMaxLength sets field value
func (o *CaptureDtmfCallbackResponse) SetMaxLength(v int32) {
	o.MaxLength = v
}

// GetTimeout returns the Timeout field value
func (o *CaptureDtmfCallbackResponse) GetTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *CaptureDtmfCallbackResponse) SetTimeout(v int32) {
	o.Timeout = v
}

// GetDigitTimeout returns the DigitTimeout field value if set, zero value otherwise.
func (o *CaptureDtmfCallbackResponse) GetDigitTimeout() int32 {
	if o == nil || IsNil(o.DigitTimeout) {
		var ret int32
		return ret
	}
	return *o.DigitTimeout
}

// GetDigitTimeoutOk returns a tuple with the DigitTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetDigitTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.DigitTimeout) {
		return nil, false
	}
	return o.DigitTimeout, true
}

// HasDigitTimeout returns a boolean if a field has been set.
func (o *CaptureDtmfCallbackResponse) HasDigitTimeout() bool {
	if o != nil && !IsNil(o.DigitTimeout) {
		return true
	}

	return false
}

// SetDigitTimeout gets a reference to the given int32 and assigns it to the DigitTimeout field.
func (o *CaptureDtmfCallbackResponse) SetDigitTimeout(v int32) {
	o.DigitTimeout = &v
}

// GetTerminator returns the Terminator field value if set, zero value otherwise.
func (o *CaptureDtmfCallbackResponse) GetTerminator() string {
	if o == nil || IsNil(o.Terminator) {
		var ret string
		return ret
	}
	return *o.Terminator
}

// GetTerminatorOk returns a tuple with the Terminator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetTerminatorOk() (*string, bool) {
	if o == nil || IsNil(o.Terminator) {
		return nil, false
	}
	return o.Terminator, true
}

// HasTerminator returns a boolean if a field has been set.
func (o *CaptureDtmfCallbackResponse) HasTerminator() bool {
	if o != nil && !IsNil(o.Terminator) {
		return true
	}

	return false
}

// SetTerminator gets a reference to the given string and assigns it to the Terminator field.
func (o *CaptureDtmfCallbackResponse) SetTerminator(v string) {
	o.Terminator = &v
}

// GetAddCountryCode returns the AddCountryCode field value if set, zero value otherwise.
func (o *CaptureDtmfCallbackResponse) GetAddCountryCode() bool {
	if o == nil || IsNil(o.AddCountryCode) {
		var ret bool
		return ret
	}
	return *o.AddCountryCode
}

// GetAddCountryCodeOk returns a tuple with the AddCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDtmfCallbackResponse) GetAddCountryCodeOk() (*bool, bool) {
	if o == nil || IsNil(o.AddCountryCode) {
		return nil, false
	}
	return o.AddCountryCode, true
}

// HasAddCountryCode returns a boolean if a field has been set.
func (o *CaptureDtmfCallbackResponse) HasAddCountryCode() bool {
	if o != nil && !IsNil(o.AddCountryCode) {
		return true
	}

	return false
}

// SetAddCountryCode gets a reference to the given bool and assigns it to the AddCountryCode field.
func (o *CaptureDtmfCallbackResponse) SetAddCountryCode(v bool) {
	o.AddCountryCode = &v
}

func (o CaptureDtmfCallbackResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaptureDtmfCallbackResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	if !IsNil(o.FileId) {
		toSerialize["fileId"] = o.FileId
	}
	if !IsNil(o.FileUrl) {
		toSerialize["fileUrl"] = o.FileUrl
	}
	toSerialize["maxLength"] = o.MaxLength
	toSerialize["timeout"] = o.Timeout
	if !IsNil(o.DigitTimeout) {
		toSerialize["digitTimeout"] = o.DigitTimeout
	}
	if !IsNil(o.Terminator) {
		toSerialize["terminator"] = o.Terminator
	}
	if !IsNil(o.AddCountryCode) {
		toSerialize["addCountryCode"] = o.AddCountryCode
	}
	return toSerialize, nil
}

type NullableCaptureDtmfCallbackResponse struct {
	value *CaptureDtmfCallbackResponse
	isSet bool
}

func (v NullableCaptureDtmfCallbackResponse) Get() *CaptureDtmfCallbackResponse {
	return v.value
}

func (v *NullableCaptureDtmfCallbackResponse) Set(val *CaptureDtmfCallbackResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCaptureDtmfCallbackResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCaptureDtmfCallbackResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaptureDtmfCallbackResponse(val *CaptureDtmfCallbackResponse) *NullableCaptureDtmfCallbackResponse {
	return &NullableCaptureDtmfCallbackResponse{value: val, isSet: true}
}

func (v NullableCaptureDtmfCallbackResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaptureDtmfCallbackResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
