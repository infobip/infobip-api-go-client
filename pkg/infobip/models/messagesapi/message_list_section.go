/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageListSection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageListSection{}

// MessageListSection Section's list.
type MessageListSection struct {
	// Section's title
	SectionTitle string
	// Multiple Selection.
	MultipleSelection *bool
	// List Items.
	Items []MessageListItem
}

type _MessageListSection MessageListSection

// NewMessageListSection instantiates a new MessageListSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageListSection(sectionTitle string, items []MessageListItem) *MessageListSection {
	this := MessageListSection{}
	this.SectionTitle = sectionTitle
	this.Items = items
	return &this
}

// NewMessageListSectionWithDefaults instantiates a new MessageListSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageListSectionWithDefaults() *MessageListSection {
	this := MessageListSection{}
	return &this
}

// GetSectionTitle returns the SectionTitle field value
func (o *MessageListSection) GetSectionTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SectionTitle
}

// GetSectionTitleOk returns a tuple with the SectionTitle field value
// and a boolean to check if the value has been set.
func (o *MessageListSection) GetSectionTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SectionTitle, true
}

// SetSectionTitle sets field value
func (o *MessageListSection) SetSectionTitle(v string) {
	o.SectionTitle = v
}

// GetMultipleSelection returns the MultipleSelection field value if set, zero value otherwise.
func (o *MessageListSection) GetMultipleSelection() bool {
	if o == nil || IsNil(o.MultipleSelection) {
		var ret bool
		return ret
	}
	return *o.MultipleSelection
}

// GetMultipleSelectionOk returns a tuple with the MultipleSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageListSection) GetMultipleSelectionOk() (*bool, bool) {
	if o == nil || IsNil(o.MultipleSelection) {
		return nil, false
	}
	return o.MultipleSelection, true
}

// HasMultipleSelection returns a boolean if a field has been set.
func (o *MessageListSection) HasMultipleSelection() bool {
	if o != nil && !IsNil(o.MultipleSelection) {
		return true
	}

	return false
}

// SetMultipleSelection gets a reference to the given bool and assigns it to the MultipleSelection field.
func (o *MessageListSection) SetMultipleSelection(v bool) {
	o.MultipleSelection = &v
}

// GetItems returns the Items field value
func (o *MessageListSection) GetItems() []MessageListItem {
	if o == nil {
		var ret []MessageListItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *MessageListSection) GetItemsOk() ([]MessageListItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *MessageListSection) SetItems(v []MessageListItem) {
	o.Items = v
}

func (o MessageListSection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageListSection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sectionTitle"] = o.SectionTitle
	if !IsNil(o.MultipleSelection) {
		toSerialize["multipleSelection"] = o.MultipleSelection
	}
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

type NullableMessageListSection struct {
	value *MessageListSection
	isSet bool
}

func (v NullableMessageListSection) Get() *MessageListSection {
	return v.value
}

func (v *NullableMessageListSection) Set(val *MessageListSection) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageListSection) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageListSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageListSection(val *MessageListSection) *NullableMessageListSection {
	return &NullableMessageListSection{value: val, isSet: true}
}

func (v NullableMessageListSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageListSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
