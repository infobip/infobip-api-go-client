/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the UpdateEmailMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateEmailMessageRequest{}

// UpdateEmailMessageRequest struct for UpdateEmailMessageRequest
type UpdateEmailMessageRequest struct {
	// Email template ID that should reference a previously created Email template.
	EmailTemplateId *int64
	// The sender of the 2FA message, an email address with an optional sender name (e.g. `company@example.com` or `Jane Smith <jane.smith@somecompany.com>`).
	From *string
	// PIN code length.
	PinLength *int32
	PinType   *PinType
}

// NewUpdateEmailMessageRequest instantiates a new UpdateEmailMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewUpdateEmailMessageRequest() *UpdateEmailMessageRequest {
	this := UpdateEmailMessageRequest{}
	return &this
}

// NewUpdateEmailMessageRequestWithDefaults instantiates a new UpdateEmailMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEmailMessageRequestWithDefaults() *UpdateEmailMessageRequest {
	this := UpdateEmailMessageRequest{}

	return &this
}

// GetEmailTemplateId returns the EmailTemplateId field value if set, zero value otherwise.
func (o *UpdateEmailMessageRequest) GetEmailTemplateId() int64 {
	if o == nil || IsNil(o.EmailTemplateId) {
		var ret int64
		return ret
	}
	return *o.EmailTemplateId
}

// GetEmailTemplateIdOk returns a tuple with the EmailTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEmailMessageRequest) GetEmailTemplateIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EmailTemplateId) {
		return nil, false
	}
	return o.EmailTemplateId, true
}

// HasEmailTemplateId returns a boolean if a field has been set.
func (o *UpdateEmailMessageRequest) HasEmailTemplateId() bool {
	if o != nil && !IsNil(o.EmailTemplateId) {
		return true
	}

	return false
}

// SetEmailTemplateId gets a reference to the given int64 and assigns it to the EmailTemplateId field.
func (o *UpdateEmailMessageRequest) SetEmailTemplateId(v int64) {
	o.EmailTemplateId = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *UpdateEmailMessageRequest) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEmailMessageRequest) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *UpdateEmailMessageRequest) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *UpdateEmailMessageRequest) SetFrom(v string) {
	o.From = &v
}

// GetPinLength returns the PinLength field value if set, zero value otherwise.
func (o *UpdateEmailMessageRequest) GetPinLength() int32 {
	if o == nil || IsNil(o.PinLength) {
		var ret int32
		return ret
	}
	return *o.PinLength
}

// GetPinLengthOk returns a tuple with the PinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEmailMessageRequest) GetPinLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PinLength) {
		return nil, false
	}
	return o.PinLength, true
}

// HasPinLength returns a boolean if a field has been set.
func (o *UpdateEmailMessageRequest) HasPinLength() bool {
	if o != nil && !IsNil(o.PinLength) {
		return true
	}

	return false
}

// SetPinLength gets a reference to the given int32 and assigns it to the PinLength field.
func (o *UpdateEmailMessageRequest) SetPinLength(v int32) {
	o.PinLength = &v
}

// GetPinType returns the PinType field value if set, zero value otherwise.
func (o *UpdateEmailMessageRequest) GetPinType() PinType {
	if o == nil || IsNil(o.PinType) {
		var ret PinType
		return ret
	}
	return *o.PinType
}

// GetPinTypeOk returns a tuple with the PinType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateEmailMessageRequest) GetPinTypeOk() (*PinType, bool) {
	if o == nil || IsNil(o.PinType) {
		return nil, false
	}
	return o.PinType, true
}

// HasPinType returns a boolean if a field has been set.
func (o *UpdateEmailMessageRequest) HasPinType() bool {
	if o != nil && !IsNil(o.PinType) {
		return true
	}

	return false
}

// SetPinType gets a reference to the given PinType and assigns it to the PinType field.
func (o *UpdateEmailMessageRequest) SetPinType(v PinType) {
	o.PinType = &v
}

func (o UpdateEmailMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateEmailMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailTemplateId) {
		toSerialize["emailTemplateId"] = o.EmailTemplateId
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.PinLength) {
		toSerialize["pinLength"] = o.PinLength
	}
	if !IsNil(o.PinType) {
		toSerialize["pinType"] = o.PinType
	}
	return toSerialize, nil
}

type NullableUpdateEmailMessageRequest struct {
	value *UpdateEmailMessageRequest
	isSet bool
}

func (v NullableUpdateEmailMessageRequest) Get() *UpdateEmailMessageRequest {
	return v.value
}

func (v *NullableUpdateEmailMessageRequest) Set(val *UpdateEmailMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEmailMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEmailMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEmailMessageRequest(val *UpdateEmailMessageRequest) *NullableUpdateEmailMessageRequest {
	return &NullableUpdateEmailMessageRequest{value: val, isSet: true}
}

func (v NullableUpdateEmailMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEmailMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
