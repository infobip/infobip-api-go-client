/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageVideoBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageVideoBody{}

// MessageVideoBody struct for MessageVideoBody
type MessageVideoBody struct {
	Type MessageBodyType
	// URL of the video.
	Url string
	// Video caption.
	Text *string
	// URL of the thumbnail of the video (required and used only for Viber messages).
	ThumbnailUrl *string
}

type _MessageVideoBody MessageVideoBody

// NewMessageVideoBody instantiates a new MessageVideoBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageVideoBody(url string) *MessageVideoBody {
	this := MessageVideoBody{}
	this.Type = MESSAGEBODYTYPE_VIDEO
	this.Url = url
	return &this
}

// NewMessageVideoBodyWithDefaults instantiates a new MessageVideoBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageVideoBodyWithDefaults() *MessageVideoBody {
	this := MessageVideoBody{}
	return &this
}

// GetUrl returns the Url field value
func (o *MessageVideoBody) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MessageVideoBody) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MessageVideoBody) SetUrl(v string) {
	o.Url = v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MessageVideoBody) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageVideoBody) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MessageVideoBody) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MessageVideoBody) SetText(v string) {
	o.Text = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *MessageVideoBody) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageVideoBody) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *MessageVideoBody) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *MessageVideoBody) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

func (o MessageVideoBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageVideoBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnailUrl"] = o.ThumbnailUrl
	}
	return toSerialize, nil
}

type NullableMessageVideoBody struct {
	value *MessageVideoBody
	isSet bool
}

func (v NullableMessageVideoBody) Get() *MessageVideoBody {
	return v.value
}

func (v *NullableMessageVideoBody) Set(val *MessageVideoBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageVideoBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageVideoBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageVideoBody(val *MessageVideoBody) *NullableMessageVideoBody {
	return &NullableMessageVideoBody{value: val, isSet: true}
}

func (v NullableMessageVideoBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageVideoBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
