/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// SipTrunkActionStatus Status of the last action performed on the SIP trunk configuration.
type SipTrunkActionStatus string

// List of SipTrunkActionStatus
const (
	SIPTRUNKACTIONSTATUS_CREATING SipTrunkActionStatus = "CREATING"
	SIPTRUNKACTIONSTATUS_UPDATING SipTrunkActionStatus = "UPDATING"
	SIPTRUNKACTIONSTATUS_DELETING SipTrunkActionStatus = "DELETING"
	SIPTRUNKACTIONSTATUS_FAILED   SipTrunkActionStatus = "FAILED"
	SIPTRUNKACTIONSTATUS_RESET    SipTrunkActionStatus = "RESET"
	SIPTRUNKACTIONSTATUS_SUCCESS  SipTrunkActionStatus = "SUCCESS"
)

// All allowed values of SipTrunkActionStatus enum
var AllowedSipTrunkActionStatusEnumValues = []SipTrunkActionStatus{
	"CREATING",
	"UPDATING",
	"DELETING",
	"FAILED",
	"RESET",
	"SUCCESS",
}

func (v *SipTrunkActionStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SipTrunkActionStatus(value)
	for _, existing := range AllowedSipTrunkActionStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SipTrunkActionStatus", value)
}

// NewSipTrunkActionStatusFromValue returns a pointer to a valid SipTrunkActionStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSipTrunkActionStatusFromValue(v string) (*SipTrunkActionStatus, error) {
	ev := SipTrunkActionStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SipTrunkActionStatus: valid values are %v", v, AllowedSipTrunkActionStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SipTrunkActionStatus) IsValid() bool {
	for _, existing := range AllowedSipTrunkActionStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SipTrunkActionStatus value
func (v SipTrunkActionStatus) Ptr() *SipTrunkActionStatus {
	return &v
}

type NullableSipTrunkActionStatus struct {
	value *SipTrunkActionStatus
	isSet bool
}

func (v NullableSipTrunkActionStatus) Get() *SipTrunkActionStatus {
	return v.value
}

func (v *NullableSipTrunkActionStatus) Set(val *SipTrunkActionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSipTrunkActionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSipTrunkActionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSipTrunkActionStatus(val *SipTrunkActionStatus) *NullableSipTrunkActionStatus {
	return &NullableSipTrunkActionStatus{value: val, isSet: true}
}

func (v NullableSipTrunkActionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSipTrunkActionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
