/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the VoiceOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceOptions{}

// VoiceOptions struct for VoiceOptions
type VoiceOptions struct {
	// Name of the voice in which the text would be synthesized.
	Name *string
	// Gender in which the text would be synthesized.
	Gender *string
}

// NewVoiceOptions instantiates a new VoiceOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewVoiceOptions() *VoiceOptions {
	this := VoiceOptions{}
	return &this
}

// NewVoiceOptionsWithDefaults instantiates a new VoiceOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceOptionsWithDefaults() *VoiceOptions {
	this := VoiceOptions{}

	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VoiceOptions) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceOptions) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VoiceOptions) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VoiceOptions) SetName(v string) {
	o.Name = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *VoiceOptions) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceOptions) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *VoiceOptions) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *VoiceOptions) SetGender(v string) {
	o.Gender = &v
}

func (o VoiceOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	return toSerialize, nil
}

type NullableVoiceOptions struct {
	value *VoiceOptions
	isSet bool
}

func (v NullableVoiceOptions) Get() *VoiceOptions {
	return v.value
}

func (v *NullableVoiceOptions) Set(val *VoiceOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceOptions(val *VoiceOptions) *NullableVoiceOptions {
	return &NullableVoiceOptions{value: val, isSet: true}
}

func (v NullableVoiceOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
