/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsUrlOptions Sets up [URL shortening](https://www.infobip.com/docs/url-shortening) and tracking feature. Not compatible with old tracking feature.
type SmsUrlOptions struct {
	// Enable shortening of the URLs within a message. Set this to `true`, if you want to set up other URL options.
	ShortenUrl *bool `json:"shortenUrl,omitempty"`
	// Enable tracking of short URL clicks within a message: which URL was clicked, how many times, and by whom.
	TrackClicks *bool `json:"trackClicks,omitempty"`
	// The URL of your callback server on to which the Click report will be sent.
	TrackingUrl *string `json:"trackingUrl,omitempty"`
	// Remove a protocol, such as `https://`, from links to shorten a message. Note that some mobiles may not recognize such links as a URL.
	RemoveProtocol *bool `json:"removeProtocol,omitempty"`
	// Select a predefined custom domain to use when generating a short URL.
	CustomDomain *string `json:"customDomain,omitempty"`
}

// NewSmsUrlOptions instantiates a new SmsUrlOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsUrlOptions() *SmsUrlOptions {
	this := SmsUrlOptions{}
	var shortenUrl bool = true
	this.ShortenUrl = &shortenUrl
	var trackClicks bool = true
	this.TrackClicks = &trackClicks
	var removeProtocol bool = false
	this.RemoveProtocol = &removeProtocol
	return &this
}

// NewSmsUrlOptionsWithDefaults instantiates a new SmsUrlOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsUrlOptionsWithDefaults() *SmsUrlOptions {
	this := SmsUrlOptions{}
	var shortenUrl bool = true
	this.ShortenUrl = &shortenUrl
	var trackClicks bool = true
	this.TrackClicks = &trackClicks
	var removeProtocol bool = false
	this.RemoveProtocol = &removeProtocol
	return &this
}

// GetShortenUrl returns the ShortenUrl field value if set, zero value otherwise.
func (o *SmsUrlOptions) GetShortenUrl() bool {
	if o == nil || o.ShortenUrl == nil {
		var ret bool
		return ret
	}
	return *o.ShortenUrl
}

// GetShortenUrlOk returns a tuple with the ShortenUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsUrlOptions) GetShortenUrlOk() (*bool, bool) {
	if o == nil || o.ShortenUrl == nil {
		return nil, false
	}
	return o.ShortenUrl, true
}

// HasShortenUrl returns a boolean if a field has been set.
func (o *SmsUrlOptions) HasShortenUrl() bool {
	if o != nil && o.ShortenUrl != nil {
		return true
	}

	return false
}

// SetShortenUrl gets a reference to the given bool and assigns it to the ShortenUrl field.
func (o *SmsUrlOptions) SetShortenUrl(v bool) {
	o.ShortenUrl = &v
}

// GetTrackClicks returns the TrackClicks field value if set, zero value otherwise.
func (o *SmsUrlOptions) GetTrackClicks() bool {
	if o == nil || o.TrackClicks == nil {
		var ret bool
		return ret
	}
	return *o.TrackClicks
}

// GetTrackClicksOk returns a tuple with the TrackClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsUrlOptions) GetTrackClicksOk() (*bool, bool) {
	if o == nil || o.TrackClicks == nil {
		return nil, false
	}
	return o.TrackClicks, true
}

// HasTrackClicks returns a boolean if a field has been set.
func (o *SmsUrlOptions) HasTrackClicks() bool {
	if o != nil && o.TrackClicks != nil {
		return true
	}

	return false
}

// SetTrackClicks gets a reference to the given bool and assigns it to the TrackClicks field.
func (o *SmsUrlOptions) SetTrackClicks(v bool) {
	o.TrackClicks = &v
}

// GetTrackingUrl returns the TrackingUrl field value if set, zero value otherwise.
func (o *SmsUrlOptions) GetTrackingUrl() string {
	if o == nil || o.TrackingUrl == nil {
		var ret string
		return ret
	}
	return *o.TrackingUrl
}

// GetTrackingUrlOk returns a tuple with the TrackingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsUrlOptions) GetTrackingUrlOk() (*string, bool) {
	if o == nil || o.TrackingUrl == nil {
		return nil, false
	}
	return o.TrackingUrl, true
}

// HasTrackingUrl returns a boolean if a field has been set.
func (o *SmsUrlOptions) HasTrackingUrl() bool {
	if o != nil && o.TrackingUrl != nil {
		return true
	}

	return false
}

// SetTrackingUrl gets a reference to the given string and assigns it to the TrackingUrl field.
func (o *SmsUrlOptions) SetTrackingUrl(v string) {
	o.TrackingUrl = &v
}

// GetRemoveProtocol returns the RemoveProtocol field value if set, zero value otherwise.
func (o *SmsUrlOptions) GetRemoveProtocol() bool {
	if o == nil || o.RemoveProtocol == nil {
		var ret bool
		return ret
	}
	return *o.RemoveProtocol
}

// GetRemoveProtocolOk returns a tuple with the RemoveProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsUrlOptions) GetRemoveProtocolOk() (*bool, bool) {
	if o == nil || o.RemoveProtocol == nil {
		return nil, false
	}
	return o.RemoveProtocol, true
}

// HasRemoveProtocol returns a boolean if a field has been set.
func (o *SmsUrlOptions) HasRemoveProtocol() bool {
	if o != nil && o.RemoveProtocol != nil {
		return true
	}

	return false
}

// SetRemoveProtocol gets a reference to the given bool and assigns it to the RemoveProtocol field.
func (o *SmsUrlOptions) SetRemoveProtocol(v bool) {
	o.RemoveProtocol = &v
}

// GetCustomDomain returns the CustomDomain field value if set, zero value otherwise.
func (o *SmsUrlOptions) GetCustomDomain() string {
	if o == nil || o.CustomDomain == nil {
		var ret string
		return ret
	}
	return *o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsUrlOptions) GetCustomDomainOk() (*string, bool) {
	if o == nil || o.CustomDomain == nil {
		return nil, false
	}
	return o.CustomDomain, true
}

// HasCustomDomain returns a boolean if a field has been set.
func (o *SmsUrlOptions) HasCustomDomain() bool {
	if o != nil && o.CustomDomain != nil {
		return true
	}

	return false
}

// SetCustomDomain gets a reference to the given string and assigns it to the CustomDomain field.
func (o *SmsUrlOptions) SetCustomDomain(v string) {
	o.CustomDomain = &v
}

func (o SmsUrlOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShortenUrl != nil {
		toSerialize["shortenUrl"] = o.ShortenUrl
	}
	if o.TrackClicks != nil {
		toSerialize["trackClicks"] = o.TrackClicks
	}
	if o.TrackingUrl != nil {
		toSerialize["trackingUrl"] = o.TrackingUrl
	}
	if o.RemoveProtocol != nil {
		toSerialize["removeProtocol"] = o.RemoveProtocol
	}
	if o.CustomDomain != nil {
		toSerialize["customDomain"] = o.CustomDomain
	}
	return json.Marshal(toSerialize)
}

type NullableSmsUrlOptions struct {
	value *SmsUrlOptions
	isSet bool
}

func (v NullableSmsUrlOptions) Get() *SmsUrlOptions {
	return v.value
}

func (v *NullableSmsUrlOptions) Set(val *SmsUrlOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsUrlOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsUrlOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsUrlOptions(val *SmsUrlOptions) *NullableSmsUrlOptions {
	return &NullableSmsUrlOptions{value: val, isSet: true}
}

func (v NullableSmsUrlOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsUrlOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
