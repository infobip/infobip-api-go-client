/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// GenesysCloudRegion Genesys cloud region.
type GenesysCloudRegion string

// List of GenesysCloudRegion
const (
	GENESYSCLOUDREGION_NA_US_EAST_1   GenesysCloudRegion = "NA_US_EAST_1"
	GENESYSCLOUDREGION_NA_US_EAST_2   GenesysCloudRegion = "NA_US_EAST_2"
	GENESYSCLOUDREGION_NA_US_WEST_2   GenesysCloudRegion = "NA_US_WEST_2"
	GENESYSCLOUDREGION_CA_CENTRAL_1   GenesysCloudRegion = "CA_CENTRAL_1"
	GENESYSCLOUDREGION_SA_EAST_1      GenesysCloudRegion = "SA_EAST_1"
	GENESYSCLOUDREGION_EU_CENTRAL_1   GenesysCloudRegion = "EU_CENTRAL_1"
	GENESYSCLOUDREGION_EU_CENTRAL_2   GenesysCloudRegion = "EU_CENTRAL_2"
	GENESYSCLOUDREGION_EU_WEST_1      GenesysCloudRegion = "EU_WEST_1"
	GENESYSCLOUDREGION_EU_WEST_2      GenesysCloudRegion = "EU_WEST_2"
	GENESYSCLOUDREGION_ME_CENTRAL_1   GenesysCloudRegion = "ME_CENTRAL_1"
	GENESYSCLOUDREGION_AP_SOUTH_1     GenesysCloudRegion = "AP_SOUTH_1"
	GENESYSCLOUDREGION_AP_NORTHEAST_3 GenesysCloudRegion = "AP_NORTHEAST_3"
	GENESYSCLOUDREGION_AP_NORTHEAST_2 GenesysCloudRegion = "AP_NORTHEAST_2"
	GENESYSCLOUDREGION_AP_SOUTHEAST_2 GenesysCloudRegion = "AP_SOUTHEAST_2"
	GENESYSCLOUDREGION_AP_NORTHEAST_1 GenesysCloudRegion = "AP_NORTHEAST_1"
)

// All allowed values of GenesysCloudRegion enum
var AllowedGenesysCloudRegionEnumValues = []GenesysCloudRegion{
	"NA_US_EAST_1",
	"NA_US_EAST_2",
	"NA_US_WEST_2",
	"CA_CENTRAL_1",
	"SA_EAST_1",
	"EU_CENTRAL_1",
	"EU_CENTRAL_2",
	"EU_WEST_1",
	"EU_WEST_2",
	"ME_CENTRAL_1",
	"AP_SOUTH_1",
	"AP_NORTHEAST_3",
	"AP_NORTHEAST_2",
	"AP_SOUTHEAST_2",
	"AP_NORTHEAST_1",
}

func (v *GenesysCloudRegion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GenesysCloudRegion(value)
	for _, existing := range AllowedGenesysCloudRegionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GenesysCloudRegion", value)
}

// NewGenesysCloudRegionFromValue returns a pointer to a valid GenesysCloudRegion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGenesysCloudRegionFromValue(v string) (*GenesysCloudRegion, error) {
	ev := GenesysCloudRegion(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GenesysCloudRegion: valid values are %v", v, AllowedGenesysCloudRegionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GenesysCloudRegion) IsValid() bool {
	for _, existing := range AllowedGenesysCloudRegionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GenesysCloudRegion value
func (v GenesysCloudRegion) Ptr() *GenesysCloudRegion {
	return &v
}

type NullableGenesysCloudRegion struct {
	value *GenesysCloudRegion
	isSet bool
}

func (v NullableGenesysCloudRegion) Get() *GenesysCloudRegion {
	return v.value
}

func (v *NullableGenesysCloudRegion) Set(val *GenesysCloudRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableGenesysCloudRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableGenesysCloudRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenesysCloudRegion(val *GenesysCloudRegion) *NullableGenesysCloudRegion {
	return &NullableGenesysCloudRegion{value: val, isSet: true}
}

func (v NullableGenesysCloudRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenesysCloudRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
