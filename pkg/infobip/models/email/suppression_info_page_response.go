/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SuppressionInfoPageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuppressionInfoPageResponse{}

// SuppressionInfoPageResponse Suppression get response.
type SuppressionInfoPageResponse struct {
	// Suppressed addresses for requested paging information.
	Results []SuppressionInfo
	Paging  ApiPageDetails
}

type _SuppressionInfoPageResponse SuppressionInfoPageResponse

// NewSuppressionInfoPageResponse instantiates a new SuppressionInfoPageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewSuppressionInfoPageResponse(results []SuppressionInfo, paging ApiPageDetails) *SuppressionInfoPageResponse {
	this := SuppressionInfoPageResponse{}
	this.Results = results
	this.Paging = paging
	return &this
}

// NewSuppressionInfoPageResponseWithDefaults instantiates a new SuppressionInfoPageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuppressionInfoPageResponseWithDefaults() *SuppressionInfoPageResponse {
	this := SuppressionInfoPageResponse{}

	return &this
}

// GetResults returns the Results field value
func (o *SuppressionInfoPageResponse) GetResults() []SuppressionInfo {
	if o == nil {
		var ret []SuppressionInfo
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *SuppressionInfoPageResponse) GetResultsOk() ([]SuppressionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *SuppressionInfoPageResponse) SetResults(v []SuppressionInfo) {
	o.Results = v
}

// GetPaging returns the Paging field value
func (o *SuppressionInfoPageResponse) GetPaging() ApiPageDetails {
	if o == nil {
		var ret ApiPageDetails
		return ret
	}

	return o.Paging
}

// GetPagingOk returns a tuple with the Paging field value
// and a boolean to check if the value has been set.
func (o *SuppressionInfoPageResponse) GetPagingOk() (*ApiPageDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Paging, true
}

// SetPaging sets field value
func (o *SuppressionInfoPageResponse) SetPaging(v ApiPageDetails) {
	o.Paging = v
}

func (o SuppressionInfoPageResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuppressionInfoPageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	toSerialize["paging"] = o.Paging
	return toSerialize, nil
}

type NullableSuppressionInfoPageResponse struct {
	value *SuppressionInfoPageResponse
	isSet bool
}

func (v NullableSuppressionInfoPageResponse) Get() *SuppressionInfoPageResponse {
	return v.value
}

func (v *NullableSuppressionInfoPageResponse) Set(val *SuppressionInfoPageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuppressionInfoPageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuppressionInfoPageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuppressionInfoPageResponse(val *SuppressionInfoPageResponse) *NullableSuppressionInfoPageResponse {
	return &NullableSuppressionInfoPageResponse{value: val, isSet: true}
}

func (v NullableSuppressionInfoPageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuppressionInfoPageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
