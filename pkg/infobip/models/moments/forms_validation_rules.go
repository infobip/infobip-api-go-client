/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FormsValidationRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormsValidationRules{}

// FormsValidationRules struct for FormsValidationRules
type FormsValidationRules struct {
	DatePattern      *string
	MaxLength        *int32
	MaxValue         *string
	MinValue         *string
	Pattern          *string
	Sample           *string
	ForbiddenSymbols []string
}

// NewFormsValidationRules instantiates a new FormsValidationRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFormsValidationRules() *FormsValidationRules {
	this := FormsValidationRules{}
	return &this
}

// NewFormsValidationRulesWithDefaults instantiates a new FormsValidationRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormsValidationRulesWithDefaults() *FormsValidationRules {
	this := FormsValidationRules{}

	return &this
}

// GetDatePattern returns the DatePattern field value if set, zero value otherwise.
func (o *FormsValidationRules) GetDatePattern() string {
	if o == nil || IsNil(o.DatePattern) {
		var ret string
		return ret
	}
	return *o.DatePattern
}

// GetDatePatternOk returns a tuple with the DatePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetDatePatternOk() (*string, bool) {
	if o == nil || IsNil(o.DatePattern) {
		return nil, false
	}
	return o.DatePattern, true
}

// HasDatePattern returns a boolean if a field has been set.
func (o *FormsValidationRules) HasDatePattern() bool {
	if o != nil && !IsNil(o.DatePattern) {
		return true
	}

	return false
}

// SetDatePattern gets a reference to the given string and assigns it to the DatePattern field.
func (o *FormsValidationRules) SetDatePattern(v string) {
	o.DatePattern = &v
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise.
func (o *FormsValidationRules) GetMaxLength() int32 {
	if o == nil || IsNil(o.MaxLength) {
		var ret int32
		return ret
	}
	return *o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetMaxLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLength) {
		return nil, false
	}
	return o.MaxLength, true
}

// HasMaxLength returns a boolean if a field has been set.
func (o *FormsValidationRules) HasMaxLength() bool {
	if o != nil && !IsNil(o.MaxLength) {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given int32 and assigns it to the MaxLength field.
func (o *FormsValidationRules) SetMaxLength(v int32) {
	o.MaxLength = &v
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *FormsValidationRules) GetMaxValue() string {
	if o == nil || IsNil(o.MaxValue) {
		var ret string
		return ret
	}
	return *o.MaxValue
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetMaxValueOk() (*string, bool) {
	if o == nil || IsNil(o.MaxValue) {
		return nil, false
	}
	return o.MaxValue, true
}

// HasMaxValue returns a boolean if a field has been set.
func (o *FormsValidationRules) HasMaxValue() bool {
	if o != nil && !IsNil(o.MaxValue) {
		return true
	}

	return false
}

// SetMaxValue gets a reference to the given string and assigns it to the MaxValue field.
func (o *FormsValidationRules) SetMaxValue(v string) {
	o.MaxValue = &v
}

// GetMinValue returns the MinValue field value if set, zero value otherwise.
func (o *FormsValidationRules) GetMinValue() string {
	if o == nil || IsNil(o.MinValue) {
		var ret string
		return ret
	}
	return *o.MinValue
}

// GetMinValueOk returns a tuple with the MinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetMinValueOk() (*string, bool) {
	if o == nil || IsNil(o.MinValue) {
		return nil, false
	}
	return o.MinValue, true
}

// HasMinValue returns a boolean if a field has been set.
func (o *FormsValidationRules) HasMinValue() bool {
	if o != nil && !IsNil(o.MinValue) {
		return true
	}

	return false
}

// SetMinValue gets a reference to the given string and assigns it to the MinValue field.
func (o *FormsValidationRules) SetMinValue(v string) {
	o.MinValue = &v
}

// GetPattern returns the Pattern field value if set, zero value otherwise.
func (o *FormsValidationRules) GetPattern() string {
	if o == nil || IsNil(o.Pattern) {
		var ret string
		return ret
	}
	return *o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetPatternOk() (*string, bool) {
	if o == nil || IsNil(o.Pattern) {
		return nil, false
	}
	return o.Pattern, true
}

// HasPattern returns a boolean if a field has been set.
func (o *FormsValidationRules) HasPattern() bool {
	if o != nil && !IsNil(o.Pattern) {
		return true
	}

	return false
}

// SetPattern gets a reference to the given string and assigns it to the Pattern field.
func (o *FormsValidationRules) SetPattern(v string) {
	o.Pattern = &v
}

// GetSample returns the Sample field value if set, zero value otherwise.
func (o *FormsValidationRules) GetSample() string {
	if o == nil || IsNil(o.Sample) {
		var ret string
		return ret
	}
	return *o.Sample
}

// GetSampleOk returns a tuple with the Sample field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetSampleOk() (*string, bool) {
	if o == nil || IsNil(o.Sample) {
		return nil, false
	}
	return o.Sample, true
}

// HasSample returns a boolean if a field has been set.
func (o *FormsValidationRules) HasSample() bool {
	if o != nil && !IsNil(o.Sample) {
		return true
	}

	return false
}

// SetSample gets a reference to the given string and assigns it to the Sample field.
func (o *FormsValidationRules) SetSample(v string) {
	o.Sample = &v
}

// GetForbiddenSymbols returns the ForbiddenSymbols field value if set, zero value otherwise.
func (o *FormsValidationRules) GetForbiddenSymbols() []string {
	if o == nil || IsNil(o.ForbiddenSymbols) {
		var ret []string
		return ret
	}
	return o.ForbiddenSymbols
}

// GetForbiddenSymbolsOk returns a tuple with the ForbiddenSymbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormsValidationRules) GetForbiddenSymbolsOk() ([]string, bool) {
	if o == nil || IsNil(o.ForbiddenSymbols) {
		return nil, false
	}
	return o.ForbiddenSymbols, true
}

// HasForbiddenSymbols returns a boolean if a field has been set.
func (o *FormsValidationRules) HasForbiddenSymbols() bool {
	if o != nil && !IsNil(o.ForbiddenSymbols) {
		return true
	}

	return false
}

// SetForbiddenSymbols gets a reference to the given []string and assigns it to the ForbiddenSymbols field.
func (o *FormsValidationRules) SetForbiddenSymbols(v []string) {
	o.ForbiddenSymbols = v
}

func (o FormsValidationRules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormsValidationRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatePattern) {
		toSerialize["datePattern"] = o.DatePattern
	}
	if !IsNil(o.MaxLength) {
		toSerialize["maxLength"] = o.MaxLength
	}
	if !IsNil(o.MaxValue) {
		toSerialize["maxValue"] = o.MaxValue
	}
	if !IsNil(o.MinValue) {
		toSerialize["minValue"] = o.MinValue
	}
	if !IsNil(o.Pattern) {
		toSerialize["pattern"] = o.Pattern
	}
	if !IsNil(o.Sample) {
		toSerialize["sample"] = o.Sample
	}
	if !IsNil(o.ForbiddenSymbols) {
		toSerialize["forbiddenSymbols"] = o.ForbiddenSymbols
	}
	return toSerialize, nil
}

type NullableFormsValidationRules struct {
	value *FormsValidationRules
	isSet bool
}

func (v NullableFormsValidationRules) Get() *FormsValidationRules {
	return v.value
}

func (v *NullableFormsValidationRules) Set(val *FormsValidationRules) {
	v.value = val
	v.isSet = true
}

func (v NullableFormsValidationRules) IsSet() bool {
	return v.isSet
}

func (v *NullableFormsValidationRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormsValidationRules(val *FormsValidationRules) *NullableFormsValidationRules {
	return &NullableFormsValidationRules{value: val, isSet: true}
}

func (v NullableFormsValidationRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormsValidationRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
