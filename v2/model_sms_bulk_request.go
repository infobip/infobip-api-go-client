/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsBulkRequest struct for SmsBulkRequest
type SmsBulkRequest struct {
	// Date and time when the message is to be sent. Used for scheduled SMS (see [Scheduled SMS endpoints](#channels/sms/get-scheduled-sms-messages) for more details). Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, and can only be scheduled for no later than 180 days in advance.
	SendAt Time `json:"sendAt"`
}

// NewSmsBulkRequest instantiates a new SmsBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsBulkRequest(sendAt Time) *SmsBulkRequest {
	this := SmsBulkRequest{}
	this.SendAt = sendAt
	return &this
}

// NewSmsBulkRequestWithDefaults instantiates a new SmsBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsBulkRequestWithDefaults() *SmsBulkRequest {
	this := SmsBulkRequest{}
	return &this
}

// GetSendAt returns the SendAt field value
func (o *SmsBulkRequest) GetSendAt() Time {
	if o == nil {
		var ret Time
		return ret
	}

	return o.SendAt
}

// GetSendAtOk returns a tuple with the SendAt field value
// and a boolean to check if the value has been set.
func (o *SmsBulkRequest) GetSendAtOk() (*Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SendAt, true
}

// SetSendAt sets field value
func (o *SmsBulkRequest) SetSendAt(v Time) {
	o.SendAt = v
}

func (o SmsBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sendAt"] = o.SendAt
	}
	return json.Marshal(toSerialize)
}

type NullableSmsBulkRequest struct {
	value *SmsBulkRequest
	isSet bool
}

func (v NullableSmsBulkRequest) Get() *SmsBulkRequest {
	return v.value
}

func (v *NullableSmsBulkRequest) Set(val *SmsBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsBulkRequest(val *SmsBulkRequest) *NullableSmsBulkRequest {
	return &NullableSmsBulkRequest{value: val, isSet: true}
}

func (v NullableSmsBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
