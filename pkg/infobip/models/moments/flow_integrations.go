/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowIntegrations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowIntegrations{}

// FlowIntegrations Integrations.
type FlowIntegrations struct {
	Salesforce *FlowSalesforce
}

// NewFlowIntegrations instantiates a new FlowIntegrations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowIntegrations() *FlowIntegrations {
	this := FlowIntegrations{}
	return &this
}

// NewFlowIntegrationsWithDefaults instantiates a new FlowIntegrations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowIntegrationsWithDefaults() *FlowIntegrations {
	this := FlowIntegrations{}

	return &this
}

// GetSalesforce returns the Salesforce field value if set, zero value otherwise.
func (o *FlowIntegrations) GetSalesforce() FlowSalesforce {
	if o == nil || IsNil(o.Salesforce) {
		var ret FlowSalesforce
		return ret
	}
	return *o.Salesforce
}

// GetSalesforceOk returns a tuple with the Salesforce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowIntegrations) GetSalesforceOk() (*FlowSalesforce, bool) {
	if o == nil || IsNil(o.Salesforce) {
		return nil, false
	}
	return o.Salesforce, true
}

// HasSalesforce returns a boolean if a field has been set.
func (o *FlowIntegrations) HasSalesforce() bool {
	if o != nil && !IsNil(o.Salesforce) {
		return true
	}

	return false
}

// SetSalesforce gets a reference to the given FlowSalesforce and assigns it to the Salesforce field.
func (o *FlowIntegrations) SetSalesforce(v FlowSalesforce) {
	o.Salesforce = &v
}

func (o FlowIntegrations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowIntegrations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Salesforce) {
		toSerialize["salesforce"] = o.Salesforce
	}
	return toSerialize, nil
}

type NullableFlowIntegrations struct {
	value *FlowIntegrations
	isSet bool
}

func (v NullableFlowIntegrations) Get() *FlowIntegrations {
	return v.value
}

func (v *NullableFlowIntegrations) Set(val *FlowIntegrations) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowIntegrations) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowIntegrations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowIntegrations(val *FlowIntegrations) *NullableFlowIntegrations {
	return &NullableFlowIntegrations{value: val, isSet: true}
}

func (v NullableFlowIntegrations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowIntegrations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
