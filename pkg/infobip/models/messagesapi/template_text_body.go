/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the TemplateTextBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateTextBody{}

// TemplateTextBody Key value pairs that will be replaced during message sending. Valid example `{\"1\": \"John\", \"2\": \"Smith\", \"type\": \"TEXT\"}`.
type TemplateTextBody struct {
	Type TemplateBodyType
	AdditionalProperties map[string]interface{}
}

type _TemplateTextBody TemplateTextBody

// NewTemplateTextBody instantiates a new TemplateTextBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateTextBody() *TemplateTextBody {
	this := TemplateTextBody{}
	this.Type = TEMPLATEBODYTYPE_TEXT
	return &this
}

// NewTemplateTextBodyWithDefaults instantiates a new TemplateTextBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateTextBodyWithDefaults() *TemplateTextBody {
	this := TemplateTextBody{}
	return &this
}

func (o TemplateTextBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateTextBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	
	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

type NullableTemplateTextBody struct {
	value *TemplateTextBody
	isSet bool
}

func (v NullableTemplateTextBody) Get() *TemplateTextBody {
	return v.value
}

func (v *NullableTemplateTextBody) Set(val *TemplateTextBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateTextBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateTextBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateTextBody(val *TemplateTextBody) *NullableTemplateTextBody {
	return &NullableTemplateTextBody{value: val, isSet: true}
}

func (v NullableTemplateTextBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateTextBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
