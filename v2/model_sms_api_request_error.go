/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsApiRequestError struct for SmsApiRequestError
type SmsApiRequestError struct {
	ServiceException *SmsApiRequestErrorDetails `json:"serviceException,omitempty"`
}

// NewSmsApiRequestError instantiates a new SmsApiRequestError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsApiRequestError() *SmsApiRequestError {
	this := SmsApiRequestError{}
	return &this
}

// NewSmsApiRequestErrorWithDefaults instantiates a new SmsApiRequestError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsApiRequestErrorWithDefaults() *SmsApiRequestError {
	this := SmsApiRequestError{}
	return &this
}

// GetServiceException returns the ServiceException field value if set, zero value otherwise.
func (o *SmsApiRequestError) GetServiceException() SmsApiRequestErrorDetails {
	if o == nil || o.ServiceException == nil {
		var ret SmsApiRequestErrorDetails
		return ret
	}
	return *o.ServiceException
}

// GetServiceExceptionOk returns a tuple with the ServiceException field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsApiRequestError) GetServiceExceptionOk() (*SmsApiRequestErrorDetails, bool) {
	if o == nil || o.ServiceException == nil {
		return nil, false
	}
	return o.ServiceException, true
}

// HasServiceException returns a boolean if a field has been set.
func (o *SmsApiRequestError) HasServiceException() bool {
	if o != nil && o.ServiceException != nil {
		return true
	}

	return false
}

// SetServiceException gets a reference to the given SmsApiRequestErrorDetails and assigns it to the ServiceException field.
func (o *SmsApiRequestError) SetServiceException(v SmsApiRequestErrorDetails) {
	o.ServiceException = &v
}

func (o SmsApiRequestError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceException != nil {
		toSerialize["serviceException"] = o.ServiceException
	}
	return json.Marshal(toSerialize)
}

type NullableSmsApiRequestError struct {
	value *SmsApiRequestError
	isSet bool
}

func (v NullableSmsApiRequestError) Get() *SmsApiRequestError {
	return v.value
}

func (v *NullableSmsApiRequestError) Set(val *SmsApiRequestError) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsApiRequestError) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsApiRequestError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsApiRequestError(val *SmsApiRequestError) *NullableSmsApiRequestError {
	return &NullableSmsApiRequestError{value: val, isSet: true}
}

func (v NullableSmsApiRequestError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsApiRequestError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
