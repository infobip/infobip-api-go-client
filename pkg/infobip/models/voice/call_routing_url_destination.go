/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRoutingUrlDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRoutingUrlDestination{}

// CallRoutingUrlDestination struct for CallRoutingUrlDestination
type CallRoutingUrlDestination struct {
	Priority *int32
	Type     CallRoutingDestinationType
	Weight   *int32
	// URL endpoint which provides next destination to be tried in a route as a response to `POST` HTTP request sent by the Infobip Platform. Returned destination must be of `ENDPOINT_DESTINATION` type.
	Url            string
	SecurityConfig *SecurityConfig
}

type _CallRoutingUrlDestination CallRoutingUrlDestination

// NewCallRoutingUrlDestination instantiates a new CallRoutingUrlDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRoutingUrlDestination(url string) *CallRoutingUrlDestination {
	this := CallRoutingUrlDestination{}
	this.Type = "URL"
	this.Url = url
	return &this
}

// NewCallRoutingUrlDestinationWithDefaults instantiates a new CallRoutingUrlDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRoutingUrlDestinationWithDefaults() *CallRoutingUrlDestination {
	this := CallRoutingUrlDestination{}
	this.Type = "URL"
	return &this
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CallRoutingUrlDestination) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingUrlDestination) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CallRoutingUrlDestination) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *CallRoutingUrlDestination) SetPriority(v int32) {
	o.Priority = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CallRoutingUrlDestination) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingUrlDestination) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CallRoutingUrlDestination) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *CallRoutingUrlDestination) SetWeight(v int32) {
	o.Weight = &v
}

// GetUrl returns the Url field value
func (o *CallRoutingUrlDestination) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CallRoutingUrlDestination) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CallRoutingUrlDestination) SetUrl(v string) {
	o.Url = v
}

// GetSecurityConfig returns the SecurityConfig field value if set, zero value otherwise.
func (o *CallRoutingUrlDestination) GetSecurityConfig() SecurityConfig {
	if o == nil || IsNil(o.SecurityConfig) {
		var ret SecurityConfig
		return ret
	}
	return *o.SecurityConfig
}

// GetSecurityConfigOk returns a tuple with the SecurityConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingUrlDestination) GetSecurityConfigOk() (*SecurityConfig, bool) {
	if o == nil || IsNil(o.SecurityConfig) {
		return nil, false
	}
	return o.SecurityConfig, true
}

// HasSecurityConfig returns a boolean if a field has been set.
func (o *CallRoutingUrlDestination) HasSecurityConfig() bool {
	if o != nil && !IsNil(o.SecurityConfig) {
		return true
	}

	return false
}

// SetSecurityConfig gets a reference to the given SecurityConfig and assigns it to the SecurityConfig field.
func (o *CallRoutingUrlDestination) SetSecurityConfig(v SecurityConfig) {
	o.SecurityConfig = &v
}

func (o CallRoutingUrlDestination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRoutingUrlDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.SecurityConfig) {
		toSerialize["securityConfig"] = o.SecurityConfig
	}
	return toSerialize, nil
}

type NullableCallRoutingUrlDestination struct {
	value *CallRoutingUrlDestination
	isSet bool
}

func (v NullableCallRoutingUrlDestination) Get() *CallRoutingUrlDestination {
	return v.value
}

func (v *NullableCallRoutingUrlDestination) Set(val *CallRoutingUrlDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingUrlDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingUrlDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingUrlDestination(val *CallRoutingUrlDestination) *NullableCallRoutingUrlDestination {
	return &NullableCallRoutingUrlDestination{value: val, isSet: true}
}

func (v NullableCallRoutingUrlDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingUrlDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
