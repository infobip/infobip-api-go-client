/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the TemplateLocationHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateLocationHeader{}

// TemplateLocationHeader struct for TemplateLocationHeader
type TemplateLocationHeader struct {
	Type TemplateHeaderType
	// Latitude of a location.
	Latitude float64
	// Latitude of a location.
	Longitude float64
}

type _TemplateLocationHeader TemplateLocationHeader

// NewTemplateLocationHeader instantiates a new TemplateLocationHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateLocationHeader(latitude float64, longitude float64) *TemplateLocationHeader {
	this := TemplateLocationHeader{}
	this.Type = TEMPLATEHEADERTYPE_LOCATION
	this.Latitude = latitude
	this.Longitude = longitude
	return &this
}

// NewTemplateLocationHeaderWithDefaults instantiates a new TemplateLocationHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateLocationHeaderWithDefaults() *TemplateLocationHeader {
	this := TemplateLocationHeader{}
	return &this
}

// GetLatitude returns the Latitude field value
func (o *TemplateLocationHeader) GetLatitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value
// and a boolean to check if the value has been set.
func (o *TemplateLocationHeader) GetLatitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Latitude, true
}

// SetLatitude sets field value
func (o *TemplateLocationHeader) SetLatitude(v float64) {
	o.Latitude = v
}

// GetLongitude returns the Longitude field value
func (o *TemplateLocationHeader) GetLongitude() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value
// and a boolean to check if the value has been set.
func (o *TemplateLocationHeader) GetLongitudeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Longitude, true
}

// SetLongitude sets field value
func (o *TemplateLocationHeader) SetLongitude(v float64) {
	o.Longitude = v
}

func (o TemplateLocationHeader) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateLocationHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["latitude"] = o.Latitude
	toSerialize["longitude"] = o.Longitude
	return toSerialize, nil
}

type NullableTemplateLocationHeader struct {
	value *TemplateLocationHeader
	isSet bool
}

func (v NullableTemplateLocationHeader) Get() *TemplateLocationHeader {
	return v.value
}

func (v *NullableTemplateLocationHeader) Set(val *TemplateLocationHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateLocationHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateLocationHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateLocationHeader(val *TemplateLocationHeader) *NullableTemplateLocationHeader {
	return &NullableTemplateLocationHeader{value: val, isSet: true}
}

func (v NullableTemplateLocationHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateLocationHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
