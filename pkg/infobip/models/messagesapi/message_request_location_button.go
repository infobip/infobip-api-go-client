/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageRequestLocationButton type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageRequestLocationButton{}

// MessageRequestLocationButton struct for MessageRequestLocationButton
type MessageRequestLocationButton struct {
	Type MessageButtonType
	// Text to be displayed on the button.
	Text *string
	// Custom data that will be sent to you when user reply to a message.
	PostbackData *string
}

type _MessageRequestLocationButton MessageRequestLocationButton

// NewMessageRequestLocationButton instantiates a new MessageRequestLocationButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageRequestLocationButton() *MessageRequestLocationButton {
	this := MessageRequestLocationButton{}
	this.Type = "REQUEST_LOCATION"
	return &this
}

// NewMessageRequestLocationButtonWithDefaults instantiates a new MessageRequestLocationButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageRequestLocationButtonWithDefaults() *MessageRequestLocationButton {
	this := MessageRequestLocationButton{}
	this.Type = "REQUEST_LOCATION"
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MessageRequestLocationButton) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageRequestLocationButton) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MessageRequestLocationButton) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MessageRequestLocationButton) SetText(v string) {
	o.Text = &v
}

// GetPostbackData returns the PostbackData field value if set, zero value otherwise.
func (o *MessageRequestLocationButton) GetPostbackData() string {
	if o == nil || IsNil(o.PostbackData) {
		var ret string
		return ret
	}
	return *o.PostbackData
}

// GetPostbackDataOk returns a tuple with the PostbackData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageRequestLocationButton) GetPostbackDataOk() (*string, bool) {
	if o == nil || IsNil(o.PostbackData) {
		return nil, false
	}
	return o.PostbackData, true
}

// HasPostbackData returns a boolean if a field has been set.
func (o *MessageRequestLocationButton) HasPostbackData() bool {
	if o != nil && !IsNil(o.PostbackData) {
		return true
	}

	return false
}

// SetPostbackData gets a reference to the given string and assigns it to the PostbackData field.
func (o *MessageRequestLocationButton) SetPostbackData(v string) {
	o.PostbackData = &v
}

func (o MessageRequestLocationButton) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageRequestLocationButton) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.PostbackData) {
		toSerialize["postbackData"] = o.PostbackData
	}
	return toSerialize, nil
}

type NullableMessageRequestLocationButton struct {
	value *MessageRequestLocationButton
	isSet bool
}

func (v NullableMessageRequestLocationButton) Get() *MessageRequestLocationButton {
	return v.value
}

func (v *NullableMessageRequestLocationButton) Set(val *MessageRequestLocationButton) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageRequestLocationButton) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageRequestLocationButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageRequestLocationButton(val *MessageRequestLocationButton) *NullableMessageRequestLocationButton {
	return &NullableMessageRequestLocationButton{value: val, isSet: true}
}

func (v NullableMessageRequestLocationButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageRequestLocationButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
