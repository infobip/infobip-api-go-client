/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the NumberMaskingCredentialsBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NumberMaskingCredentialsBody{}

// NumberMaskingCredentialsBody struct for NumberMaskingCredentialsBody
type NumberMaskingCredentialsBody struct {
	// The first part of the generate Authorization header.
	ApiId string
	// Used to generate the second part of the Authorization header.
	Key string
}

type _NumberMaskingCredentialsBody NumberMaskingCredentialsBody

// NewNumberMaskingCredentialsBody instantiates a new NumberMaskingCredentialsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewNumberMaskingCredentialsBody(apiId string, key string) *NumberMaskingCredentialsBody {
	this := NumberMaskingCredentialsBody{}
	this.ApiId = apiId
	this.Key = key
	return &this
}

// NewNumberMaskingCredentialsBodyWithDefaults instantiates a new NumberMaskingCredentialsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNumberMaskingCredentialsBodyWithDefaults() *NumberMaskingCredentialsBody {
	this := NumberMaskingCredentialsBody{}

	return &this
}

// GetApiId returns the ApiId field value
func (o *NumberMaskingCredentialsBody) GetApiId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiId
}

// GetApiIdOk returns a tuple with the ApiId field value
// and a boolean to check if the value has been set.
func (o *NumberMaskingCredentialsBody) GetApiIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiId, true
}

// SetApiId sets field value
func (o *NumberMaskingCredentialsBody) SetApiId(v string) {
	o.ApiId = v
}

// GetKey returns the Key field value
func (o *NumberMaskingCredentialsBody) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *NumberMaskingCredentialsBody) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *NumberMaskingCredentialsBody) SetKey(v string) {
	o.Key = v
}

func (o NumberMaskingCredentialsBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NumberMaskingCredentialsBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiId"] = o.ApiId
	toSerialize["key"] = o.Key
	return toSerialize, nil
}

type NullableNumberMaskingCredentialsBody struct {
	value *NumberMaskingCredentialsBody
	isSet bool
}

func (v NullableNumberMaskingCredentialsBody) Get() *NumberMaskingCredentialsBody {
	return v.value
}

func (v *NullableNumberMaskingCredentialsBody) Set(val *NumberMaskingCredentialsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableNumberMaskingCredentialsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableNumberMaskingCredentialsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNumberMaskingCredentialsBody(val *NumberMaskingCredentialsBody) *NullableNumberMaskingCredentialsBody {
	return &NullableNumberMaskingCredentialsBody{value: val, isSet: true}
}

func (v NullableNumberMaskingCredentialsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNumberMaskingCredentialsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
