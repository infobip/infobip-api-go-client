/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// TfaResendPinRequest struct for TfaResendPinRequest
type TfaResendPinRequest struct {
	// Key value pairs that will be replaced during message sending. Placeholder keys should NOT contain curly brackets and should NOT contain a `pin` placeholder. Valid example: `\"placeholders\":{\"firstName\":\"John\"}`
	Placeholders *map[string]string `json:"placeholders,omitempty"`
}

// NewTfaResendPinRequest instantiates a new TfaResendPinRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTfaResendPinRequest() *TfaResendPinRequest {
	this := TfaResendPinRequest{}
	return &this
}

// NewTfaResendPinRequestWithDefaults instantiates a new TfaResendPinRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTfaResendPinRequestWithDefaults() *TfaResendPinRequest {
	this := TfaResendPinRequest{}
	return &this
}

// GetPlaceholders returns the Placeholders field value if set, zero value otherwise.
func (o *TfaResendPinRequest) GetPlaceholders() map[string]string {
	if o == nil || o.Placeholders == nil {
		var ret map[string]string
		return ret
	}
	return *o.Placeholders
}

// GetPlaceholdersOk returns a tuple with the Placeholders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaResendPinRequest) GetPlaceholdersOk() (*map[string]string, bool) {
	if o == nil || o.Placeholders == nil {
		return nil, false
	}
	return o.Placeholders, true
}

// HasPlaceholders returns a boolean if a field has been set.
func (o *TfaResendPinRequest) HasPlaceholders() bool {
	if o != nil && o.Placeholders != nil {
		return true
	}

	return false
}

// SetPlaceholders gets a reference to the given map[string]string and assigns it to the Placeholders field.
func (o *TfaResendPinRequest) SetPlaceholders(v map[string]string) {
	o.Placeholders = &v
}

func (o TfaResendPinRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Placeholders != nil {
		toSerialize["placeholders"] = o.Placeholders
	}
	return json.Marshal(toSerialize)
}

type NullableTfaResendPinRequest struct {
	value *TfaResendPinRequest
	isSet bool
}

func (v NullableTfaResendPinRequest) Get() *TfaResendPinRequest {
	return v.value
}

func (v *NullableTfaResendPinRequest) Set(val *TfaResendPinRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTfaResendPinRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTfaResendPinRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTfaResendPinRequest(val *TfaResendPinRequest) *NullableTfaResendPinRequest {
	return &NullableTfaResendPinRequest{value: val, isSet: true}
}

func (v NullableTfaResendPinRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTfaResendPinRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
