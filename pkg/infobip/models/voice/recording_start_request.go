/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RecordingStartRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordingStartRequest{}

// RecordingStartRequest struct for RecordingStartRequest
type RecordingStartRequest struct {
	Recording *RecordingRequest
}

// NewRecordingStartRequest instantiates a new RecordingStartRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewRecordingStartRequest() *RecordingStartRequest {
	this := RecordingStartRequest{}
	return &this
}

// NewRecordingStartRequestWithDefaults instantiates a new RecordingStartRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordingStartRequestWithDefaults() *RecordingStartRequest {
	this := RecordingStartRequest{}

	return &this
}

// GetRecording returns the Recording field value if set, zero value otherwise.
func (o *RecordingStartRequest) GetRecording() RecordingRequest {
	if o == nil || IsNil(o.Recording) {
		var ret RecordingRequest
		return ret
	}
	return *o.Recording
}

// GetRecordingOk returns a tuple with the Recording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordingStartRequest) GetRecordingOk() (*RecordingRequest, bool) {
	if o == nil || IsNil(o.Recording) {
		return nil, false
	}
	return o.Recording, true
}

// HasRecording returns a boolean if a field has been set.
func (o *RecordingStartRequest) HasRecording() bool {
	if o != nil && !IsNil(o.Recording) {
		return true
	}

	return false
}

// SetRecording gets a reference to the given RecordingRequest and assigns it to the Recording field.
func (o *RecordingStartRequest) SetRecording(v RecordingRequest) {
	o.Recording = &v
}

func (o RecordingStartRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordingStartRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Recording) {
		toSerialize["recording"] = o.Recording
	}
	return toSerialize, nil
}

type NullableRecordingStartRequest struct {
	value *RecordingStartRequest
	isSet bool
}

func (v NullableRecordingStartRequest) Get() *RecordingStartRequest {
	return v.value
}

func (v *NullableRecordingStartRequest) Set(val *RecordingStartRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordingStartRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordingStartRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordingStartRequest(val *RecordingStartRequest) *NullableRecordingStartRequest {
	return &NullableRecordingStartRequest{value: val, isSet: true}
}

func (v NullableRecordingStartRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordingStartRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
