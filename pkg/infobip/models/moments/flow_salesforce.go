/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowSalesforce type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowSalesforce{}

// FlowSalesforce Salesforce integration.
type FlowSalesforce struct {
	// Salesforce lead id.
	LeadId *string
	// Salesforce contact id.
	ContactId *string
}

// NewFlowSalesforce instantiates a new FlowSalesforce object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowSalesforce() *FlowSalesforce {
	this := FlowSalesforce{}
	return &this
}

// NewFlowSalesforceWithDefaults instantiates a new FlowSalesforce object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowSalesforceWithDefaults() *FlowSalesforce {
	this := FlowSalesforce{}

	return &this
}

// GetLeadId returns the LeadId field value if set, zero value otherwise.
func (o *FlowSalesforce) GetLeadId() string {
	if o == nil || IsNil(o.LeadId) {
		var ret string
		return ret
	}
	return *o.LeadId
}

// GetLeadIdOk returns a tuple with the LeadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowSalesforce) GetLeadIdOk() (*string, bool) {
	if o == nil || IsNil(o.LeadId) {
		return nil, false
	}
	return o.LeadId, true
}

// HasLeadId returns a boolean if a field has been set.
func (o *FlowSalesforce) HasLeadId() bool {
	if o != nil && !IsNil(o.LeadId) {
		return true
	}

	return false
}

// SetLeadId gets a reference to the given string and assigns it to the LeadId field.
func (o *FlowSalesforce) SetLeadId(v string) {
	o.LeadId = &v
}

// GetContactId returns the ContactId field value if set, zero value otherwise.
func (o *FlowSalesforce) GetContactId() string {
	if o == nil || IsNil(o.ContactId) {
		var ret string
		return ret
	}
	return *o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowSalesforce) GetContactIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContactId) {
		return nil, false
	}
	return o.ContactId, true
}

// HasContactId returns a boolean if a field has been set.
func (o *FlowSalesforce) HasContactId() bool {
	if o != nil && !IsNil(o.ContactId) {
		return true
	}

	return false
}

// SetContactId gets a reference to the given string and assigns it to the ContactId field.
func (o *FlowSalesforce) SetContactId(v string) {
	o.ContactId = &v
}

func (o FlowSalesforce) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowSalesforce) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LeadId) {
		toSerialize["leadId"] = o.LeadId
	}
	if !IsNil(o.ContactId) {
		toSerialize["contactId"] = o.ContactId
	}
	return toSerialize, nil
}

type NullableFlowSalesforce struct {
	value *FlowSalesforce
	isSet bool
}

func (v NullableFlowSalesforce) Get() *FlowSalesforce {
	return v.value
}

func (v *NullableFlowSalesforce) Set(val *FlowSalesforce) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowSalesforce) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowSalesforce) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowSalesforce(val *FlowSalesforce) *NullableFlowSalesforce {
	return &NullableFlowSalesforce{value: val, isSet: true}
}

func (v NullableFlowSalesforce) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowSalesforce) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
