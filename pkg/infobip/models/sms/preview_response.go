/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the PreviewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewResponse{}

// PreviewResponse struct for PreviewResponse
type PreviewResponse struct {
	// Message content supplied in the request.
	OriginalText *string
	// Allows for previewing the original message content once additional language configuration has been applied to it.
	Previews []Preview
}

// NewPreviewResponse instantiates a new PreviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewPreviewResponse() *PreviewResponse {
	this := PreviewResponse{}
	return &this
}

// NewPreviewResponseWithDefaults instantiates a new PreviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewResponseWithDefaults() *PreviewResponse {
	this := PreviewResponse{}

	return &this
}

// GetOriginalText returns the OriginalText field value if set, zero value otherwise.
func (o *PreviewResponse) GetOriginalText() string {
	if o == nil || IsNil(o.OriginalText) {
		var ret string
		return ret
	}
	return *o.OriginalText
}

// GetOriginalTextOk returns a tuple with the OriginalText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewResponse) GetOriginalTextOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalText) {
		return nil, false
	}
	return o.OriginalText, true
}

// HasOriginalText returns a boolean if a field has been set.
func (o *PreviewResponse) HasOriginalText() bool {
	if o != nil && !IsNil(o.OriginalText) {
		return true
	}

	return false
}

// SetOriginalText gets a reference to the given string and assigns it to the OriginalText field.
func (o *PreviewResponse) SetOriginalText(v string) {
	o.OriginalText = &v
}

// GetPreviews returns the Previews field value if set, zero value otherwise.
func (o *PreviewResponse) GetPreviews() []Preview {
	if o == nil || IsNil(o.Previews) {
		var ret []Preview
		return ret
	}
	return o.Previews
}

// GetPreviewsOk returns a tuple with the Previews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewResponse) GetPreviewsOk() ([]Preview, bool) {
	if o == nil || IsNil(o.Previews) {
		return nil, false
	}
	return o.Previews, true
}

// HasPreviews returns a boolean if a field has been set.
func (o *PreviewResponse) HasPreviews() bool {
	if o != nil && !IsNil(o.Previews) {
		return true
	}

	return false
}

// SetPreviews gets a reference to the given []Preview and assigns it to the Previews field.
func (o *PreviewResponse) SetPreviews(v []Preview) {
	o.Previews = v
}

func (o PreviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OriginalText) {
		toSerialize["originalText"] = o.OriginalText
	}
	if !IsNil(o.Previews) {
		toSerialize["previews"] = o.Previews
	}
	return toSerialize, nil
}

type NullablePreviewResponse struct {
	value *PreviewResponse
	isSet bool
}

func (v NullablePreviewResponse) Get() *PreviewResponse {
	return v.value
}

func (v *NullablePreviewResponse) Set(val *PreviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewResponse(val *PreviewResponse) *NullablePreviewResponse {
	return &NullablePreviewResponse{value: val, isSet: true}
}

func (v NullablePreviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
