/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRoutingCustomDataEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRoutingCustomDataEntry{}

// CallRoutingCustomDataEntry WebRTC custom data. To meet the criteria, all of the provided custom data pairs must match.
type CallRoutingCustomDataEntry struct {
	// Custom data key. Example: `key1`.
	Key string
	// Custom data value or regular expression pattern representing the value. Examples: `value1`, `value(.+)`.
	Value *string
}

type _CallRoutingCustomDataEntry CallRoutingCustomDataEntry

// NewCallRoutingCustomDataEntry instantiates a new CallRoutingCustomDataEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewCallRoutingCustomDataEntry(key string) *CallRoutingCustomDataEntry {
	this := CallRoutingCustomDataEntry{}
	this.Key = key
	return &this
}

// NewCallRoutingCustomDataEntryWithDefaults instantiates a new CallRoutingCustomDataEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRoutingCustomDataEntryWithDefaults() *CallRoutingCustomDataEntry {
	this := CallRoutingCustomDataEntry{}

	return &this
}

// GetKey returns the Key field value
func (o *CallRoutingCustomDataEntry) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CallRoutingCustomDataEntry) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CallRoutingCustomDataEntry) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CallRoutingCustomDataEntry) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRoutingCustomDataEntry) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CallRoutingCustomDataEntry) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CallRoutingCustomDataEntry) SetValue(v string) {
	o.Value = &v
}

func (o CallRoutingCustomDataEntry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRoutingCustomDataEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCallRoutingCustomDataEntry struct {
	value *CallRoutingCustomDataEntry
	isSet bool
}

func (v NullableCallRoutingCustomDataEntry) Get() *CallRoutingCustomDataEntry {
	return v.value
}

func (v *NullableCallRoutingCustomDataEntry) Set(val *CallRoutingCustomDataEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingCustomDataEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingCustomDataEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingCustomDataEntry(val *CallRoutingCustomDataEntry) *NullableCallRoutingCustomDataEntry {
	return &NullableCallRoutingCustomDataEntry{value: val, isSet: true}
}

func (v NullableCallRoutingCustomDataEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingCustomDataEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
