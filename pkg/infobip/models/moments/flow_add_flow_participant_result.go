/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowAddFlowParticipantResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowAddFlowParticipantResult{}

// FlowAddFlowParticipantResult Result of operation for the given participant.
type FlowAddFlowParticipantResult struct {
	IdentifyBy  FlowPersonUniqueField
	Status      FlowAddFlowParticipantStatus
	ErrorReason *FlowErrorStatusReason
}

type _FlowAddFlowParticipantResult FlowAddFlowParticipantResult

// NewFlowAddFlowParticipantResult instantiates a new FlowAddFlowParticipantResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowAddFlowParticipantResult(identifyBy FlowPersonUniqueField, status FlowAddFlowParticipantStatus) *FlowAddFlowParticipantResult {
	this := FlowAddFlowParticipantResult{}
	this.IdentifyBy = identifyBy
	this.Status = status
	return &this
}

// NewFlowAddFlowParticipantResultWithDefaults instantiates a new FlowAddFlowParticipantResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowAddFlowParticipantResultWithDefaults() *FlowAddFlowParticipantResult {
	this := FlowAddFlowParticipantResult{}

	return &this
}

// GetIdentifyBy returns the IdentifyBy field value
func (o *FlowAddFlowParticipantResult) GetIdentifyBy() FlowPersonUniqueField {
	if o == nil {
		var ret FlowPersonUniqueField
		return ret
	}

	return o.IdentifyBy
}

// GetIdentifyByOk returns a tuple with the IdentifyBy field value
// and a boolean to check if the value has been set.
func (o *FlowAddFlowParticipantResult) GetIdentifyByOk() (*FlowPersonUniqueField, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentifyBy, true
}

// SetIdentifyBy sets field value
func (o *FlowAddFlowParticipantResult) SetIdentifyBy(v FlowPersonUniqueField) {
	o.IdentifyBy = v
}

// GetStatus returns the Status field value
func (o *FlowAddFlowParticipantResult) GetStatus() FlowAddFlowParticipantStatus {
	if o == nil {
		var ret FlowAddFlowParticipantStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FlowAddFlowParticipantResult) GetStatusOk() (*FlowAddFlowParticipantStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FlowAddFlowParticipantResult) SetStatus(v FlowAddFlowParticipantStatus) {
	o.Status = v
}

// GetErrorReason returns the ErrorReason field value if set, zero value otherwise.
func (o *FlowAddFlowParticipantResult) GetErrorReason() FlowErrorStatusReason {
	if o == nil || IsNil(o.ErrorReason) {
		var ret FlowErrorStatusReason
		return ret
	}
	return *o.ErrorReason
}

// GetErrorReasonOk returns a tuple with the ErrorReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowAddFlowParticipantResult) GetErrorReasonOk() (*FlowErrorStatusReason, bool) {
	if o == nil || IsNil(o.ErrorReason) {
		return nil, false
	}
	return o.ErrorReason, true
}

// HasErrorReason returns a boolean if a field has been set.
func (o *FlowAddFlowParticipantResult) HasErrorReason() bool {
	if o != nil && !IsNil(o.ErrorReason) {
		return true
	}

	return false
}

// SetErrorReason gets a reference to the given FlowErrorStatusReason and assigns it to the ErrorReason field.
func (o *FlowAddFlowParticipantResult) SetErrorReason(v FlowErrorStatusReason) {
	o.ErrorReason = &v
}

func (o FlowAddFlowParticipantResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowAddFlowParticipantResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifyBy"] = o.IdentifyBy
	toSerialize["status"] = o.Status
	if !IsNil(o.ErrorReason) {
		toSerialize["errorReason"] = o.ErrorReason
	}
	return toSerialize, nil
}

type NullableFlowAddFlowParticipantResult struct {
	value *FlowAddFlowParticipantResult
	isSet bool
}

func (v NullableFlowAddFlowParticipantResult) Get() *FlowAddFlowParticipantResult {
	return v.value
}

func (v *NullableFlowAddFlowParticipantResult) Set(val *FlowAddFlowParticipantResult) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowAddFlowParticipantResult) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowAddFlowParticipantResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowAddFlowParticipantResult(val *FlowAddFlowParticipantResult) *NullableFlowAddFlowParticipantResult {
	return &NullableFlowAddFlowParticipantResult{value: val, isSet: true}
}

func (v NullableFlowAddFlowParticipantResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowAddFlowParticipantResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
