/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ChannelsDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelsDestination{}

// ChannelsDestination Represents a destination which can be specified by a `channel`. It is required for a message failover.
type ChannelsDestination struct {
	// Array of substitute destinations distinguished by a `channel` they belong to. Only one substitute destination per `channel` is permitted.
	ByChannel []ChannelDestination
}

type _ChannelsDestination ChannelsDestination

// NewChannelsDestination instantiates a new ChannelsDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelsDestination(byChannel []ChannelDestination) *ChannelsDestination {
	this := ChannelsDestination{}
	this.ByChannel = byChannel
	return &this
}

// NewChannelsDestinationWithDefaults instantiates a new ChannelsDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelsDestinationWithDefaults() *ChannelsDestination {
	this := ChannelsDestination{}
	return &this
}

// GetByChannel returns the ByChannel field value
func (o *ChannelsDestination) GetByChannel() []ChannelDestination {
	if o == nil {
		var ret []ChannelDestination
		return ret
	}

	return o.ByChannel
}

// GetByChannelOk returns a tuple with the ByChannel field value
// and a boolean to check if the value has been set.
func (o *ChannelsDestination) GetByChannelOk() ([]ChannelDestination, bool) {
	if o == nil {
		return nil, false
	}
	return o.ByChannel, true
}

// SetByChannel sets field value
func (o *ChannelsDestination) SetByChannel(v []ChannelDestination) {
	o.ByChannel = v
}

func (o ChannelsDestination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelsDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["byChannel"] = o.ByChannel
	return toSerialize, nil
}

type NullableChannelsDestination struct {
	value *ChannelsDestination
	isSet bool
}

func (v NullableChannelsDestination) Get() *ChannelsDestination {
	return v.value
}

func (v *NullableChannelsDestination) Set(val *ChannelsDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelsDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelsDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelsDestination(val *ChannelsDestination) *NullableChannelsDestination {
	return &NullableChannelsDestination{value: val, isSet: true}
}

func (v NullableChannelsDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelsDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
