/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SouthKoreaOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SouthKoreaOptions{}

// SouthKoreaOptions Use case dependent parameters for sending SMS to phone numbers registered in South Korea.
type SouthKoreaOptions struct {
	// Reseller identification code: 9-digit registration number in the business registration certificate for South Korea. Resellers should submit this when sending.
	ResellerCode *int32
}

// NewSouthKoreaOptions instantiates a new SouthKoreaOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSouthKoreaOptions() *SouthKoreaOptions {
	this := SouthKoreaOptions{}
	return &this
}

// NewSouthKoreaOptionsWithDefaults instantiates a new SouthKoreaOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSouthKoreaOptionsWithDefaults() *SouthKoreaOptions {
	this := SouthKoreaOptions{}
	return &this
}

// GetResellerCode returns the ResellerCode field value if set, zero value otherwise.
func (o *SouthKoreaOptions) GetResellerCode() int32 {
	if o == nil || IsNil(o.ResellerCode) {
		var ret int32
		return ret
	}
	return *o.ResellerCode
}

// GetResellerCodeOk returns a tuple with the ResellerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SouthKoreaOptions) GetResellerCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ResellerCode) {
		return nil, false
	}
	return o.ResellerCode, true
}

// HasResellerCode returns a boolean if a field has been set.
func (o *SouthKoreaOptions) HasResellerCode() bool {
	if o != nil && !IsNil(o.ResellerCode) {
		return true
	}

	return false
}

// SetResellerCode gets a reference to the given int32 and assigns it to the ResellerCode field.
func (o *SouthKoreaOptions) SetResellerCode(v int32) {
	o.ResellerCode = &v
}

func (o SouthKoreaOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SouthKoreaOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResellerCode) {
		toSerialize["resellerCode"] = o.ResellerCode
	}
	return toSerialize, nil
}

type NullableSouthKoreaOptions struct {
	value *SouthKoreaOptions
	isSet bool
}

func (v NullableSouthKoreaOptions) Get() *SouthKoreaOptions {
	return v.value
}

func (v *NullableSouthKoreaOptions) Set(val *SouthKoreaOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableSouthKoreaOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableSouthKoreaOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSouthKoreaOptions(val *SouthKoreaOptions) *NullableSouthKoreaOptions {
	return &NullableSouthKoreaOptions{value: val, isSet: true}
}

func (v NullableSouthKoreaOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSouthKoreaOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
