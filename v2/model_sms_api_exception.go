/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsApiException struct for SmsApiException
type SmsApiException struct {
	RequestError *SmsApiRequestError `json:"requestError,omitempty"`
}

// NewSmsApiException instantiates a new SmsApiException object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsApiException() *SmsApiException {
	this := SmsApiException{}
	return &this
}

// NewSmsApiExceptionWithDefaults instantiates a new SmsApiException object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsApiExceptionWithDefaults() *SmsApiException {
	this := SmsApiException{}
	return &this
}

// GetRequestError returns the RequestError field value if set, zero value otherwise.
func (o *SmsApiException) GetRequestError() SmsApiRequestError {
	if o == nil || o.RequestError == nil {
		var ret SmsApiRequestError
		return ret
	}
	return *o.RequestError
}

// GetRequestErrorOk returns a tuple with the RequestError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsApiException) GetRequestErrorOk() (*SmsApiRequestError, bool) {
	if o == nil || o.RequestError == nil {
		return nil, false
	}
	return o.RequestError, true
}

// HasRequestError returns a boolean if a field has been set.
func (o *SmsApiException) HasRequestError() bool {
	if o != nil && o.RequestError != nil {
		return true
	}

	return false
}

// SetRequestError gets a reference to the given SmsApiRequestError and assigns it to the RequestError field.
func (o *SmsApiException) SetRequestError(v SmsApiRequestError) {
	o.RequestError = &v
}

func (o SmsApiException) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestError != nil {
		toSerialize["requestError"] = o.RequestError
	}
	return json.Marshal(toSerialize)
}

type NullableSmsApiException struct {
	value *SmsApiException
	isSet bool
}

func (v NullableSmsApiException) Get() *SmsApiException {
	return v.value
}

func (v *NullableSmsApiException) Set(val *SmsApiException) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsApiException) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsApiException) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsApiException(val *SmsApiException) *NullableSmsApiException {
	return &NullableSmsApiException{value: val, isSet: true}
}

func (v NullableSmsApiException) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsApiException) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
