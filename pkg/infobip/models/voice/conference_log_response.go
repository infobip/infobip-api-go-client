/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ConferenceLogResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConferenceLogResponse{}

// ConferenceLogResponse struct for ConferenceLogResponse
type ConferenceLogResponse struct {
	// Unique conference ID.
	ConferenceId *string
	// Conference name, requested or autogenerated on creation.
	Name     *string
	Platform *Platform
	// Date and time for when the conference has been created.
	StartTime *Time
	// Date and time for when the conference ended.
	EndTime *Time
	// Conference duration in seconds.
	Duration *int64
	// List of participant sessions.
	Sessions  []ParticipantSession
	Recording *ConferenceRecordingLog
	ErrorCode *ErrorCodeInfo
}

// NewConferenceLogResponse instantiates a new ConferenceLogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewConferenceLogResponse() *ConferenceLogResponse {
	this := ConferenceLogResponse{}
	return &this
}

// NewConferenceLogResponseWithDefaults instantiates a new ConferenceLogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConferenceLogResponseWithDefaults() *ConferenceLogResponse {
	this := ConferenceLogResponse{}

	return &this
}

// GetConferenceId returns the ConferenceId field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetConferenceId() string {
	if o == nil || IsNil(o.ConferenceId) {
		var ret string
		return ret
	}
	return *o.ConferenceId
}

// GetConferenceIdOk returns a tuple with the ConferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetConferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceId) {
		return nil, false
	}
	return o.ConferenceId, true
}

// HasConferenceId returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasConferenceId() bool {
	if o != nil && !IsNil(o.ConferenceId) {
		return true
	}

	return false
}

// SetConferenceId gets a reference to the given string and assigns it to the ConferenceId field.
func (o *ConferenceLogResponse) SetConferenceId(v string) {
	o.ConferenceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConferenceLogResponse) SetName(v string) {
	o.Name = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetPlatform() Platform {
	if o == nil || IsNil(o.Platform) {
		var ret Platform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetPlatformOk() (*Platform, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given Platform and assigns it to the Platform field.
func (o *ConferenceLogResponse) SetPlatform(v Platform) {
	o.Platform = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetStartTime() Time {
	if o == nil || IsNil(o.StartTime) {
		var ret Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetStartTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given Time and assigns it to the StartTime field.
func (o *ConferenceLogResponse) SetStartTime(v Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetEndTime() Time {
	if o == nil || IsNil(o.EndTime) {
		var ret Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetEndTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given Time and assigns it to the EndTime field.
func (o *ConferenceLogResponse) SetEndTime(v Time) {
	o.EndTime = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *ConferenceLogResponse) SetDuration(v int64) {
	o.Duration = &v
}

// GetSessions returns the Sessions field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetSessions() []ParticipantSession {
	if o == nil || IsNil(o.Sessions) {
		var ret []ParticipantSession
		return ret
	}
	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetSessionsOk() ([]ParticipantSession, bool) {
	if o == nil || IsNil(o.Sessions) {
		return nil, false
	}
	return o.Sessions, true
}

// HasSessions returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasSessions() bool {
	if o != nil && !IsNil(o.Sessions) {
		return true
	}

	return false
}

// SetSessions gets a reference to the given []ParticipantSession and assigns it to the Sessions field.
func (o *ConferenceLogResponse) SetSessions(v []ParticipantSession) {
	o.Sessions = v
}

// GetRecording returns the Recording field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetRecording() ConferenceRecordingLog {
	if o == nil || IsNil(o.Recording) {
		var ret ConferenceRecordingLog
		return ret
	}
	return *o.Recording
}

// GetRecordingOk returns a tuple with the Recording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetRecordingOk() (*ConferenceRecordingLog, bool) {
	if o == nil || IsNil(o.Recording) {
		return nil, false
	}
	return o.Recording, true
}

// HasRecording returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasRecording() bool {
	if o != nil && !IsNil(o.Recording) {
		return true
	}

	return false
}

// SetRecording gets a reference to the given ConferenceRecordingLog and assigns it to the Recording field.
func (o *ConferenceLogResponse) SetRecording(v ConferenceRecordingLog) {
	o.Recording = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *ConferenceLogResponse) GetErrorCode() ErrorCodeInfo {
	if o == nil || IsNil(o.ErrorCode) {
		var ret ErrorCodeInfo
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceLogResponse) GetErrorCodeOk() (*ErrorCodeInfo, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ConferenceLogResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given ErrorCodeInfo and assigns it to the ErrorCode field.
func (o *ConferenceLogResponse) SetErrorCode(v ErrorCodeInfo) {
	o.ErrorCode = &v
}

func (o ConferenceLogResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConferenceLogResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConferenceId) {
		toSerialize["conferenceId"] = o.ConferenceId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Sessions) {
		toSerialize["sessions"] = o.Sessions
	}
	if !IsNil(o.Recording) {
		toSerialize["recording"] = o.Recording
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	return toSerialize, nil
}

type NullableConferenceLogResponse struct {
	value *ConferenceLogResponse
	isSet bool
}

func (v NullableConferenceLogResponse) Get() *ConferenceLogResponse {
	return v.value
}

func (v *NullableConferenceLogResponse) Set(val *ConferenceLogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConferenceLogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConferenceLogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConferenceLogResponse(val *ConferenceLogResponse) *NullableConferenceLogResponse {
	return &NullableConferenceLogResponse{value: val, isSet: true}
}

func (v NullableConferenceLogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConferenceLogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
