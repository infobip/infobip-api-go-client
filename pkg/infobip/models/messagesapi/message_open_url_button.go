/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageOpenUrlButton type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageOpenUrlButton{}

// MessageOpenUrlButton struct for MessageOpenUrlButton
type MessageOpenUrlButton struct {
	Type MessageButtonType
	// Text to be displayed on the button.
	Text string
	// URL to be opened when clicked on the button.
	Url string
}

type _MessageOpenUrlButton MessageOpenUrlButton

// NewMessageOpenUrlButton instantiates a new MessageOpenUrlButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageOpenUrlButton(text string, url string) *MessageOpenUrlButton {
	this := MessageOpenUrlButton{}
	this.Type = MESSAGEBUTTONTYPE_OPEN_URL
	this.Text = text
	this.Url = url
	return &this
}

// NewMessageOpenUrlButtonWithDefaults instantiates a new MessageOpenUrlButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageOpenUrlButtonWithDefaults() *MessageOpenUrlButton {
	this := MessageOpenUrlButton{}
	return &this
}

// GetText returns the Text field value
func (o *MessageOpenUrlButton) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MessageOpenUrlButton) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MessageOpenUrlButton) SetText(v string) {
	o.Text = v
}

// GetUrl returns the Url field value
func (o *MessageOpenUrlButton) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MessageOpenUrlButton) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MessageOpenUrlButton) SetUrl(v string) {
	o.Url = v
}

func (o MessageOpenUrlButton) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageOpenUrlButton) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["text"] = o.Text
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableMessageOpenUrlButton struct {
	value *MessageOpenUrlButton
	isSet bool
}

func (v NullableMessageOpenUrlButton) Get() *MessageOpenUrlButton {
	return v.value
}

func (v *NullableMessageOpenUrlButton) Set(val *MessageOpenUrlButton) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageOpenUrlButton) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageOpenUrlButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageOpenUrlButton(val *MessageOpenUrlButton) *NullableMessageOpenUrlButton {
	return &NullableMessageOpenUrlButton{value: val, isSet: true}
}

func (v NullableMessageOpenUrlButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageOpenUrlButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
