/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ApplicationTransferRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationTransferRequest{}

// ApplicationTransferRequest struct for ApplicationTransferRequest
type ApplicationTransferRequest struct {
	// ID of the calls configuration to which the call is to be transferred.
	DestinationCallsConfigurationId string
	Platform                        *Platform
	// Time to wait, in seconds, for the receiving application to accept the transfer.
	Timeout *int32
	// Optional parameter to update a call's custom data.
	CustomData *map[string]string
}

type _ApplicationTransferRequest ApplicationTransferRequest

// NewApplicationTransferRequest instantiates a new ApplicationTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewApplicationTransferRequest(destinationCallsConfigurationId string) *ApplicationTransferRequest {
	this := ApplicationTransferRequest{}
	this.DestinationCallsConfigurationId = destinationCallsConfigurationId
	var timeout int32 = 30
	this.Timeout = &timeout
	return &this
}

// NewApplicationTransferRequestWithDefaults instantiates a new ApplicationTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationTransferRequestWithDefaults() *ApplicationTransferRequest {
	this := ApplicationTransferRequest{}

	var timeout int32 = 30
	this.Timeout = &timeout
	return &this
}

// GetDestinationCallsConfigurationId returns the DestinationCallsConfigurationId field value
func (o *ApplicationTransferRequest) GetDestinationCallsConfigurationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationCallsConfigurationId
}

// GetDestinationCallsConfigurationIdOk returns a tuple with the DestinationCallsConfigurationId field value
// and a boolean to check if the value has been set.
func (o *ApplicationTransferRequest) GetDestinationCallsConfigurationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationCallsConfigurationId, true
}

// SetDestinationCallsConfigurationId sets field value
func (o *ApplicationTransferRequest) SetDestinationCallsConfigurationId(v string) {
	o.DestinationCallsConfigurationId = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ApplicationTransferRequest) GetPlatform() Platform {
	if o == nil || IsNil(o.Platform) {
		var ret Platform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransferRequest) GetPlatformOk() (*Platform, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ApplicationTransferRequest) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given Platform and assigns it to the Platform field.
func (o *ApplicationTransferRequest) SetPlatform(v Platform) {
	o.Platform = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ApplicationTransferRequest) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransferRequest) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ApplicationTransferRequest) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *ApplicationTransferRequest) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *ApplicationTransferRequest) GetCustomData() map[string]string {
	if o == nil || IsNil(o.CustomData) {
		var ret map[string]string
		return ret
	}
	return *o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransferRequest) GetCustomDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomData) {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *ApplicationTransferRequest) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]string and assigns it to the CustomData field.
func (o *ApplicationTransferRequest) SetCustomData(v map[string]string) {
	o.CustomData = &v
}

func (o ApplicationTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationTransferRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destinationCallsConfigurationId"] = o.DestinationCallsConfigurationId
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	return toSerialize, nil
}

type NullableApplicationTransferRequest struct {
	value *ApplicationTransferRequest
	isSet bool
}

func (v NullableApplicationTransferRequest) Get() *ApplicationTransferRequest {
	return v.value
}

func (v *NullableApplicationTransferRequest) Set(val *ApplicationTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationTransferRequest(val *ApplicationTransferRequest) *NullableApplicationTransferRequest {
	return &NullableApplicationTransferRequest{value: val, isSet: true}
}

func (v NullableApplicationTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
