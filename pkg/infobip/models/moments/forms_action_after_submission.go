/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FormsActionAfterSubmission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormsActionAfterSubmission{}

// FormsActionAfterSubmission Action after the submission
type FormsActionAfterSubmission struct {
	Type  FormsActionAfterSubmissionType
	Value string
}

type _FormsActionAfterSubmission FormsActionAfterSubmission

// NewFormsActionAfterSubmission instantiates a new FormsActionAfterSubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFormsActionAfterSubmission(type_ FormsActionAfterSubmissionType, value string) *FormsActionAfterSubmission {
	this := FormsActionAfterSubmission{}
	this.Type = type_
	this.Value = value
	return &this
}

// NewFormsActionAfterSubmissionWithDefaults instantiates a new FormsActionAfterSubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormsActionAfterSubmissionWithDefaults() *FormsActionAfterSubmission {
	this := FormsActionAfterSubmission{}

	return &this
}

// GetType returns the Type field value
func (o *FormsActionAfterSubmission) GetType() FormsActionAfterSubmissionType {
	if o == nil {
		var ret FormsActionAfterSubmissionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FormsActionAfterSubmission) GetTypeOk() (*FormsActionAfterSubmissionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FormsActionAfterSubmission) SetType(v FormsActionAfterSubmissionType) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *FormsActionAfterSubmission) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FormsActionAfterSubmission) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FormsActionAfterSubmission) SetValue(v string) {
	o.Value = v
}

func (o FormsActionAfterSubmission) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormsActionAfterSubmission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableFormsActionAfterSubmission struct {
	value *FormsActionAfterSubmission
	isSet bool
}

func (v NullableFormsActionAfterSubmission) Get() *FormsActionAfterSubmission {
	return v.value
}

func (v *NullableFormsActionAfterSubmission) Set(val *FormsActionAfterSubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableFormsActionAfterSubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableFormsActionAfterSubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormsActionAfterSubmission(val *FormsActionAfterSubmission) *NullableFormsActionAfterSubmission {
	return &NullableFormsActionAfterSubmission{value: val, isSet: true}
}

func (v NullableFormsActionAfterSubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormsActionAfterSubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
