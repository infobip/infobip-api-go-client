/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RepeatUntil type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepeatUntil{}

// RepeatUntil This action is deprecated and should not be used, as it leads to incorrect behaviour and it will not be supported in the future. Please, use repeat-while loop instead.
type RepeatUntil struct {
	// Array of IVR actions defining scenario. NOTE: Answering Machine Detection, Call Recording and Speech Recognition (used for Capture action) are add-on features. To enable these add-ons, please contact our [sales](https://www.infobip.com/contact) organisation.
	Repeat []ScriptInner
	// The expression to evaluate.
	Until string
}

type _RepeatUntil RepeatUntil

// NewRepeatUntil instantiates a new RepeatUntil object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewRepeatUntil(repeat []ScriptInner, until string) *RepeatUntil {
	this := RepeatUntil{}
	this.Repeat = repeat
	this.Until = until
	return &this
}

// NewRepeatUntilWithDefaults instantiates a new RepeatUntil object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepeatUntilWithDefaults() *RepeatUntil {
	this := RepeatUntil{}

	return &this
}

// GetRepeat returns the Repeat field value
func (o *RepeatUntil) GetRepeat() []ScriptInner {
	if o == nil {
		var ret []ScriptInner
		return ret
	}

	return o.Repeat
}

// GetRepeatOk returns a tuple with the Repeat field value
// and a boolean to check if the value has been set.
func (o *RepeatUntil) GetRepeatOk() ([]ScriptInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Repeat, true
}

// SetRepeat sets field value
func (o *RepeatUntil) SetRepeat(v []ScriptInner) {
	o.Repeat = v
}

// GetUntil returns the Until field value
func (o *RepeatUntil) GetUntil() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Until
}

// GetUntilOk returns a tuple with the Until field value
// and a boolean to check if the value has been set.
func (o *RepeatUntil) GetUntilOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Until, true
}

// SetUntil sets field value
func (o *RepeatUntil) SetUntil(v string) {
	o.Until = v
}

func (o RepeatUntil) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepeatUntil) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repeat"] = o.Repeat
	toSerialize["until"] = o.Until
	return toSerialize, nil
}

type NullableRepeatUntil struct {
	value *RepeatUntil
	isSet bool
}

func (v NullableRepeatUntil) Get() *RepeatUntil {
	return v.value
}

func (v *NullableRepeatUntil) Set(val *RepeatUntil) {
	v.value = val
	v.isSet = true
}

func (v NullableRepeatUntil) IsSet() bool {
	return v.isSet
}

func (v *NullableRepeatUntil) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepeatUntil(val *RepeatUntil) *NullableRepeatUntil {
	return &NullableRepeatUntil{value: val, isSet: true}
}

func (v NullableRepeatUntil) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepeatUntil) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
