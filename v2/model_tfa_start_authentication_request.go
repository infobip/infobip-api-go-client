/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// TfaStartAuthenticationRequest struct for TfaStartAuthenticationRequest
type TfaStartAuthenticationRequest struct {
	// The ID of the application that represents your service, e.g. 2FA for login, 2FA for changing the password, etc.
	ApplicationId string `json:"applicationId"`
	// Use this parameter if you wish to override the sender ID from the [created](#channels/sms/create-2fa-message-template) message template parameter `senderId`.
	From *string `json:"from,omitempty"`
	// The ID of the message template (message body with the PIN placeholder) that is sent to the recipient.
	MessageId string `json:"messageId"`
	// Key value pairs that will be replaced during message sending. Placeholder keys should NOT contain curly brackets and should NOT contain a `pin` placeholder. Valid example: `\"placeholders\":{\"firstName\":\"John\"}`
	Placeholders *map[string]string `json:"placeholders,omitempty"`
	// Phone number to which the 2FA message will be sent. Example: 41793026727.
	To string `json:"to"`
}

// NewTfaStartAuthenticationRequest instantiates a new TfaStartAuthenticationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTfaStartAuthenticationRequest(applicationId string, messageId string, to string) *TfaStartAuthenticationRequest {
	this := TfaStartAuthenticationRequest{}
	this.ApplicationId = applicationId
	this.MessageId = messageId
	this.To = to
	return &this
}

// NewTfaStartAuthenticationRequestWithDefaults instantiates a new TfaStartAuthenticationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTfaStartAuthenticationRequestWithDefaults() *TfaStartAuthenticationRequest {
	this := TfaStartAuthenticationRequest{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *TfaStartAuthenticationRequest) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *TfaStartAuthenticationRequest) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *TfaStartAuthenticationRequest) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *TfaStartAuthenticationRequest) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaStartAuthenticationRequest) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *TfaStartAuthenticationRequest) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *TfaStartAuthenticationRequest) SetFrom(v string) {
	o.From = &v
}

// GetMessageId returns the MessageId field value
func (o *TfaStartAuthenticationRequest) GetMessageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value
// and a boolean to check if the value has been set.
func (o *TfaStartAuthenticationRequest) GetMessageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageId, true
}

// SetMessageId sets field value
func (o *TfaStartAuthenticationRequest) SetMessageId(v string) {
	o.MessageId = v
}

// GetPlaceholders returns the Placeholders field value if set, zero value otherwise.
func (o *TfaStartAuthenticationRequest) GetPlaceholders() map[string]string {
	if o == nil || o.Placeholders == nil {
		var ret map[string]string
		return ret
	}
	return *o.Placeholders
}

// GetPlaceholdersOk returns a tuple with the Placeholders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TfaStartAuthenticationRequest) GetPlaceholdersOk() (*map[string]string, bool) {
	if o == nil || o.Placeholders == nil {
		return nil, false
	}
	return o.Placeholders, true
}

// HasPlaceholders returns a boolean if a field has been set.
func (o *TfaStartAuthenticationRequest) HasPlaceholders() bool {
	if o != nil && o.Placeholders != nil {
		return true
	}

	return false
}

// SetPlaceholders gets a reference to the given map[string]string and assigns it to the Placeholders field.
func (o *TfaStartAuthenticationRequest) SetPlaceholders(v map[string]string) {
	o.Placeholders = &v
}

// GetTo returns the To field value
func (o *TfaStartAuthenticationRequest) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *TfaStartAuthenticationRequest) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *TfaStartAuthenticationRequest) SetTo(v string) {
	o.To = v
}

func (o TfaStartAuthenticationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["messageId"] = o.MessageId
	}
	if o.Placeholders != nil {
		toSerialize["placeholders"] = o.Placeholders
	}
	if true {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableTfaStartAuthenticationRequest struct {
	value *TfaStartAuthenticationRequest
	isSet bool
}

func (v NullableTfaStartAuthenticationRequest) Get() *TfaStartAuthenticationRequest {
	return v.value
}

func (v *NullableTfaStartAuthenticationRequest) Set(val *TfaStartAuthenticationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTfaStartAuthenticationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTfaStartAuthenticationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTfaStartAuthenticationRequest(val *TfaStartAuthenticationRequest) *NullableTfaStartAuthenticationRequest {
	return &NullableTfaStartAuthenticationRequest{value: val, isSet: true}
}

func (v NullableTfaStartAuthenticationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTfaStartAuthenticationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
