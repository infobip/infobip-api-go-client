/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ConnectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectRequest{}

// ConnectRequest struct for ConnectRequest
type ConnectRequest struct {
	// IDs of the calls to connect.
	CallIds           []string
	ConferenceRequest *ActionConferenceRequest
}

type _ConnectRequest ConnectRequest

// NewConnectRequest instantiates a new ConnectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewConnectRequest(callIds []string) *ConnectRequest {
	this := ConnectRequest{}
	this.CallIds = callIds
	return &this
}

// NewConnectRequestWithDefaults instantiates a new ConnectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectRequestWithDefaults() *ConnectRequest {
	this := ConnectRequest{}

	return &this
}

// GetCallIds returns the CallIds field value
func (o *ConnectRequest) GetCallIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CallIds
}

// GetCallIdsOk returns a tuple with the CallIds field value
// and a boolean to check if the value has been set.
func (o *ConnectRequest) GetCallIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallIds, true
}

// SetCallIds sets field value
func (o *ConnectRequest) SetCallIds(v []string) {
	o.CallIds = v
}

// GetConferenceRequest returns the ConferenceRequest field value if set, zero value otherwise.
func (o *ConnectRequest) GetConferenceRequest() ActionConferenceRequest {
	if o == nil || IsNil(o.ConferenceRequest) {
		var ret ActionConferenceRequest
		return ret
	}
	return *o.ConferenceRequest
}

// GetConferenceRequestOk returns a tuple with the ConferenceRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectRequest) GetConferenceRequestOk() (*ActionConferenceRequest, bool) {
	if o == nil || IsNil(o.ConferenceRequest) {
		return nil, false
	}
	return o.ConferenceRequest, true
}

// HasConferenceRequest returns a boolean if a field has been set.
func (o *ConnectRequest) HasConferenceRequest() bool {
	if o != nil && !IsNil(o.ConferenceRequest) {
		return true
	}

	return false
}

// SetConferenceRequest gets a reference to the given ActionConferenceRequest and assigns it to the ConferenceRequest field.
func (o *ConnectRequest) SetConferenceRequest(v ActionConferenceRequest) {
	o.ConferenceRequest = &v
}

func (o ConnectRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["callIds"] = o.CallIds
	if !IsNil(o.ConferenceRequest) {
		toSerialize["conferenceRequest"] = o.ConferenceRequest
	}
	return toSerialize, nil
}

type NullableConnectRequest struct {
	value *ConnectRequest
	isSet bool
}

func (v NullableConnectRequest) Get() *ConnectRequest {
	return v.value
}

func (v *NullableConnectRequest) Set(val *ConnectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectRequest(val *ConnectRequest) *NullableConnectRequest {
	return &NullableConnectRequest{value: val, isSet: true}
}

func (v NullableConnectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
