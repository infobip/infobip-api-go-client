/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// CallRoutingUrlDestinationResponse struct for CallRoutingUrlDestinationResponse
type CallRoutingUrlDestinationResponse struct {
	CallRoutingEndpointDestinationResponse *CallRoutingEndpointDestinationResponse
}

// CallRoutingEndpointDestinationResponseAsCallRoutingUrlDestinationResponse is a convenience function that returns CallRoutingEndpointDestinationResponse wrapped in CallRoutingUrlDestinationResponse
func CallRoutingEndpointDestinationResponseAsCallRoutingUrlDestinationResponse(v *CallRoutingEndpointDestinationResponse) CallRoutingUrlDestinationResponse {
	return CallRoutingUrlDestinationResponse{
		CallRoutingEndpointDestinationResponse: v,
	}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CallRoutingUrlDestinationResponse) UnmarshalJSON(data []byte) error {
	// use discriminator value to speed up the lookup
	var jsonDict map[string]interface{}
	err := json.Unmarshal(data, &jsonDict)
	if err != nil {
		return fmt.Errorf("Failed to unmarshal JSON into map for the discrimintor lookup.")
	}

	// check if the discriminator value is 'ENDPOINT'
	if jsonDict["type"] == "ENDPOINT" {
		// try to unmarshal JSON data into CallRoutingEndpointDestinationResponse
		err = json.Unmarshal(data, &dst.CallRoutingEndpointDestinationResponse)
		if err == nil {
			jsonCallRoutingEndpointDestinationResponse, _ := json.Marshal(dst.CallRoutingEndpointDestinationResponse)
			if string(jsonCallRoutingEndpointDestinationResponse) == "{}" { // empty struct
				dst.CallRoutingEndpointDestinationResponse = nil
			} else {
				return nil // data stored in dst.CallRoutingEndpointDestinationResponse, return on the first match
			}
		} else {
			dst.CallRoutingEndpointDestinationResponse = nil
		}
	}
	return fmt.Errorf("Data failed to match schemas in anyOf(CallRoutingUrlDestinationResponse)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CallRoutingUrlDestinationResponse) MarshalJSON() ([]byte, error) {
	if src.CallRoutingEndpointDestinationResponse != nil {
		return json.Marshal(&src.CallRoutingEndpointDestinationResponse)
	}
	return nil, nil // no data in anyOf schemas
}

// Get the actual instance
func (obj *CallRoutingUrlDestinationResponse) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CallRoutingEndpointDestinationResponse != nil {
		return obj.CallRoutingEndpointDestinationResponse
	}
	// all schemas are nil
	return nil
}

type NullableCallRoutingUrlDestinationResponse struct {
	value *CallRoutingUrlDestinationResponse
	isSet bool
}

func (v NullableCallRoutingUrlDestinationResponse) Get() *CallRoutingUrlDestinationResponse {
	return v.value
}

func (v *NullableCallRoutingUrlDestinationResponse) Set(val *CallRoutingUrlDestinationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingUrlDestinationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingUrlDestinationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingUrlDestinationResponse(val *CallRoutingUrlDestinationResponse) *NullableCallRoutingUrlDestinationResponse {
	return &NullableCallRoutingUrlDestinationResponse{value: val, isSet: true}
}

func (v NullableCallRoutingUrlDestinationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingUrlDestinationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
