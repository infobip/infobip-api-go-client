/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SendSms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendSms{}

// SendSms Send SMS action creates and sends a text message from the scenario.
type SendSms struct {
	SendSms SendSmsData
	// User-defined ID of an action that can be used with go-to action.
	ActionId *int32
}

type _SendSms SendSms

// NewSendSms instantiates a new SendSms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewSendSms(sendSms SendSmsData) *SendSms {
	this := SendSms{}
	this.SendSms = sendSms
	return &this
}

// NewSendSmsWithDefaults instantiates a new SendSms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendSmsWithDefaults() *SendSms {
	this := SendSms{}

	return &this
}

// GetSendSms returns the SendSms field value
func (o *SendSms) GetSendSms() SendSmsData {
	if o == nil {
		var ret SendSmsData
		return ret
	}

	return o.SendSms
}

// GetSendSmsOk returns a tuple with the SendSms field value
// and a boolean to check if the value has been set.
func (o *SendSms) GetSendSmsOk() (*SendSmsData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SendSms, true
}

// SetSendSms sets field value
func (o *SendSms) SetSendSms(v SendSmsData) {
	o.SendSms = v
}

// GetActionId returns the ActionId field value if set, zero value otherwise.
func (o *SendSms) GetActionId() int32 {
	if o == nil || IsNil(o.ActionId) {
		var ret int32
		return ret
	}
	return *o.ActionId
}

// GetActionIdOk returns a tuple with the ActionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSms) GetActionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ActionId) {
		return nil, false
	}
	return o.ActionId, true
}

// HasActionId returns a boolean if a field has been set.
func (o *SendSms) HasActionId() bool {
	if o != nil && !IsNil(o.ActionId) {
		return true
	}

	return false
}

// SetActionId gets a reference to the given int32 and assigns it to the ActionId field.
func (o *SendSms) SetActionId(v int32) {
	o.ActionId = &v
}

func (o SendSms) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendSms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sendSms"] = o.SendSms
	if !IsNil(o.ActionId) {
		toSerialize["actionId"] = o.ActionId
	}
	return toSerialize, nil
}

type NullableSendSms struct {
	value *SendSms
	isSet bool
}

func (v NullableSendSms) Get() *SendSms {
	return v.value
}

func (v *NullableSendSms) Set(val *SendSms) {
	v.value = val
	v.isSet = true
}

func (v NullableSendSms) IsSet() bool {
	return v.isSet
}

func (v *NullableSendSms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendSms(val *SendSms) *NullableSendSms {
	return &NullableSendSms{value: val, isSet: true}
}

func (v NullableSendSms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendSms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
