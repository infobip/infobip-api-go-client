/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the OnDemandComposition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandComposition{}

// OnDemandComposition Composition request.
type OnDemandComposition struct {
	// Indicates whether to delete individual files for the call recordings after composition. If set to 'true' then files from the call recordings will be deleted after composition. Otherwise, files from the call recordings will be available, alongside with composed file.
	DeleteCallRecordings *bool
	MultiChannel         *MultiChannel
}

// NewOnDemandComposition instantiates a new OnDemandComposition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewOnDemandComposition() *OnDemandComposition {
	this := OnDemandComposition{}
	var deleteCallRecordings bool = true
	this.DeleteCallRecordings = &deleteCallRecordings
	return &this
}

// NewOnDemandCompositionWithDefaults instantiates a new OnDemandComposition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandCompositionWithDefaults() *OnDemandComposition {
	this := OnDemandComposition{}

	var deleteCallRecordings bool = true
	this.DeleteCallRecordings = &deleteCallRecordings
	return &this
}

// GetDeleteCallRecordings returns the DeleteCallRecordings field value if set, zero value otherwise.
func (o *OnDemandComposition) GetDeleteCallRecordings() bool {
	if o == nil || IsNil(o.DeleteCallRecordings) {
		var ret bool
		return ret
	}
	return *o.DeleteCallRecordings
}

// GetDeleteCallRecordingsOk returns a tuple with the DeleteCallRecordings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandComposition) GetDeleteCallRecordingsOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteCallRecordings) {
		return nil, false
	}
	return o.DeleteCallRecordings, true
}

// HasDeleteCallRecordings returns a boolean if a field has been set.
func (o *OnDemandComposition) HasDeleteCallRecordings() bool {
	if o != nil && !IsNil(o.DeleteCallRecordings) {
		return true
	}

	return false
}

// SetDeleteCallRecordings gets a reference to the given bool and assigns it to the DeleteCallRecordings field.
func (o *OnDemandComposition) SetDeleteCallRecordings(v bool) {
	o.DeleteCallRecordings = &v
}

// GetMultiChannel returns the MultiChannel field value if set, zero value otherwise.
func (o *OnDemandComposition) GetMultiChannel() MultiChannel {
	if o == nil || IsNil(o.MultiChannel) {
		var ret MultiChannel
		return ret
	}
	return *o.MultiChannel
}

// GetMultiChannelOk returns a tuple with the MultiChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandComposition) GetMultiChannelOk() (*MultiChannel, bool) {
	if o == nil || IsNil(o.MultiChannel) {
		return nil, false
	}
	return o.MultiChannel, true
}

// HasMultiChannel returns a boolean if a field has been set.
func (o *OnDemandComposition) HasMultiChannel() bool {
	if o != nil && !IsNil(o.MultiChannel) {
		return true
	}

	return false
}

// SetMultiChannel gets a reference to the given MultiChannel and assigns it to the MultiChannel field.
func (o *OnDemandComposition) SetMultiChannel(v MultiChannel) {
	o.MultiChannel = &v
}

func (o OnDemandComposition) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandComposition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteCallRecordings) {
		toSerialize["deleteCallRecordings"] = o.DeleteCallRecordings
	}
	if !IsNil(o.MultiChannel) {
		toSerialize["multiChannel"] = o.MultiChannel
	}
	return toSerialize, nil
}

type NullableOnDemandComposition struct {
	value *OnDemandComposition
	isSet bool
}

func (v NullableOnDemandComposition) Get() *OnDemandComposition {
	return v.value
}

func (v *NullableOnDemandComposition) Set(val *OnDemandComposition) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandComposition) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandComposition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandComposition(val *OnDemandComposition) *NullableOnDemandComposition {
	return &NullableOnDemandComposition{value: val, isSet: true}
}

func (v NullableOnDemandComposition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandComposition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
