/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the NumberMaskingStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NumberMaskingStatusRequest{}

// NumberMaskingStatusRequest Status request.
type NumberMaskingStatusRequest struct {
	// Requested action (dial, audio, captureDtmf).
	Action *string
	// Caller phone number.
	From *string
	// Called phone number.
	To *string
	// Called party phone number that the call is transferred to.
	TransferTo *string
	// Duration of the outbound call shown in seconds
	Duration *int32
	// Call status which can be: answered, busy, no answer, failed or congestion
	Status *string
	// Unique identifier for correlation with inbound call, available in Callback and Status requests.
	NmCorrelationId *string
	// Identifier of the file played to the caller.
	FileID *string
	// The URL of the file played to the caller.
	FileUrl *string
	// Date and time when ringing started.
	RingingTime *string
	// Date and time when the call was answered.
	AnsweredTime *string
	// Unique identifier of the call record, available for both Callback and Status requests.
	CorrelationId *string
	// Duration of the inbound call shown in seconds.
	InboundDuration *int32
	// The duration of the outbound part of the number masking session, where the voice billing model (1/1, 15/15,...) has been applied to the calculatedDuration.
	CalculatedDuration *int32
	// This is the price per second for the outbound part of the number masking session, with the price being expressed in cents per second.
	PricePerSecond *float64
	// The currency in which the price is expressed.
	Currency *string
	// ID of a recording file of a call.
	RecordingFileId *string
	// Flag that indicates if callee announcement is included in recording file.
	RecordCalleeAnnouncement *bool
	RecordingStatus          *NumberMaskingRecordingStatus
	// Client-defined ID of a valid file name. Used to correlate a call with this reference. If recording is enabled and files are stored in the SFTP server, that ID will be used as a file name instead.
	ClientReferenceId *string
}

// NewNumberMaskingStatusRequest instantiates a new NumberMaskingStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewNumberMaskingStatusRequest() *NumberMaskingStatusRequest {
	this := NumberMaskingStatusRequest{}
	return &this
}

// NewNumberMaskingStatusRequestWithDefaults instantiates a new NumberMaskingStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNumberMaskingStatusRequestWithDefaults() *NumberMaskingStatusRequest {
	this := NumberMaskingStatusRequest{}

	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *NumberMaskingStatusRequest) SetAction(v string) {
	o.Action = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *NumberMaskingStatusRequest) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *NumberMaskingStatusRequest) SetTo(v string) {
	o.To = &v
}

// GetTransferTo returns the TransferTo field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetTransferTo() string {
	if o == nil || IsNil(o.TransferTo) {
		var ret string
		return ret
	}
	return *o.TransferTo
}

// GetTransferToOk returns a tuple with the TransferTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetTransferToOk() (*string, bool) {
	if o == nil || IsNil(o.TransferTo) {
		return nil, false
	}
	return o.TransferTo, true
}

// HasTransferTo returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasTransferTo() bool {
	if o != nil && !IsNil(o.TransferTo) {
		return true
	}

	return false
}

// SetTransferTo gets a reference to the given string and assigns it to the TransferTo field.
func (o *NumberMaskingStatusRequest) SetTransferTo(v string) {
	o.TransferTo = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *NumberMaskingStatusRequest) SetDuration(v int32) {
	o.Duration = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NumberMaskingStatusRequest) SetStatus(v string) {
	o.Status = &v
}

// GetNmCorrelationId returns the NmCorrelationId field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetNmCorrelationId() string {
	if o == nil || IsNil(o.NmCorrelationId) {
		var ret string
		return ret
	}
	return *o.NmCorrelationId
}

// GetNmCorrelationIdOk returns a tuple with the NmCorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetNmCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.NmCorrelationId) {
		return nil, false
	}
	return o.NmCorrelationId, true
}

// HasNmCorrelationId returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasNmCorrelationId() bool {
	if o != nil && !IsNil(o.NmCorrelationId) {
		return true
	}

	return false
}

// SetNmCorrelationId gets a reference to the given string and assigns it to the NmCorrelationId field.
func (o *NumberMaskingStatusRequest) SetNmCorrelationId(v string) {
	o.NmCorrelationId = &v
}

// GetFileID returns the FileID field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetFileID() string {
	if o == nil || IsNil(o.FileID) {
		var ret string
		return ret
	}
	return *o.FileID
}

// GetFileIDOk returns a tuple with the FileID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetFileIDOk() (*string, bool) {
	if o == nil || IsNil(o.FileID) {
		return nil, false
	}
	return o.FileID, true
}

// HasFileID returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasFileID() bool {
	if o != nil && !IsNil(o.FileID) {
		return true
	}

	return false
}

// SetFileID gets a reference to the given string and assigns it to the FileID field.
func (o *NumberMaskingStatusRequest) SetFileID(v string) {
	o.FileID = &v
}

// GetFileUrl returns the FileUrl field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetFileUrl() string {
	if o == nil || IsNil(o.FileUrl) {
		var ret string
		return ret
	}
	return *o.FileUrl
}

// GetFileUrlOk returns a tuple with the FileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetFileUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FileUrl) {
		return nil, false
	}
	return o.FileUrl, true
}

// HasFileUrl returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasFileUrl() bool {
	if o != nil && !IsNil(o.FileUrl) {
		return true
	}

	return false
}

// SetFileUrl gets a reference to the given string and assigns it to the FileUrl field.
func (o *NumberMaskingStatusRequest) SetFileUrl(v string) {
	o.FileUrl = &v
}

// GetRingingTime returns the RingingTime field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetRingingTime() string {
	if o == nil || IsNil(o.RingingTime) {
		var ret string
		return ret
	}
	return *o.RingingTime
}

// GetRingingTimeOk returns a tuple with the RingingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetRingingTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RingingTime) {
		return nil, false
	}
	return o.RingingTime, true
}

// HasRingingTime returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasRingingTime() bool {
	if o != nil && !IsNil(o.RingingTime) {
		return true
	}

	return false
}

// SetRingingTime gets a reference to the given string and assigns it to the RingingTime field.
func (o *NumberMaskingStatusRequest) SetRingingTime(v string) {
	o.RingingTime = &v
}

// GetAnsweredTime returns the AnsweredTime field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetAnsweredTime() string {
	if o == nil || IsNil(o.AnsweredTime) {
		var ret string
		return ret
	}
	return *o.AnsweredTime
}

// GetAnsweredTimeOk returns a tuple with the AnsweredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetAnsweredTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AnsweredTime) {
		return nil, false
	}
	return o.AnsweredTime, true
}

// HasAnsweredTime returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasAnsweredTime() bool {
	if o != nil && !IsNil(o.AnsweredTime) {
		return true
	}

	return false
}

// SetAnsweredTime gets a reference to the given string and assigns it to the AnsweredTime field.
func (o *NumberMaskingStatusRequest) SetAnsweredTime(v string) {
	o.AnsweredTime = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *NumberMaskingStatusRequest) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetInboundDuration returns the InboundDuration field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetInboundDuration() int32 {
	if o == nil || IsNil(o.InboundDuration) {
		var ret int32
		return ret
	}
	return *o.InboundDuration
}

// GetInboundDurationOk returns a tuple with the InboundDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetInboundDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.InboundDuration) {
		return nil, false
	}
	return o.InboundDuration, true
}

// HasInboundDuration returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasInboundDuration() bool {
	if o != nil && !IsNil(o.InboundDuration) {
		return true
	}

	return false
}

// SetInboundDuration gets a reference to the given int32 and assigns it to the InboundDuration field.
func (o *NumberMaskingStatusRequest) SetInboundDuration(v int32) {
	o.InboundDuration = &v
}

// GetCalculatedDuration returns the CalculatedDuration field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetCalculatedDuration() int32 {
	if o == nil || IsNil(o.CalculatedDuration) {
		var ret int32
		return ret
	}
	return *o.CalculatedDuration
}

// GetCalculatedDurationOk returns a tuple with the CalculatedDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetCalculatedDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.CalculatedDuration) {
		return nil, false
	}
	return o.CalculatedDuration, true
}

// HasCalculatedDuration returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasCalculatedDuration() bool {
	if o != nil && !IsNil(o.CalculatedDuration) {
		return true
	}

	return false
}

// SetCalculatedDuration gets a reference to the given int32 and assigns it to the CalculatedDuration field.
func (o *NumberMaskingStatusRequest) SetCalculatedDuration(v int32) {
	o.CalculatedDuration = &v
}

// GetPricePerSecond returns the PricePerSecond field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetPricePerSecond() float64 {
	if o == nil || IsNil(o.PricePerSecond) {
		var ret float64
		return ret
	}
	return *o.PricePerSecond
}

// GetPricePerSecondOk returns a tuple with the PricePerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetPricePerSecondOk() (*float64, bool) {
	if o == nil || IsNil(o.PricePerSecond) {
		return nil, false
	}
	return o.PricePerSecond, true
}

// HasPricePerSecond returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasPricePerSecond() bool {
	if o != nil && !IsNil(o.PricePerSecond) {
		return true
	}

	return false
}

// SetPricePerSecond gets a reference to the given float64 and assigns it to the PricePerSecond field.
func (o *NumberMaskingStatusRequest) SetPricePerSecond(v float64) {
	o.PricePerSecond = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *NumberMaskingStatusRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetRecordingFileId returns the RecordingFileId field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetRecordingFileId() string {
	if o == nil || IsNil(o.RecordingFileId) {
		var ret string
		return ret
	}
	return *o.RecordingFileId
}

// GetRecordingFileIdOk returns a tuple with the RecordingFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetRecordingFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecordingFileId) {
		return nil, false
	}
	return o.RecordingFileId, true
}

// HasRecordingFileId returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasRecordingFileId() bool {
	if o != nil && !IsNil(o.RecordingFileId) {
		return true
	}

	return false
}

// SetRecordingFileId gets a reference to the given string and assigns it to the RecordingFileId field.
func (o *NumberMaskingStatusRequest) SetRecordingFileId(v string) {
	o.RecordingFileId = &v
}

// GetRecordCalleeAnnouncement returns the RecordCalleeAnnouncement field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetRecordCalleeAnnouncement() bool {
	if o == nil || IsNil(o.RecordCalleeAnnouncement) {
		var ret bool
		return ret
	}
	return *o.RecordCalleeAnnouncement
}

// GetRecordCalleeAnnouncementOk returns a tuple with the RecordCalleeAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetRecordCalleeAnnouncementOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordCalleeAnnouncement) {
		return nil, false
	}
	return o.RecordCalleeAnnouncement, true
}

// HasRecordCalleeAnnouncement returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasRecordCalleeAnnouncement() bool {
	if o != nil && !IsNil(o.RecordCalleeAnnouncement) {
		return true
	}

	return false
}

// SetRecordCalleeAnnouncement gets a reference to the given bool and assigns it to the RecordCalleeAnnouncement field.
func (o *NumberMaskingStatusRequest) SetRecordCalleeAnnouncement(v bool) {
	o.RecordCalleeAnnouncement = &v
}

// GetRecordingStatus returns the RecordingStatus field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetRecordingStatus() NumberMaskingRecordingStatus {
	if o == nil || IsNil(o.RecordingStatus) {
		var ret NumberMaskingRecordingStatus
		return ret
	}
	return *o.RecordingStatus
}

// GetRecordingStatusOk returns a tuple with the RecordingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetRecordingStatusOk() (*NumberMaskingRecordingStatus, bool) {
	if o == nil || IsNil(o.RecordingStatus) {
		return nil, false
	}
	return o.RecordingStatus, true
}

// HasRecordingStatus returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasRecordingStatus() bool {
	if o != nil && !IsNil(o.RecordingStatus) {
		return true
	}

	return false
}

// SetRecordingStatus gets a reference to the given NumberMaskingRecordingStatus and assigns it to the RecordingStatus field.
func (o *NumberMaskingStatusRequest) SetRecordingStatus(v NumberMaskingRecordingStatus) {
	o.RecordingStatus = &v
}

// GetClientReferenceId returns the ClientReferenceId field value if set, zero value otherwise.
func (o *NumberMaskingStatusRequest) GetClientReferenceId() string {
	if o == nil || IsNil(o.ClientReferenceId) {
		var ret string
		return ret
	}
	return *o.ClientReferenceId
}

// GetClientReferenceIdOk returns a tuple with the ClientReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingStatusRequest) GetClientReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientReferenceId) {
		return nil, false
	}
	return o.ClientReferenceId, true
}

// HasClientReferenceId returns a boolean if a field has been set.
func (o *NumberMaskingStatusRequest) HasClientReferenceId() bool {
	if o != nil && !IsNil(o.ClientReferenceId) {
		return true
	}

	return false
}

// SetClientReferenceId gets a reference to the given string and assigns it to the ClientReferenceId field.
func (o *NumberMaskingStatusRequest) SetClientReferenceId(v string) {
	o.ClientReferenceId = &v
}

func (o NumberMaskingStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NumberMaskingStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.TransferTo) {
		toSerialize["transferTo"] = o.TransferTo
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.NmCorrelationId) {
		toSerialize["nmCorrelationId"] = o.NmCorrelationId
	}
	if !IsNil(o.FileID) {
		toSerialize["fileID"] = o.FileID
	}
	if !IsNil(o.FileUrl) {
		toSerialize["fileUrl"] = o.FileUrl
	}
	if !IsNil(o.RingingTime) {
		toSerialize["ringingTime"] = o.RingingTime
	}
	if !IsNil(o.AnsweredTime) {
		toSerialize["answeredTime"] = o.AnsweredTime
	}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if !IsNil(o.InboundDuration) {
		toSerialize["inboundDuration"] = o.InboundDuration
	}
	if !IsNil(o.CalculatedDuration) {
		toSerialize["calculatedDuration"] = o.CalculatedDuration
	}
	if !IsNil(o.PricePerSecond) {
		toSerialize["pricePerSecond"] = o.PricePerSecond
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.RecordingFileId) {
		toSerialize["recordingFileId"] = o.RecordingFileId
	}
	if !IsNil(o.RecordCalleeAnnouncement) {
		toSerialize["recordCalleeAnnouncement"] = o.RecordCalleeAnnouncement
	}
	if !IsNil(o.RecordingStatus) {
		toSerialize["recordingStatus"] = o.RecordingStatus
	}
	if !IsNil(o.ClientReferenceId) {
		toSerialize["clientReferenceId"] = o.ClientReferenceId
	}
	return toSerialize, nil
}

type NullableNumberMaskingStatusRequest struct {
	value *NumberMaskingStatusRequest
	isSet bool
}

func (v NullableNumberMaskingStatusRequest) Get() *NumberMaskingStatusRequest {
	return v.value
}

func (v *NullableNumberMaskingStatusRequest) Set(val *NumberMaskingStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNumberMaskingStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNumberMaskingStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNumberMaskingStatusRequest(val *NumberMaskingStatusRequest) *NullableNumberMaskingStatusRequest {
	return &NullableNumberMaskingStatusRequest{value: val, isSet: true}
}

func (v NullableNumberMaskingStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNumberMaskingStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
