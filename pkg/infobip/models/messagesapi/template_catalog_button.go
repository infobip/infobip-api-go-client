/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the TemplateCatalogButton type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateCatalogButton{}

// TemplateCatalogButton struct for TemplateCatalogButton
type TemplateCatalogButton struct {
	Type TemplateButtonType
	// Product-unique identifier from the catalog.
	ProductId *string
}

type _TemplateCatalogButton TemplateCatalogButton

// NewTemplateCatalogButton instantiates a new TemplateCatalogButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateCatalogButton() *TemplateCatalogButton {
	this := TemplateCatalogButton{}
	this.Type = "CATALOG"
	return &this
}

// NewTemplateCatalogButtonWithDefaults instantiates a new TemplateCatalogButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateCatalogButtonWithDefaults() *TemplateCatalogButton {
	this := TemplateCatalogButton{}
	this.Type = "CATALOG"
	return &this
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *TemplateCatalogButton) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateCatalogButton) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *TemplateCatalogButton) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *TemplateCatalogButton) SetProductId(v string) {
	o.ProductId = &v
}

func (o TemplateCatalogButton) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateCatalogButton) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	return toSerialize, nil
}

type NullableTemplateCatalogButton struct {
	value *TemplateCatalogButton
	isSet bool
}

func (v NullableTemplateCatalogButton) Get() *TemplateCatalogButton {
	return v.value
}

func (v *NullableTemplateCatalogButton) Set(val *TemplateCatalogButton) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateCatalogButton) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateCatalogButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateCatalogButton(val *TemplateCatalogButton) *NullableTemplateCatalogButton {
	return &NullableTemplateCatalogButton{value: val, isSet: true}
}

func (v NullableTemplateCatalogButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateCatalogButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
