/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MessageResponseMessageResponseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageResponseMessageResponseDetails{}

// MessageResponseMessageResponseDetails An array of message objects of a single message or multiple messages sent under one bulk ID.
type MessageResponseMessageResponseDetails struct {
	// Unique message ID. If not provided, it will be auto-generated and returned in the API response.
	MessageId *string
	Status    *MessageStatus
	// The destination address of the message, i.e., its recipient.
	Destination *string
	// Other details of the message.
	Details map[string]interface{}
}

// NewMessageResponseMessageResponseDetails instantiates a new MessageResponseMessageResponseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageResponseMessageResponseDetails() *MessageResponseMessageResponseDetails {
	this := MessageResponseMessageResponseDetails{}
	return &this
}

// NewMessageResponseMessageResponseDetailsWithDefaults instantiates a new MessageResponseMessageResponseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageResponseMessageResponseDetailsWithDefaults() *MessageResponseMessageResponseDetails {
	this := MessageResponseMessageResponseDetails{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *MessageResponseMessageResponseDetails) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponseMessageResponseDetails) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *MessageResponseMessageResponseDetails) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *MessageResponseMessageResponseDetails) SetMessageId(v string) {
	o.MessageId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MessageResponseMessageResponseDetails) GetStatus() MessageStatus {
	if o == nil || IsNil(o.Status) {
		var ret MessageStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponseMessageResponseDetails) GetStatusOk() (*MessageStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MessageResponseMessageResponseDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MessageStatus and assigns it to the Status field.
func (o *MessageResponseMessageResponseDetails) SetStatus(v MessageStatus) {
	o.Status = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *MessageResponseMessageResponseDetails) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponseMessageResponseDetails) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *MessageResponseMessageResponseDetails) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *MessageResponseMessageResponseDetails) SetDestination(v string) {
	o.Destination = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *MessageResponseMessageResponseDetails) GetDetails() map[string]interface{} {
	if o == nil || IsNil(o.Details) {
		var ret map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponseMessageResponseDetails) GetDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MessageResponseMessageResponseDetails) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *MessageResponseMessageResponseDetails) SetDetails(v map[string]interface{}) {
	o.Details = v
}

func (o MessageResponseMessageResponseDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageResponseMessageResponseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableMessageResponseMessageResponseDetails struct {
	value *MessageResponseMessageResponseDetails
	isSet bool
}

func (v NullableMessageResponseMessageResponseDetails) Get() *MessageResponseMessageResponseDetails {
	return v.value
}

func (v *NullableMessageResponseMessageResponseDetails) Set(val *MessageResponseMessageResponseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageResponseMessageResponseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageResponseMessageResponseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageResponseMessageResponseDetails(val *MessageResponseMessageResponseDetails) *NullableMessageResponseMessageResponseDetails {
	return &NullableMessageResponseMessageResponseDetails{value: val, isSet: true}
}

func (v NullableMessageResponseMessageResponseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageResponseMessageResponseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
