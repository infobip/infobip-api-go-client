/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the UrlOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrlOptions{}

// UrlOptions Sets up [URL shortening](https://www.infobip.com/docs/url-shortening) and tracking feature.
type UrlOptions struct {
	// Enable shortening of the URLs within a message. Set this to `true`, if you want to set up other URL options.
	ShortenUrl *bool
	// Enable tracking of short URL clicks within a message: which URL was clicked, how many times, and by whom.
	TrackClicks *bool
	// The URL of your callback server on to which the Click report will be sent.
	TrackingUrl *string
	// Remove a protocol, such as `https://`, from links to shorten a message. Note that some mobiles may not recognize such links as a URL.
	RemoveProtocol *bool
	// Select a predefined custom domain to use when generating a short URL.
	CustomDomain *string
}

// NewUrlOptions instantiates a new UrlOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlOptions() *UrlOptions {
	this := UrlOptions{}
	var shortenUrl bool = true
	this.ShortenUrl = &shortenUrl
	var trackClicks bool = true
	this.TrackClicks = &trackClicks
	var removeProtocol bool = false
	this.RemoveProtocol = &removeProtocol
	return &this
}

// NewUrlOptionsWithDefaults instantiates a new UrlOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlOptionsWithDefaults() *UrlOptions {
	this := UrlOptions{}
	var shortenUrl bool = true
	this.ShortenUrl = &shortenUrl
	var trackClicks bool = true
	this.TrackClicks = &trackClicks
	var removeProtocol bool = false
	this.RemoveProtocol = &removeProtocol
	return &this
}

// GetShortenUrl returns the ShortenUrl field value if set, zero value otherwise.
func (o *UrlOptions) GetShortenUrl() bool {
	if o == nil || IsNil(o.ShortenUrl) {
		var ret bool
		return ret
	}
	return *o.ShortenUrl
}

// GetShortenUrlOk returns a tuple with the ShortenUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlOptions) GetShortenUrlOk() (*bool, bool) {
	if o == nil || IsNil(o.ShortenUrl) {
		return nil, false
	}
	return o.ShortenUrl, true
}

// HasShortenUrl returns a boolean if a field has been set.
func (o *UrlOptions) HasShortenUrl() bool {
	if o != nil && !IsNil(o.ShortenUrl) {
		return true
	}

	return false
}

// SetShortenUrl gets a reference to the given bool and assigns it to the ShortenUrl field.
func (o *UrlOptions) SetShortenUrl(v bool) {
	o.ShortenUrl = &v
}

// GetTrackClicks returns the TrackClicks field value if set, zero value otherwise.
func (o *UrlOptions) GetTrackClicks() bool {
	if o == nil || IsNil(o.TrackClicks) {
		var ret bool
		return ret
	}
	return *o.TrackClicks
}

// GetTrackClicksOk returns a tuple with the TrackClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlOptions) GetTrackClicksOk() (*bool, bool) {
	if o == nil || IsNil(o.TrackClicks) {
		return nil, false
	}
	return o.TrackClicks, true
}

// HasTrackClicks returns a boolean if a field has been set.
func (o *UrlOptions) HasTrackClicks() bool {
	if o != nil && !IsNil(o.TrackClicks) {
		return true
	}

	return false
}

// SetTrackClicks gets a reference to the given bool and assigns it to the TrackClicks field.
func (o *UrlOptions) SetTrackClicks(v bool) {
	o.TrackClicks = &v
}

// GetTrackingUrl returns the TrackingUrl field value if set, zero value otherwise.
func (o *UrlOptions) GetTrackingUrl() string {
	if o == nil || IsNil(o.TrackingUrl) {
		var ret string
		return ret
	}
	return *o.TrackingUrl
}

// GetTrackingUrlOk returns a tuple with the TrackingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlOptions) GetTrackingUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingUrl) {
		return nil, false
	}
	return o.TrackingUrl, true
}

// HasTrackingUrl returns a boolean if a field has been set.
func (o *UrlOptions) HasTrackingUrl() bool {
	if o != nil && !IsNil(o.TrackingUrl) {
		return true
	}

	return false
}

// SetTrackingUrl gets a reference to the given string and assigns it to the TrackingUrl field.
func (o *UrlOptions) SetTrackingUrl(v string) {
	o.TrackingUrl = &v
}

// GetRemoveProtocol returns the RemoveProtocol field value if set, zero value otherwise.
func (o *UrlOptions) GetRemoveProtocol() bool {
	if o == nil || IsNil(o.RemoveProtocol) {
		var ret bool
		return ret
	}
	return *o.RemoveProtocol
}

// GetRemoveProtocolOk returns a tuple with the RemoveProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlOptions) GetRemoveProtocolOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveProtocol) {
		return nil, false
	}
	return o.RemoveProtocol, true
}

// HasRemoveProtocol returns a boolean if a field has been set.
func (o *UrlOptions) HasRemoveProtocol() bool {
	if o != nil && !IsNil(o.RemoveProtocol) {
		return true
	}

	return false
}

// SetRemoveProtocol gets a reference to the given bool and assigns it to the RemoveProtocol field.
func (o *UrlOptions) SetRemoveProtocol(v bool) {
	o.RemoveProtocol = &v
}

// GetCustomDomain returns the CustomDomain field value if set, zero value otherwise.
func (o *UrlOptions) GetCustomDomain() string {
	if o == nil || IsNil(o.CustomDomain) {
		var ret string
		return ret
	}
	return *o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlOptions) GetCustomDomainOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDomain) {
		return nil, false
	}
	return o.CustomDomain, true
}

// HasCustomDomain returns a boolean if a field has been set.
func (o *UrlOptions) HasCustomDomain() bool {
	if o != nil && !IsNil(o.CustomDomain) {
		return true
	}

	return false
}

// SetCustomDomain gets a reference to the given string and assigns it to the CustomDomain field.
func (o *UrlOptions) SetCustomDomain(v string) {
	o.CustomDomain = &v
}

func (o UrlOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrlOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShortenUrl) {
		toSerialize["shortenUrl"] = o.ShortenUrl
	}
	if !IsNil(o.TrackClicks) {
		toSerialize["trackClicks"] = o.TrackClicks
	}
	if !IsNil(o.TrackingUrl) {
		toSerialize["trackingUrl"] = o.TrackingUrl
	}
	if !IsNil(o.RemoveProtocol) {
		toSerialize["removeProtocol"] = o.RemoveProtocol
	}
	if !IsNil(o.CustomDomain) {
		toSerialize["customDomain"] = o.CustomDomain
	}
	return toSerialize, nil
}

type NullableUrlOptions struct {
	value *UrlOptions
	isSet bool
}

func (v NullableUrlOptions) Get() *UrlOptions {
	return v.value
}

func (v *NullableUrlOptions) Set(val *UrlOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlOptions(val *UrlOptions) *NullableUrlOptions {
	return &NullableUrlOptions{value: val, isSet: true}
}

func (v NullableUrlOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
