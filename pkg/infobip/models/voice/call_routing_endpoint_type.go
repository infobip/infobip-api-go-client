/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// CallRoutingEndpointType the model 'CallRoutingEndpointType'
type CallRoutingEndpointType string

// List of CallRoutingEndpointType
const (
	CALLROUTINGENDPOINTTYPE_PHONE  CallRoutingEndpointType = "PHONE"
	CALLROUTINGENDPOINTTYPE_SIP    CallRoutingEndpointType = "SIP"
	CALLROUTINGENDPOINTTYPE_WEBRTC CallRoutingEndpointType = "WEBRTC"
	CALLROUTINGENDPOINTTYPE_VIBER  CallRoutingEndpointType = "VIBER"
)

// All allowed values of CallRoutingEndpointType enum
var AllowedCallRoutingEndpointTypeEnumValues = []CallRoutingEndpointType{
	"PHONE",
	"SIP",
	"WEBRTC",
	"VIBER",
}

func (v *CallRoutingEndpointType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CallRoutingEndpointType(value)
	for _, existing := range AllowedCallRoutingEndpointTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CallRoutingEndpointType", value)
}

// NewCallRoutingEndpointTypeFromValue returns a pointer to a valid CallRoutingEndpointType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCallRoutingEndpointTypeFromValue(v string) (*CallRoutingEndpointType, error) {
	ev := CallRoutingEndpointType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CallRoutingEndpointType: valid values are %v", v, AllowedCallRoutingEndpointTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CallRoutingEndpointType) IsValid() bool {
	for _, existing := range AllowedCallRoutingEndpointTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CallRoutingEndpointType value
func (v CallRoutingEndpointType) Ptr() *CallRoutingEndpointType {
	return &v
}

type NullableCallRoutingEndpointType struct {
	value *CallRoutingEndpointType
	isSet bool
}

func (v NullableCallRoutingEndpointType) Get() *CallRoutingEndpointType {
	return v.value
}

func (v *NullableCallRoutingEndpointType) Set(val *CallRoutingEndpointType) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRoutingEndpointType) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRoutingEndpointType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRoutingEndpointType(val *CallRoutingEndpointType) *NullableCallRoutingEndpointType {
	return &NullableCallRoutingEndpointType{value: val, isSet: true}
}

func (v NullableCallRoutingEndpointType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRoutingEndpointType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
