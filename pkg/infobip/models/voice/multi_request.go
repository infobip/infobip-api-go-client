/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MultiRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiRequest{}

// MultiRequest struct for MultiRequest
type MultiRequest struct {
	// Array of messages to be sent, one per every message.
	Messages []MultiMessage
}

type _MultiRequest MultiRequest

// NewMultiRequest instantiates a new MultiRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewMultiRequest(messages []MultiMessage) *MultiRequest {
	this := MultiRequest{}
	this.Messages = messages
	return &this
}

// NewMultiRequestWithDefaults instantiates a new MultiRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiRequestWithDefaults() *MultiRequest {
	this := MultiRequest{}

	return &this
}

// GetMessages returns the Messages field value
func (o *MultiRequest) GetMessages() []MultiMessage {
	if o == nil {
		var ret []MultiMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *MultiRequest) GetMessagesOk() ([]MultiMessage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *MultiRequest) SetMessages(v []MultiMessage) {
	o.Messages = v
}

func (o MultiRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messages"] = o.Messages
	return toSerialize, nil
}

type NullableMultiRequest struct {
	value *MultiRequest
	isSet bool
}

func (v NullableMultiRequest) Get() *MultiRequest {
	return v.value
}

func (v *NullableMultiRequest) Set(val *MultiRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiRequest(val *MultiRequest) *NullableMultiRequest {
	return &NullableMultiRequest{value: val, isSet: true}
}

func (v NullableMultiRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
