/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the BasicSecurityConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BasicSecurityConfig{}

// BasicSecurityConfig struct for BasicSecurityConfig
type BasicSecurityConfig struct {
	Type CallRoutingUrlSecurityConfigType
	// Username.
	Username string
	// Password.
	Password string
}

type _BasicSecurityConfig BasicSecurityConfig

// NewBasicSecurityConfig instantiates a new BasicSecurityConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasicSecurityConfig(username string, password string) *BasicSecurityConfig {
	this := BasicSecurityConfig{}
	this.Type = "BASIC"
	this.Username = username
	this.Password = password
	return &this
}

// NewBasicSecurityConfigWithDefaults instantiates a new BasicSecurityConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasicSecurityConfigWithDefaults() *BasicSecurityConfig {
	this := BasicSecurityConfig{}
	this.Type = "BASIC"
	return &this
}

// GetUsername returns the Username field value
func (o *BasicSecurityConfig) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *BasicSecurityConfig) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *BasicSecurityConfig) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *BasicSecurityConfig) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *BasicSecurityConfig) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *BasicSecurityConfig) SetPassword(v string) {
	o.Password = v
}

func (o BasicSecurityConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BasicSecurityConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["username"] = o.Username
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableBasicSecurityConfig struct {
	value *BasicSecurityConfig
	isSet bool
}

func (v NullableBasicSecurityConfig) Get() *BasicSecurityConfig {
	return v.value
}

func (v *NullableBasicSecurityConfig) Set(val *BasicSecurityConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicSecurityConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicSecurityConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicSecurityConfig(val *BasicSecurityConfig) *NullableBasicSecurityConfig {
	return &NullableBasicSecurityConfig{value: val, isSet: true}
}

func (v NullableBasicSecurityConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicSecurityConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
