/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialToConversations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialToConversations{}

// DialToConversations Dial to Conversations action performs a call redirection to the [Infobip Conversations platform](https://www.infobip.com/docs/conversations), joining the userâ€™s call with an agent. After Dial to Conversations action the following actions are forbidden: Say, Collect, Dial, Dial to Many, Dial to WebRTC, Dial to SIP trunk, Dial to Conversations, Play, Record and Play from Recording.
type DialToConversations struct {
	DialToConversations DialToConversationsData
}

type _DialToConversations DialToConversations

// NewDialToConversations instantiates a new DialToConversations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialToConversations(dialToConversations DialToConversationsData) *DialToConversations {
	this := DialToConversations{}
	this.DialToConversations = dialToConversations
	return &this
}

// NewDialToConversationsWithDefaults instantiates a new DialToConversations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialToConversationsWithDefaults() *DialToConversations {
	this := DialToConversations{}

	return &this
}

// GetDialToConversations returns the DialToConversations field value
func (o *DialToConversations) GetDialToConversations() DialToConversationsData {
	if o == nil {
		var ret DialToConversationsData
		return ret
	}

	return o.DialToConversations
}

// GetDialToConversationsOk returns a tuple with the DialToConversations field value
// and a boolean to check if the value has been set.
func (o *DialToConversations) GetDialToConversationsOk() (*DialToConversationsData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DialToConversations, true
}

// SetDialToConversations sets field value
func (o *DialToConversations) SetDialToConversations(v DialToConversationsData) {
	o.DialToConversations = v
}

func (o DialToConversations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialToConversations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dialToConversations"] = o.DialToConversations
	return toSerialize, nil
}

type NullableDialToConversations struct {
	value *DialToConversations
	isSet bool
}

func (v NullableDialToConversations) Get() *DialToConversations {
	return v.value
}

func (v *NullableDialToConversations) Set(val *DialToConversations) {
	v.value = val
	v.isSet = true
}

func (v NullableDialToConversations) IsSet() bool {
	return v.isSet
}

func (v *NullableDialToConversations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialToConversations(val *DialToConversations) *NullableDialToConversations {
	return &NullableDialToConversations{value: val, isSet: true}
}

func (v NullableDialToConversations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialToConversations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
