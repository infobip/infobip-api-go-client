/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsAdvancedBinaryRequest struct for SmsAdvancedBinaryRequest
type SmsAdvancedBinaryRequest struct {
	// Unique ID assigned to the request if messaging multiple recipients or sending multiple messages via a single API request. If not provided, it will be auto-generated and returned in the API response. Typically, used to fetch [delivery reports](#channels/sms/get-outbound-sms-message-delivery-reports) and [message logs](#channels/sms/get-outbound-sms-message-logs).
	BulkId *string `json:"bulkId,omitempty"`
	// An array of message objects of a single message or multiple messages sent under one bulk ID.
	Messages          []SmsBinaryMessage    `json:"messages"`
	SendingSpeedLimit *SmsSendingSpeedLimit `json:"sendingSpeedLimit,omitempty"`
}

// NewSmsAdvancedBinaryRequest instantiates a new SmsAdvancedBinaryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsAdvancedBinaryRequest(messages []SmsBinaryMessage) *SmsAdvancedBinaryRequest {
	this := SmsAdvancedBinaryRequest{}
	this.Messages = messages
	return &this
}

// NewSmsAdvancedBinaryRequestWithDefaults instantiates a new SmsAdvancedBinaryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsAdvancedBinaryRequestWithDefaults() *SmsAdvancedBinaryRequest {
	this := SmsAdvancedBinaryRequest{}
	return &this
}

// GetBulkId returns the BulkId field value if set, zero value otherwise.
func (o *SmsAdvancedBinaryRequest) GetBulkId() string {
	if o == nil || o.BulkId == nil {
		var ret string
		return ret
	}
	return *o.BulkId
}

// GetBulkIdOk returns a tuple with the BulkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsAdvancedBinaryRequest) GetBulkIdOk() (*string, bool) {
	if o == nil || o.BulkId == nil {
		return nil, false
	}
	return o.BulkId, true
}

// HasBulkId returns a boolean if a field has been set.
func (o *SmsAdvancedBinaryRequest) HasBulkId() bool {
	if o != nil && o.BulkId != nil {
		return true
	}

	return false
}

// SetBulkId gets a reference to the given string and assigns it to the BulkId field.
func (o *SmsAdvancedBinaryRequest) SetBulkId(v string) {
	o.BulkId = &v
}

// GetMessages returns the Messages field value
func (o *SmsAdvancedBinaryRequest) GetMessages() []SmsBinaryMessage {
	if o == nil {
		var ret []SmsBinaryMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *SmsAdvancedBinaryRequest) GetMessagesOk() (*[]SmsBinaryMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *SmsAdvancedBinaryRequest) SetMessages(v []SmsBinaryMessage) {
	o.Messages = v
}

// GetSendingSpeedLimit returns the SendingSpeedLimit field value if set, zero value otherwise.
func (o *SmsAdvancedBinaryRequest) GetSendingSpeedLimit() SmsSendingSpeedLimit {
	if o == nil || o.SendingSpeedLimit == nil {
		var ret SmsSendingSpeedLimit
		return ret
	}
	return *o.SendingSpeedLimit
}

// GetSendingSpeedLimitOk returns a tuple with the SendingSpeedLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsAdvancedBinaryRequest) GetSendingSpeedLimitOk() (*SmsSendingSpeedLimit, bool) {
	if o == nil || o.SendingSpeedLimit == nil {
		return nil, false
	}
	return o.SendingSpeedLimit, true
}

// HasSendingSpeedLimit returns a boolean if a field has been set.
func (o *SmsAdvancedBinaryRequest) HasSendingSpeedLimit() bool {
	if o != nil && o.SendingSpeedLimit != nil {
		return true
	}

	return false
}

// SetSendingSpeedLimit gets a reference to the given SmsSendingSpeedLimit and assigns it to the SendingSpeedLimit field.
func (o *SmsAdvancedBinaryRequest) SetSendingSpeedLimit(v SmsSendingSpeedLimit) {
	o.SendingSpeedLimit = &v
}

func (o SmsAdvancedBinaryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BulkId != nil {
		toSerialize["bulkId"] = o.BulkId
	}
	if true {
		toSerialize["messages"] = o.Messages
	}
	if o.SendingSpeedLimit != nil {
		toSerialize["sendingSpeedLimit"] = o.SendingSpeedLimit
	}
	return json.Marshal(toSerialize)
}

type NullableSmsAdvancedBinaryRequest struct {
	value *SmsAdvancedBinaryRequest
	isSet bool
}

func (v NullableSmsAdvancedBinaryRequest) Get() *SmsAdvancedBinaryRequest {
	return v.value
}

func (v *NullableSmsAdvancedBinaryRequest) Set(val *SmsAdvancedBinaryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsAdvancedBinaryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsAdvancedBinaryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsAdvancedBinaryRequest(val *SmsAdvancedBinaryRequest) *NullableSmsAdvancedBinaryRequest {
	return &NullableSmsAdvancedBinaryRequest{value: val, isSet: true}
}

func (v NullableSmsAdvancedBinaryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsAdvancedBinaryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
