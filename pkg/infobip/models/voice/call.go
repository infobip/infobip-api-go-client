/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the Call type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Call{}

// Call struct for Call
type Call struct {
	// Unique call ID.
	Id       *string
	Endpoint CallEndpoint
	// Caller ID.
	From *string
	// Callee ID.
	To        *string
	Direction *CallDirection
	State     *CallState
	Media     *MediaProperties
	// Date and time for when the call has been created.
	StartTime *Time
	// Date and time for when the call has been answered.
	AnswerTime *Time
	// Date and time for when the call has been finished.
	EndTime *Time
	// Parent call ID.
	ParentCallId     *string
	MachineDetection *MachineDetectionProperties
	// Ringing duration in seconds.
	RingDuration *int32
	// Current calls configuration ID.
	CallsConfigurationId *string
	Platform             *Platform
	// Current conference ID.
	ConferenceId *string
	// Custom data.
	CustomData *map[string]string
	// Dialog ID.
	DialogId *string
}

type _Call Call

// NewCall instantiates a new Call object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewCall(endpoint CallEndpoint) *Call {
	this := Call{}
	this.Endpoint = endpoint
	return &this
}

// NewCallWithDefaults instantiates a new Call object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallWithDefaults() *Call {
	this := Call{}

	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Call) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Call) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Call) SetId(v string) {
	o.Id = &v
}

// GetEndpoint returns the Endpoint field value
func (o *Call) GetEndpoint() CallEndpoint {
	if o == nil {
		var ret CallEndpoint
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *Call) GetEndpointOk() (*CallEndpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *Call) SetEndpoint(v CallEndpoint) {
	o.Endpoint = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *Call) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *Call) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *Call) SetFrom(v string) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *Call) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *Call) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *Call) SetTo(v string) {
	o.To = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *Call) GetDirection() CallDirection {
	if o == nil || IsNil(o.Direction) {
		var ret CallDirection
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetDirectionOk() (*CallDirection, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *Call) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given CallDirection and assigns it to the Direction field.
func (o *Call) SetDirection(v CallDirection) {
	o.Direction = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Call) GetState() CallState {
	if o == nil || IsNil(o.State) {
		var ret CallState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetStateOk() (*CallState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Call) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given CallState and assigns it to the State field.
func (o *Call) SetState(v CallState) {
	o.State = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *Call) GetMedia() MediaProperties {
	if o == nil || IsNil(o.Media) {
		var ret MediaProperties
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetMediaOk() (*MediaProperties, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *Call) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given MediaProperties and assigns it to the Media field.
func (o *Call) SetMedia(v MediaProperties) {
	o.Media = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Call) GetStartTime() Time {
	if o == nil || IsNil(o.StartTime) {
		var ret Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetStartTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Call) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given Time and assigns it to the StartTime field.
func (o *Call) SetStartTime(v Time) {
	o.StartTime = &v
}

// GetAnswerTime returns the AnswerTime field value if set, zero value otherwise.
func (o *Call) GetAnswerTime() Time {
	if o == nil || IsNil(o.AnswerTime) {
		var ret Time
		return ret
	}
	return *o.AnswerTime
}

// GetAnswerTimeOk returns a tuple with the AnswerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetAnswerTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.AnswerTime) {
		return nil, false
	}
	return o.AnswerTime, true
}

// HasAnswerTime returns a boolean if a field has been set.
func (o *Call) HasAnswerTime() bool {
	if o != nil && !IsNil(o.AnswerTime) {
		return true
	}

	return false
}

// SetAnswerTime gets a reference to the given Time and assigns it to the AnswerTime field.
func (o *Call) SetAnswerTime(v Time) {
	o.AnswerTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *Call) GetEndTime() Time {
	if o == nil || IsNil(o.EndTime) {
		var ret Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetEndTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *Call) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given Time and assigns it to the EndTime field.
func (o *Call) SetEndTime(v Time) {
	o.EndTime = &v
}

// GetParentCallId returns the ParentCallId field value if set, zero value otherwise.
func (o *Call) GetParentCallId() string {
	if o == nil || IsNil(o.ParentCallId) {
		var ret string
		return ret
	}
	return *o.ParentCallId
}

// GetParentCallIdOk returns a tuple with the ParentCallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetParentCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentCallId) {
		return nil, false
	}
	return o.ParentCallId, true
}

// HasParentCallId returns a boolean if a field has been set.
func (o *Call) HasParentCallId() bool {
	if o != nil && !IsNil(o.ParentCallId) {
		return true
	}

	return false
}

// SetParentCallId gets a reference to the given string and assigns it to the ParentCallId field.
func (o *Call) SetParentCallId(v string) {
	o.ParentCallId = &v
}

// GetMachineDetection returns the MachineDetection field value if set, zero value otherwise.
func (o *Call) GetMachineDetection() MachineDetectionProperties {
	if o == nil || IsNil(o.MachineDetection) {
		var ret MachineDetectionProperties
		return ret
	}
	return *o.MachineDetection
}

// GetMachineDetectionOk returns a tuple with the MachineDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetMachineDetectionOk() (*MachineDetectionProperties, bool) {
	if o == nil || IsNil(o.MachineDetection) {
		return nil, false
	}
	return o.MachineDetection, true
}

// HasMachineDetection returns a boolean if a field has been set.
func (o *Call) HasMachineDetection() bool {
	if o != nil && !IsNil(o.MachineDetection) {
		return true
	}

	return false
}

// SetMachineDetection gets a reference to the given MachineDetectionProperties and assigns it to the MachineDetection field.
func (o *Call) SetMachineDetection(v MachineDetectionProperties) {
	o.MachineDetection = &v
}

// GetRingDuration returns the RingDuration field value if set, zero value otherwise.
func (o *Call) GetRingDuration() int32 {
	if o == nil || IsNil(o.RingDuration) {
		var ret int32
		return ret
	}
	return *o.RingDuration
}

// GetRingDurationOk returns a tuple with the RingDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetRingDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.RingDuration) {
		return nil, false
	}
	return o.RingDuration, true
}

// HasRingDuration returns a boolean if a field has been set.
func (o *Call) HasRingDuration() bool {
	if o != nil && !IsNil(o.RingDuration) {
		return true
	}

	return false
}

// SetRingDuration gets a reference to the given int32 and assigns it to the RingDuration field.
func (o *Call) SetRingDuration(v int32) {
	o.RingDuration = &v
}

// GetCallsConfigurationId returns the CallsConfigurationId field value if set, zero value otherwise.
func (o *Call) GetCallsConfigurationId() string {
	if o == nil || IsNil(o.CallsConfigurationId) {
		var ret string
		return ret
	}
	return *o.CallsConfigurationId
}

// GetCallsConfigurationIdOk returns a tuple with the CallsConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetCallsConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallsConfigurationId) {
		return nil, false
	}
	return o.CallsConfigurationId, true
}

// HasCallsConfigurationId returns a boolean if a field has been set.
func (o *Call) HasCallsConfigurationId() bool {
	if o != nil && !IsNil(o.CallsConfigurationId) {
		return true
	}

	return false
}

// SetCallsConfigurationId gets a reference to the given string and assigns it to the CallsConfigurationId field.
func (o *Call) SetCallsConfigurationId(v string) {
	o.CallsConfigurationId = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *Call) GetPlatform() Platform {
	if o == nil || IsNil(o.Platform) {
		var ret Platform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetPlatformOk() (*Platform, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *Call) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given Platform and assigns it to the Platform field.
func (o *Call) SetPlatform(v Platform) {
	o.Platform = &v
}

// GetConferenceId returns the ConferenceId field value if set, zero value otherwise.
func (o *Call) GetConferenceId() string {
	if o == nil || IsNil(o.ConferenceId) {
		var ret string
		return ret
	}
	return *o.ConferenceId
}

// GetConferenceIdOk returns a tuple with the ConferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetConferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceId) {
		return nil, false
	}
	return o.ConferenceId, true
}

// HasConferenceId returns a boolean if a field has been set.
func (o *Call) HasConferenceId() bool {
	if o != nil && !IsNil(o.ConferenceId) {
		return true
	}

	return false
}

// SetConferenceId gets a reference to the given string and assigns it to the ConferenceId field.
func (o *Call) SetConferenceId(v string) {
	o.ConferenceId = &v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *Call) GetCustomData() map[string]string {
	if o == nil || IsNil(o.CustomData) {
		var ret map[string]string
		return ret
	}
	return *o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetCustomDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomData) {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *Call) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]string and assigns it to the CustomData field.
func (o *Call) SetCustomData(v map[string]string) {
	o.CustomData = &v
}

// GetDialogId returns the DialogId field value if set, zero value otherwise.
func (o *Call) GetDialogId() string {
	if o == nil || IsNil(o.DialogId) {
		var ret string
		return ret
	}
	return *o.DialogId
}

// GetDialogIdOk returns a tuple with the DialogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Call) GetDialogIdOk() (*string, bool) {
	if o == nil || IsNil(o.DialogId) {
		return nil, false
	}
	return o.DialogId, true
}

// HasDialogId returns a boolean if a field has been set.
func (o *Call) HasDialogId() bool {
	if o != nil && !IsNil(o.DialogId) {
		return true
	}

	return false
}

// SetDialogId gets a reference to the given string and assigns it to the DialogId field.
func (o *Call) SetDialogId(v string) {
	o.DialogId = &v
}

func (o Call) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Call) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["endpoint"] = o.Endpoint
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.AnswerTime) {
		toSerialize["answerTime"] = o.AnswerTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.ParentCallId) {
		toSerialize["parentCallId"] = o.ParentCallId
	}
	if !IsNil(o.MachineDetection) {
		toSerialize["machineDetection"] = o.MachineDetection
	}
	if !IsNil(o.RingDuration) {
		toSerialize["ringDuration"] = o.RingDuration
	}
	if !IsNil(o.CallsConfigurationId) {
		toSerialize["callsConfigurationId"] = o.CallsConfigurationId
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.ConferenceId) {
		toSerialize["conferenceId"] = o.ConferenceId
	}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	if !IsNil(o.DialogId) {
		toSerialize["dialogId"] = o.DialogId
	}
	return toSerialize, nil
}

type NullableCall struct {
	value *Call
	isSet bool
}

func (v NullableCall) Get() *Call {
	return v.value
}

func (v *NullableCall) Set(val *Call) {
	v.value = val
	v.isSet = true
}

func (v NullableCall) IsSet() bool {
	return v.isSet
}

func (v *NullableCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCall(val *Call) *NullableCall {
	return &NullableCall{value: val, isSet: true}
}

func (v NullableCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
