/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ReturnPathAddressRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnPathAddressRequest{}

// ReturnPathAddressRequest struct for ReturnPathAddressRequest
type ReturnPathAddressRequest struct {
	// Mailbox for return path, this mailbox should be based on the same domain. If you want to disable custom return path and use our default return path address set the value to an empty string.
	ReturnPathAddress string
}

type _ReturnPathAddressRequest ReturnPathAddressRequest

// NewReturnPathAddressRequest instantiates a new ReturnPathAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewReturnPathAddressRequest(returnPathAddress string) *ReturnPathAddressRequest {
	this := ReturnPathAddressRequest{}
	this.ReturnPathAddress = returnPathAddress
	return &this
}

// NewReturnPathAddressRequestWithDefaults instantiates a new ReturnPathAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnPathAddressRequestWithDefaults() *ReturnPathAddressRequest {
	this := ReturnPathAddressRequest{}

	return &this
}

// GetReturnPathAddress returns the ReturnPathAddress field value
func (o *ReturnPathAddressRequest) GetReturnPathAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnPathAddress
}

// GetReturnPathAddressOk returns a tuple with the ReturnPathAddress field value
// and a boolean to check if the value has been set.
func (o *ReturnPathAddressRequest) GetReturnPathAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReturnPathAddress, true
}

// SetReturnPathAddress sets field value
func (o *ReturnPathAddressRequest) SetReturnPathAddress(v string) {
	o.ReturnPathAddress = v
}

func (o ReturnPathAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnPathAddressRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["returnPathAddress"] = o.ReturnPathAddress
	return toSerialize, nil
}

type NullableReturnPathAddressRequest struct {
	value *ReturnPathAddressRequest
	isSet bool
}

func (v NullableReturnPathAddressRequest) Get() *ReturnPathAddressRequest {
	return v.value
}

func (v *NullableReturnPathAddressRequest) Set(val *ReturnPathAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnPathAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnPathAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnPathAddressRequest(val *ReturnPathAddressRequest) *NullableReturnPathAddressRequest {
	return &NullableReturnPathAddressRequest{value: val, isSet: true}
}

func (v NullableReturnPathAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnPathAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
