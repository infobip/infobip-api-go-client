/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MediaStreamConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaStreamConfigRequest{}

// MediaStreamConfigRequest struct for MediaStreamConfigRequest
type MediaStreamConfigRequest struct {
	// Media-stream configuration name.
	Name string
	// Destination websocket or load balancer URL.
	Url            string
	SecurityConfig *SecurityConfig
}

type _MediaStreamConfigRequest MediaStreamConfigRequest

// NewMediaStreamConfigRequest instantiates a new MediaStreamConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewMediaStreamConfigRequest(name string, url string) *MediaStreamConfigRequest {
	this := MediaStreamConfigRequest{}
	this.Name = name
	this.Url = url
	return &this
}

// NewMediaStreamConfigRequestWithDefaults instantiates a new MediaStreamConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaStreamConfigRequestWithDefaults() *MediaStreamConfigRequest {
	this := MediaStreamConfigRequest{}

	return &this
}

// GetName returns the Name field value
func (o *MediaStreamConfigRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MediaStreamConfigRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MediaStreamConfigRequest) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *MediaStreamConfigRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MediaStreamConfigRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MediaStreamConfigRequest) SetUrl(v string) {
	o.Url = v
}

// GetSecurityConfig returns the SecurityConfig field value if set, zero value otherwise.
func (o *MediaStreamConfigRequest) GetSecurityConfig() SecurityConfig {
	if o == nil || IsNil(o.SecurityConfig) {
		var ret SecurityConfig
		return ret
	}
	return *o.SecurityConfig
}

// GetSecurityConfigOk returns a tuple with the SecurityConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStreamConfigRequest) GetSecurityConfigOk() (*SecurityConfig, bool) {
	if o == nil || IsNil(o.SecurityConfig) {
		return nil, false
	}
	return o.SecurityConfig, true
}

// HasSecurityConfig returns a boolean if a field has been set.
func (o *MediaStreamConfigRequest) HasSecurityConfig() bool {
	if o != nil && !IsNil(o.SecurityConfig) {
		return true
	}

	return false
}

// SetSecurityConfig gets a reference to the given SecurityConfig and assigns it to the SecurityConfig field.
func (o *MediaStreamConfigRequest) SetSecurityConfig(v SecurityConfig) {
	o.SecurityConfig = &v
}

func (o MediaStreamConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaStreamConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["url"] = o.Url
	if !IsNil(o.SecurityConfig) {
		toSerialize["securityConfig"] = o.SecurityConfig
	}
	return toSerialize, nil
}

type NullableMediaStreamConfigRequest struct {
	value *MediaStreamConfigRequest
	isSet bool
}

func (v NullableMediaStreamConfigRequest) Get() *MediaStreamConfigRequest {
	return v.value
}

func (v *NullableMediaStreamConfigRequest) Set(val *MediaStreamConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaStreamConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaStreamConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaStreamConfigRequest(val *MediaStreamConfigRequest) *NullableMediaStreamConfigRequest {
	return &NullableMediaStreamConfigRequest{value: val, isSet: true}
}

func (v NullableMediaStreamConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaStreamConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
