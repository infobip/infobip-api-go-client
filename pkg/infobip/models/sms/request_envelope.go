/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RequestEnvelope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestEnvelope{}

// RequestEnvelope struct for RequestEnvelope
type RequestEnvelope struct {
	// An array of message objects of a single message or multiple messages sent under one bulk ID.
	Messages []Message
	Options  *MessageRequestOptions
}

type _RequestEnvelope RequestEnvelope

// NewRequestEnvelope instantiates a new RequestEnvelope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestEnvelope(messages []Message) *RequestEnvelope {
	this := RequestEnvelope{}
	this.Messages = messages
	return &this
}

// NewRequestEnvelopeWithDefaults instantiates a new RequestEnvelope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestEnvelopeWithDefaults() *RequestEnvelope {
	this := RequestEnvelope{}
	return &this
}

// GetMessages returns the Messages field value
func (o *RequestEnvelope) GetMessages() []Message {
	if o == nil {
		var ret []Message
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *RequestEnvelope) GetMessagesOk() ([]Message, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *RequestEnvelope) SetMessages(v []Message) {
	o.Messages = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *RequestEnvelope) GetOptions() MessageRequestOptions {
	if o == nil || IsNil(o.Options) {
		var ret MessageRequestOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestEnvelope) GetOptionsOk() (*MessageRequestOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *RequestEnvelope) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given MessageRequestOptions and assigns it to the Options field.
func (o *RequestEnvelope) SetOptions(v MessageRequestOptions) {
	o.Options = &v
}

func (o RequestEnvelope) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestEnvelope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messages"] = o.Messages
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableRequestEnvelope struct {
	value *RequestEnvelope
	isSet bool
}

func (v NullableRequestEnvelope) Get() *RequestEnvelope {
	return v.value
}

func (v *NullableRequestEnvelope) Set(val *RequestEnvelope) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestEnvelope) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestEnvelope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestEnvelope(val *RequestEnvelope) *NullableRequestEnvelope {
	return &NullableRequestEnvelope{value: val, isSet: true}
}

func (v NullableRequestEnvelope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestEnvelope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
