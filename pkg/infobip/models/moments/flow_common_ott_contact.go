/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowCommonOttContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowCommonOttContact{}

// FlowCommonOttContact A list of person's Kakao Sangdam destinations.
type FlowCommonOttContact struct {
	// Application Id on which the user is subscribed.
	ApplicationId *string
	// Unique user ID for a person.
	UserId *string
	// System data collected from the user's profile.
	SystemData map[string]interface{}
}

// NewFlowCommonOttContact instantiates a new FlowCommonOttContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowCommonOttContact() *FlowCommonOttContact {
	this := FlowCommonOttContact{}
	return &this
}

// NewFlowCommonOttContactWithDefaults instantiates a new FlowCommonOttContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowCommonOttContactWithDefaults() *FlowCommonOttContact {
	this := FlowCommonOttContact{}

	return &this
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *FlowCommonOttContact) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCommonOttContact) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *FlowCommonOttContact) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *FlowCommonOttContact) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *FlowCommonOttContact) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCommonOttContact) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *FlowCommonOttContact) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *FlowCommonOttContact) SetUserId(v string) {
	o.UserId = &v
}

// GetSystemData returns the SystemData field value if set, zero value otherwise.
func (o *FlowCommonOttContact) GetSystemData() map[string]interface{} {
	if o == nil || IsNil(o.SystemData) {
		var ret map[string]interface{}
		return ret
	}
	return o.SystemData
}

// GetSystemDataOk returns a tuple with the SystemData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowCommonOttContact) GetSystemDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SystemData) {
		return map[string]interface{}{}, false
	}
	return o.SystemData, true
}

// HasSystemData returns a boolean if a field has been set.
func (o *FlowCommonOttContact) HasSystemData() bool {
	if o != nil && !IsNil(o.SystemData) {
		return true
	}

	return false
}

// SetSystemData gets a reference to the given map[string]interface{} and assigns it to the SystemData field.
func (o *FlowCommonOttContact) SetSystemData(v map[string]interface{}) {
	o.SystemData = v
}

func (o FlowCommonOttContact) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowCommonOttContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationId) {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.SystemData) {
		toSerialize["systemData"] = o.SystemData
	}
	return toSerialize, nil
}

type NullableFlowCommonOttContact struct {
	value *FlowCommonOttContact
	isSet bool
}

func (v NullableFlowCommonOttContact) Get() *FlowCommonOttContact {
	return v.value
}

func (v *NullableFlowCommonOttContact) Set(val *FlowCommonOttContact) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowCommonOttContact) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowCommonOttContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowCommonOttContact(val *FlowCommonOttContact) *NullableFlowCommonOttContact {
	return &NullableFlowCommonOttContact{value: val, isSet: true}
}

func (v NullableFlowCommonOttContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowCommonOttContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
