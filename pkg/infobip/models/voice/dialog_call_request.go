/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialogCallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialogCallRequest{}

// DialogCallRequest struct for DialogCallRequest
type DialogCallRequest struct {
	Endpoint *CallEndpoint
	// Caller identifier. Must be a number in the [E.164](https://en.wikipedia.org/wiki/E.164) format for calls to `PHONE`, a string for calls to `WEBRTC` or `SIP`, and a Viber Voice number for calls to `VIBER`.
	From string
	// Display name to show when placing calls towards WEBRTC endpoints. Can be any alphanumeric string.
	FromDisplayName *string
	// Time to wait, in seconds, before the called party answers the call.
	ConnectTimeout   *int32
	MachineDetection *MachineDetectionRequest
	// Custom data is used for storing call-specific data defined by the client.
	CustomData *map[string]string
}

type _DialogCallRequest DialogCallRequest

// NewDialogCallRequest instantiates a new DialogCallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialogCallRequest(from string) *DialogCallRequest {
	this := DialogCallRequest{}
	this.From = from
	return &this
}

// NewDialogCallRequestWithDefaults instantiates a new DialogCallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialogCallRequestWithDefaults() *DialogCallRequest {
	this := DialogCallRequest{}

	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *DialogCallRequest) GetEndpoint() CallEndpoint {
	if o == nil || IsNil(o.Endpoint) {
		var ret CallEndpoint
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogCallRequest) GetEndpointOk() (*CallEndpoint, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *DialogCallRequest) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given CallEndpoint and assigns it to the Endpoint field.
func (o *DialogCallRequest) SetEndpoint(v CallEndpoint) {
	o.Endpoint = &v
}

// GetFrom returns the From field value
func (o *DialogCallRequest) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *DialogCallRequest) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *DialogCallRequest) SetFrom(v string) {
	o.From = v
}

// GetFromDisplayName returns the FromDisplayName field value if set, zero value otherwise.
func (o *DialogCallRequest) GetFromDisplayName() string {
	if o == nil || IsNil(o.FromDisplayName) {
		var ret string
		return ret
	}
	return *o.FromDisplayName
}

// GetFromDisplayNameOk returns a tuple with the FromDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogCallRequest) GetFromDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.FromDisplayName) {
		return nil, false
	}
	return o.FromDisplayName, true
}

// HasFromDisplayName returns a boolean if a field has been set.
func (o *DialogCallRequest) HasFromDisplayName() bool {
	if o != nil && !IsNil(o.FromDisplayName) {
		return true
	}

	return false
}

// SetFromDisplayName gets a reference to the given string and assigns it to the FromDisplayName field.
func (o *DialogCallRequest) SetFromDisplayName(v string) {
	o.FromDisplayName = &v
}

// GetConnectTimeout returns the ConnectTimeout field value if set, zero value otherwise.
func (o *DialogCallRequest) GetConnectTimeout() int32 {
	if o == nil || IsNil(o.ConnectTimeout) {
		var ret int32
		return ret
	}
	return *o.ConnectTimeout
}

// GetConnectTimeoutOk returns a tuple with the ConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogCallRequest) GetConnectTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectTimeout) {
		return nil, false
	}
	return o.ConnectTimeout, true
}

// HasConnectTimeout returns a boolean if a field has been set.
func (o *DialogCallRequest) HasConnectTimeout() bool {
	if o != nil && !IsNil(o.ConnectTimeout) {
		return true
	}

	return false
}

// SetConnectTimeout gets a reference to the given int32 and assigns it to the ConnectTimeout field.
func (o *DialogCallRequest) SetConnectTimeout(v int32) {
	o.ConnectTimeout = &v
}

// GetMachineDetection returns the MachineDetection field value if set, zero value otherwise.
func (o *DialogCallRequest) GetMachineDetection() MachineDetectionRequest {
	if o == nil || IsNil(o.MachineDetection) {
		var ret MachineDetectionRequest
		return ret
	}
	return *o.MachineDetection
}

// GetMachineDetectionOk returns a tuple with the MachineDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogCallRequest) GetMachineDetectionOk() (*MachineDetectionRequest, bool) {
	if o == nil || IsNil(o.MachineDetection) {
		return nil, false
	}
	return o.MachineDetection, true
}

// HasMachineDetection returns a boolean if a field has been set.
func (o *DialogCallRequest) HasMachineDetection() bool {
	if o != nil && !IsNil(o.MachineDetection) {
		return true
	}

	return false
}

// SetMachineDetection gets a reference to the given MachineDetectionRequest and assigns it to the MachineDetection field.
func (o *DialogCallRequest) SetMachineDetection(v MachineDetectionRequest) {
	o.MachineDetection = &v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *DialogCallRequest) GetCustomData() map[string]string {
	if o == nil || IsNil(o.CustomData) {
		var ret map[string]string
		return ret
	}
	return *o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogCallRequest) GetCustomDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomData) {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *DialogCallRequest) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]string and assigns it to the CustomData field.
func (o *DialogCallRequest) SetCustomData(v map[string]string) {
	o.CustomData = &v
}

func (o DialogCallRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialogCallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	toSerialize["from"] = o.From
	if !IsNil(o.FromDisplayName) {
		toSerialize["fromDisplayName"] = o.FromDisplayName
	}
	if !IsNil(o.ConnectTimeout) {
		toSerialize["connectTimeout"] = o.ConnectTimeout
	}
	if !IsNil(o.MachineDetection) {
		toSerialize["machineDetection"] = o.MachineDetection
	}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	return toSerialize, nil
}

type NullableDialogCallRequest struct {
	value *DialogCallRequest
	isSet bool
}

func (v NullableDialogCallRequest) Get() *DialogCallRequest {
	return v.value
}

func (v *NullableDialogCallRequest) Set(val *DialogCallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDialogCallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDialogCallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialogCallRequest(val *DialogCallRequest) *NullableDialogCallRequest {
	return &NullableDialogCallRequest{value: val, isSet: true}
}

func (v NullableDialogCallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialogCallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
