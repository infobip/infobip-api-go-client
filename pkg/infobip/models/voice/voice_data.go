/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the VoiceData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceData{}

// VoiceData Fields representing details specific for voice messages.
type VoiceData struct {
	// Name of the Infobip Voice service or feature.
	Feature *string
	// Date and time when the voice message was established and started ringing. Has the following format: yyyy-MM-dd'T'HH:mm:ss.SSSZ.
	StartTime *string
	// Date and time when the voice message was answered. Has the following format: yyyy-MM-dd'T'HH:mm:ss.SSSZ.
	AnswerTime *string
	// Date and time when the voice message was ended. Has the following format: yyyy-MM-dd'T'HH:mm:ss.SSSZ.
	EndTime *string
	// Duration of the voice message, in seconds.
	Duration *int32
	// Charged duration of the voice message, in seconds.
	ChargedDuration *int32
	// Duration of the voice message audio file, in seconds.
	FileDuration *float64
	// DTMF code entered by user. Can be empty string, if user did not press anything, or `null` in case of IVR if user did not participate in Collect action.
	DtmfCodes *string
	Ivr       *IvrData
}

// NewVoiceData instantiates a new VoiceData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewVoiceData() *VoiceData {
	this := VoiceData{}
	return &this
}

// NewVoiceDataWithDefaults instantiates a new VoiceData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceDataWithDefaults() *VoiceData {
	this := VoiceData{}

	return &this
}

// GetFeature returns the Feature field value if set, zero value otherwise.
func (o *VoiceData) GetFeature() string {
	if o == nil || IsNil(o.Feature) {
		var ret string
		return ret
	}
	return *o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetFeatureOk() (*string, bool) {
	if o == nil || IsNil(o.Feature) {
		return nil, false
	}
	return o.Feature, true
}

// HasFeature returns a boolean if a field has been set.
func (o *VoiceData) HasFeature() bool {
	if o != nil && !IsNil(o.Feature) {
		return true
	}

	return false
}

// SetFeature gets a reference to the given string and assigns it to the Feature field.
func (o *VoiceData) SetFeature(v string) {
	o.Feature = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *VoiceData) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *VoiceData) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *VoiceData) SetStartTime(v string) {
	o.StartTime = &v
}

// GetAnswerTime returns the AnswerTime field value if set, zero value otherwise.
func (o *VoiceData) GetAnswerTime() string {
	if o == nil || IsNil(o.AnswerTime) {
		var ret string
		return ret
	}
	return *o.AnswerTime
}

// GetAnswerTimeOk returns a tuple with the AnswerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetAnswerTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AnswerTime) {
		return nil, false
	}
	return o.AnswerTime, true
}

// HasAnswerTime returns a boolean if a field has been set.
func (o *VoiceData) HasAnswerTime() bool {
	if o != nil && !IsNil(o.AnswerTime) {
		return true
	}

	return false
}

// SetAnswerTime gets a reference to the given string and assigns it to the AnswerTime field.
func (o *VoiceData) SetAnswerTime(v string) {
	o.AnswerTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *VoiceData) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *VoiceData) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *VoiceData) SetEndTime(v string) {
	o.EndTime = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *VoiceData) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *VoiceData) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *VoiceData) SetDuration(v int32) {
	o.Duration = &v
}

// GetChargedDuration returns the ChargedDuration field value if set, zero value otherwise.
func (o *VoiceData) GetChargedDuration() int32 {
	if o == nil || IsNil(o.ChargedDuration) {
		var ret int32
		return ret
	}
	return *o.ChargedDuration
}

// GetChargedDurationOk returns a tuple with the ChargedDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetChargedDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.ChargedDuration) {
		return nil, false
	}
	return o.ChargedDuration, true
}

// HasChargedDuration returns a boolean if a field has been set.
func (o *VoiceData) HasChargedDuration() bool {
	if o != nil && !IsNil(o.ChargedDuration) {
		return true
	}

	return false
}

// SetChargedDuration gets a reference to the given int32 and assigns it to the ChargedDuration field.
func (o *VoiceData) SetChargedDuration(v int32) {
	o.ChargedDuration = &v
}

// GetFileDuration returns the FileDuration field value if set, zero value otherwise.
func (o *VoiceData) GetFileDuration() float64 {
	if o == nil || IsNil(o.FileDuration) {
		var ret float64
		return ret
	}
	return *o.FileDuration
}

// GetFileDurationOk returns a tuple with the FileDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetFileDurationOk() (*float64, bool) {
	if o == nil || IsNil(o.FileDuration) {
		return nil, false
	}
	return o.FileDuration, true
}

// HasFileDuration returns a boolean if a field has been set.
func (o *VoiceData) HasFileDuration() bool {
	if o != nil && !IsNil(o.FileDuration) {
		return true
	}

	return false
}

// SetFileDuration gets a reference to the given float64 and assigns it to the FileDuration field.
func (o *VoiceData) SetFileDuration(v float64) {
	o.FileDuration = &v
}

// GetDtmfCodes returns the DtmfCodes field value if set, zero value otherwise.
func (o *VoiceData) GetDtmfCodes() string {
	if o == nil || IsNil(o.DtmfCodes) {
		var ret string
		return ret
	}
	return *o.DtmfCodes
}

// GetDtmfCodesOk returns a tuple with the DtmfCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetDtmfCodesOk() (*string, bool) {
	if o == nil || IsNil(o.DtmfCodes) {
		return nil, false
	}
	return o.DtmfCodes, true
}

// HasDtmfCodes returns a boolean if a field has been set.
func (o *VoiceData) HasDtmfCodes() bool {
	if o != nil && !IsNil(o.DtmfCodes) {
		return true
	}

	return false
}

// SetDtmfCodes gets a reference to the given string and assigns it to the DtmfCodes field.
func (o *VoiceData) SetDtmfCodes(v string) {
	o.DtmfCodes = &v
}

// GetIvr returns the Ivr field value if set, zero value otherwise.
func (o *VoiceData) GetIvr() IvrData {
	if o == nil || IsNil(o.Ivr) {
		var ret IvrData
		return ret
	}
	return *o.Ivr
}

// GetIvrOk returns a tuple with the Ivr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceData) GetIvrOk() (*IvrData, bool) {
	if o == nil || IsNil(o.Ivr) {
		return nil, false
	}
	return o.Ivr, true
}

// HasIvr returns a boolean if a field has been set.
func (o *VoiceData) HasIvr() bool {
	if o != nil && !IsNil(o.Ivr) {
		return true
	}

	return false
}

// SetIvr gets a reference to the given IvrData and assigns it to the Ivr field.
func (o *VoiceData) SetIvr(v IvrData) {
	o.Ivr = &v
}

func (o VoiceData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feature) {
		toSerialize["feature"] = o.Feature
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.AnswerTime) {
		toSerialize["answerTime"] = o.AnswerTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.ChargedDuration) {
		toSerialize["chargedDuration"] = o.ChargedDuration
	}
	if !IsNil(o.FileDuration) {
		toSerialize["fileDuration"] = o.FileDuration
	}
	if !IsNil(o.DtmfCodes) {
		toSerialize["dtmfCodes"] = o.DtmfCodes
	}
	if !IsNil(o.Ivr) {
		toSerialize["ivr"] = o.Ivr
	}
	return toSerialize, nil
}

type NullableVoiceData struct {
	value *VoiceData
	isSet bool
}

func (v NullableVoiceData) Get() *VoiceData {
	return v.value
}

func (v *NullableVoiceData) Set(val *VoiceData) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceData) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceData(val *VoiceData) *NullableVoiceData {
	return &NullableVoiceData{value: val, isSet: true}
}

func (v NullableVoiceData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
