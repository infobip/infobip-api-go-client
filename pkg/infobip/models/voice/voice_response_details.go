/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the VoiceResponseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceResponseDetails{}

// VoiceResponseDetails Array of sent messages, one object per every message.
type VoiceResponseDetails struct {
	// The message destination address.
	To     *string
	Status *SingleMessageStatus
	// The ID that uniquely identifies the message sent.
	MessageId *string
}

// NewVoiceResponseDetails instantiates a new VoiceResponseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewVoiceResponseDetails() *VoiceResponseDetails {
	this := VoiceResponseDetails{}
	return &this
}

// NewVoiceResponseDetailsWithDefaults instantiates a new VoiceResponseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceResponseDetailsWithDefaults() *VoiceResponseDetails {
	this := VoiceResponseDetails{}

	return &this
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *VoiceResponseDetails) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceResponseDetails) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *VoiceResponseDetails) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *VoiceResponseDetails) SetTo(v string) {
	o.To = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VoiceResponseDetails) GetStatus() SingleMessageStatus {
	if o == nil || IsNil(o.Status) {
		var ret SingleMessageStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceResponseDetails) GetStatusOk() (*SingleMessageStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VoiceResponseDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SingleMessageStatus and assigns it to the Status field.
func (o *VoiceResponseDetails) SetStatus(v SingleMessageStatus) {
	o.Status = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *VoiceResponseDetails) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceResponseDetails) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *VoiceResponseDetails) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *VoiceResponseDetails) SetMessageId(v string) {
	o.MessageId = &v
}

func (o VoiceResponseDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceResponseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	return toSerialize, nil
}

type NullableVoiceResponseDetails struct {
	value *VoiceResponseDetails
	isSet bool
}

func (v NullableVoiceResponseDetails) Get() *VoiceResponseDetails {
	return v.value
}

func (v *NullableVoiceResponseDetails) Set(val *VoiceResponseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceResponseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceResponseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceResponseDetails(val *VoiceResponseDetails) *NullableVoiceResponseDetails {
	return &NullableVoiceResponseDetails{value: val, isSet: true}
}

func (v NullableVoiceResponseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceResponseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
