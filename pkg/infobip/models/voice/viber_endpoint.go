/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ViberEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViberEndpoint{}

// ViberEndpoint struct for ViberEndpoint
type ViberEndpoint struct {
	Type CallEndpointType
	// Phone number in the [E.164](https://en.wikipedia.org/wiki/E.164) format.
	PhoneNumber string
}

type _ViberEndpoint ViberEndpoint

// NewViberEndpoint instantiates a new ViberEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViberEndpoint(phoneNumber string) *ViberEndpoint {
	this := ViberEndpoint{}
	this.Type = "VIBER"
	this.PhoneNumber = phoneNumber
	return &this
}

// NewViberEndpointWithDefaults instantiates a new ViberEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViberEndpointWithDefaults() *ViberEndpoint {
	this := ViberEndpoint{}
	this.Type = "VIBER"
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *ViberEndpoint) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *ViberEndpoint) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *ViberEndpoint) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

func (o ViberEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViberEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["phoneNumber"] = o.PhoneNumber
	return toSerialize, nil
}

type NullableViberEndpoint struct {
	value *ViberEndpoint
	isSet bool
}

func (v NullableViberEndpoint) Get() *ViberEndpoint {
	return v.value
}

func (v *NullableViberEndpoint) Set(val *ViberEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableViberEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableViberEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViberEndpoint(val *ViberEndpoint) *NullableViberEndpoint {
	return &NullableViberEndpoint{value: val, isSet: true}
}

func (v NullableViberEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViberEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
