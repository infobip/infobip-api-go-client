/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the TemplateMultiProductButtonSection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateMultiProductButtonSection{}

// TemplateMultiProductButtonSection An array of multi product sections.
type TemplateMultiProductButtonSection struct {
	// Title of the section.
	Title string
	// An array of product-unique identifiers as defined in the catalog. If product retailer ID doesn't exist in your catalog, the product won't be displayed.
	ProductIds []string
}

type _TemplateMultiProductButtonSection TemplateMultiProductButtonSection

// NewTemplateMultiProductButtonSection instantiates a new TemplateMultiProductButtonSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateMultiProductButtonSection(title string, productIds []string) *TemplateMultiProductButtonSection {
	this := TemplateMultiProductButtonSection{}
	this.Title = title
	this.ProductIds = productIds
	return &this
}

// NewTemplateMultiProductButtonSectionWithDefaults instantiates a new TemplateMultiProductButtonSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateMultiProductButtonSectionWithDefaults() *TemplateMultiProductButtonSection {
	this := TemplateMultiProductButtonSection{}
	return &this
}

// GetTitle returns the Title field value
func (o *TemplateMultiProductButtonSection) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *TemplateMultiProductButtonSection) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *TemplateMultiProductButtonSection) SetTitle(v string) {
	o.Title = v
}

// GetProductIds returns the ProductIds field value
func (o *TemplateMultiProductButtonSection) GetProductIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProductIds
}

// GetProductIdsOk returns a tuple with the ProductIds field value
// and a boolean to check if the value has been set.
func (o *TemplateMultiProductButtonSection) GetProductIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductIds, true
}

// SetProductIds sets field value
func (o *TemplateMultiProductButtonSection) SetProductIds(v []string) {
	o.ProductIds = v
}

func (o TemplateMultiProductButtonSection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateMultiProductButtonSection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["productIds"] = o.ProductIds
	return toSerialize, nil
}

type NullableTemplateMultiProductButtonSection struct {
	value *TemplateMultiProductButtonSection
	isSet bool
}

func (v NullableTemplateMultiProductButtonSection) Get() *TemplateMultiProductButtonSection {
	return v.value
}

func (v *NullableTemplateMultiProductButtonSection) Set(val *TemplateMultiProductButtonSection) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateMultiProductButtonSection) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateMultiProductButtonSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateMultiProductButtonSection(val *TemplateMultiProductButtonSection) *NullableTemplateMultiProductButtonSection {
	return &NullableTemplateMultiProductButtonSection{value: val, isSet: true}
}

func (v NullableTemplateMultiProductButtonSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateMultiProductButtonSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
