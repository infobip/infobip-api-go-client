/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialOptions{}

// DialOptions struct for DialOptions
type DialOptions struct {
	// must be a valid E164 MSISDN; the parameter can be constructed using variables
	SenderId *string
	// If set, call transfer will be limited by maxCallDuration seconds, must be a positive number, no upper bound.
	MaxCallDuration *int32
}

// NewDialOptions instantiates a new DialOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialOptions() *DialOptions {
	this := DialOptions{}
	return &this
}

// NewDialOptionsWithDefaults instantiates a new DialOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialOptionsWithDefaults() *DialOptions {
	this := DialOptions{}

	return &this
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *DialOptions) GetSenderId() string {
	if o == nil || IsNil(o.SenderId) {
		var ret string
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialOptions) GetSenderIdOk() (*string, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *DialOptions) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given string and assigns it to the SenderId field.
func (o *DialOptions) SetSenderId(v string) {
	o.SenderId = &v
}

// GetMaxCallDuration returns the MaxCallDuration field value if set, zero value otherwise.
func (o *DialOptions) GetMaxCallDuration() int32 {
	if o == nil || IsNil(o.MaxCallDuration) {
		var ret int32
		return ret
	}
	return *o.MaxCallDuration
}

// GetMaxCallDurationOk returns a tuple with the MaxCallDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialOptions) GetMaxCallDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxCallDuration) {
		return nil, false
	}
	return o.MaxCallDuration, true
}

// HasMaxCallDuration returns a boolean if a field has been set.
func (o *DialOptions) HasMaxCallDuration() bool {
	if o != nil && !IsNil(o.MaxCallDuration) {
		return true
	}

	return false
}

// SetMaxCallDuration gets a reference to the given int32 and assigns it to the MaxCallDuration field.
func (o *DialOptions) SetMaxCallDuration(v int32) {
	o.MaxCallDuration = &v
}

func (o DialOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SenderId) {
		toSerialize["senderId"] = o.SenderId
	}
	if !IsNil(o.MaxCallDuration) {
		toSerialize["maxCallDuration"] = o.MaxCallDuration
	}
	return toSerialize, nil
}

type NullableDialOptions struct {
	value *DialOptions
	isSet bool
}

func (v NullableDialOptions) Get() *DialOptions {
	return v.value
}

func (v *NullableDialOptions) Set(val *DialOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDialOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDialOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialOptions(val *DialOptions) *NullableDialOptions {
	return &NullableDialOptions{value: val, isSet: true}
}

func (v NullableDialOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
