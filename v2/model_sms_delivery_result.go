/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsDeliveryResult struct for SmsDeliveryResult
type SmsDeliveryResult struct {
	Results *[]SmsReport `json:"results,omitempty"`
}

// NewSmsDeliveryResult instantiates a new SmsDeliveryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsDeliveryResult() *SmsDeliveryResult {
	this := SmsDeliveryResult{}
	return &this
}

// NewSmsDeliveryResultWithDefaults instantiates a new SmsDeliveryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsDeliveryResultWithDefaults() *SmsDeliveryResult {
	this := SmsDeliveryResult{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *SmsDeliveryResult) GetResults() []SmsReport {
	if o == nil || o.Results == nil {
		var ret []SmsReport
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsDeliveryResult) GetResultsOk() (*[]SmsReport, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *SmsDeliveryResult) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []SmsReport and assigns it to the Results field.
func (o *SmsDeliveryResult) SetResults(v []SmsReport) {
	o.Results = &v
}

func (o SmsDeliveryResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableSmsDeliveryResult struct {
	value *SmsDeliveryResult
	isSet bool
}

func (v NullableSmsDeliveryResult) Get() *SmsDeliveryResult {
	return v.value
}

func (v *NullableSmsDeliveryResult) Set(val *SmsDeliveryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsDeliveryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsDeliveryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsDeliveryResult(val *SmsDeliveryResult) *NullableSmsDeliveryResult {
	return &NullableSmsDeliveryResult{value: val, isSet: true}
}

func (v NullableSmsDeliveryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsDeliveryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
