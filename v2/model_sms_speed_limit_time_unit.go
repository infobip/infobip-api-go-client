/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
	"fmt"
)

// SmsSpeedLimitTimeUnit The time unit to define when setting a messaging speed limit. Defaults to `MINUTE`.
type SmsSpeedLimitTimeUnit string

// List of SmsSpeedLimitTimeUnit
const (
	SMSSPEEDLIMITTIMEUNIT_MINUTE SmsSpeedLimitTimeUnit = "MINUTE"
	SMSSPEEDLIMITTIMEUNIT_HOUR   SmsSpeedLimitTimeUnit = "HOUR"
	SMSSPEEDLIMITTIMEUNIT_DAY    SmsSpeedLimitTimeUnit = "DAY"
)

func (v *SmsSpeedLimitTimeUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SmsSpeedLimitTimeUnit(value)
	for _, existing := range []SmsSpeedLimitTimeUnit{"MINUTE", "HOUR", "DAY"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SmsSpeedLimitTimeUnit", value)
}

// Ptr returns reference to SmsSpeedLimitTimeUnit value
func (v SmsSpeedLimitTimeUnit) Ptr() *SmsSpeedLimitTimeUnit {
	return &v
}

type NullableSmsSpeedLimitTimeUnit struct {
	value *SmsSpeedLimitTimeUnit
	isSet bool
}

func (v NullableSmsSpeedLimitTimeUnit) Get() *SmsSpeedLimitTimeUnit {
	return v.value
}

func (v *NullableSmsSpeedLimitTimeUnit) Set(val *SmsSpeedLimitTimeUnit) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsSpeedLimitTimeUnit) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsSpeedLimitTimeUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsSpeedLimitTimeUnit(val *SmsSpeedLimitTimeUnit) *NullableSmsSpeedLimitTimeUnit {
	return &NullableSmsSpeedLimitTimeUnit{value: val, isSet: true}
}

func (v NullableSmsSpeedLimitTimeUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsSpeedLimitTimeUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
