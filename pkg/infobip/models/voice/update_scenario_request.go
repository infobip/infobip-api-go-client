/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the UpdateScenarioRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateScenarioRequest{}

// UpdateScenarioRequest struct for UpdateScenarioRequest
type UpdateScenarioRequest struct {
	// The name of IVR scenario.
	Name string
	// Description of IVR scenario.
	Description *string
	// Array of IVR actions defining scenario. NOTE: Answering Machine Detection, Call Recording and Speech Recognition (used for Capture action) are add-on features. To enable these add-ons, please contact our [sales](https://www.infobip.com/contact) organisation.
	Script []ScriptInner
}

type _UpdateScenarioRequest UpdateScenarioRequest

// NewUpdateScenarioRequest instantiates a new UpdateScenarioRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewUpdateScenarioRequest(name string, script []ScriptInner) *UpdateScenarioRequest {
	this := UpdateScenarioRequest{}
	this.Name = name
	this.Script = script
	return &this
}

// NewUpdateScenarioRequestWithDefaults instantiates a new UpdateScenarioRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateScenarioRequestWithDefaults() *UpdateScenarioRequest {
	this := UpdateScenarioRequest{}

	return &this
}

// GetName returns the Name field value
func (o *UpdateScenarioRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateScenarioRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateScenarioRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateScenarioRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateScenarioRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateScenarioRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateScenarioRequest) SetDescription(v string) {
	o.Description = &v
}

// GetScript returns the Script field value
func (o *UpdateScenarioRequest) GetScript() []ScriptInner {
	if o == nil {
		var ret []ScriptInner
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *UpdateScenarioRequest) GetScriptOk() ([]ScriptInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Script, true
}

// SetScript sets field value
func (o *UpdateScenarioRequest) SetScript(v []ScriptInner) {
	o.Script = v
}

func (o UpdateScenarioRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateScenarioRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["script"] = o.Script
	return toSerialize, nil
}

type NullableUpdateScenarioRequest struct {
	value *UpdateScenarioRequest
	isSet bool
}

func (v NullableUpdateScenarioRequest) Get() *UpdateScenarioRequest {
	return v.value
}

func (v *NullableUpdateScenarioRequest) Set(val *UpdateScenarioRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateScenarioRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateScenarioRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateScenarioRequest(val *UpdateScenarioRequest) *NullableUpdateScenarioRequest {
	return &NullableUpdateScenarioRequest{value: val, isSet: true}
}

func (v NullableUpdateScenarioRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateScenarioRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
