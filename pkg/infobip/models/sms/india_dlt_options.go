/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the IndiaDltOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndiaDltOptions{}

// IndiaDltOptions Distributed Ledger Technology (DLT) specific parameters required for sending SMS to phone numbers registered in India.
type IndiaDltOptions struct {
	// Registered DLT content template ID which matches message you are sending.
	ContentTemplateId *string
	// Your assigned DLT principal entity ID.
	PrincipalEntityId string
	// Your assigned Telemarketer ID. (required for Aggregators)
	TelemarketerId *string
}

type _IndiaDltOptions IndiaDltOptions

// NewIndiaDltOptions instantiates a new IndiaDltOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewIndiaDltOptions(principalEntityId string) *IndiaDltOptions {
	this := IndiaDltOptions{}
	this.PrincipalEntityId = principalEntityId
	return &this
}

// NewIndiaDltOptionsWithDefaults instantiates a new IndiaDltOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndiaDltOptionsWithDefaults() *IndiaDltOptions {
	this := IndiaDltOptions{}

	return &this
}

// GetContentTemplateId returns the ContentTemplateId field value if set, zero value otherwise.
func (o *IndiaDltOptions) GetContentTemplateId() string {
	if o == nil || IsNil(o.ContentTemplateId) {
		var ret string
		return ret
	}
	return *o.ContentTemplateId
}

// GetContentTemplateIdOk returns a tuple with the ContentTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndiaDltOptions) GetContentTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContentTemplateId) {
		return nil, false
	}
	return o.ContentTemplateId, true
}

// HasContentTemplateId returns a boolean if a field has been set.
func (o *IndiaDltOptions) HasContentTemplateId() bool {
	if o != nil && !IsNil(o.ContentTemplateId) {
		return true
	}

	return false
}

// SetContentTemplateId gets a reference to the given string and assigns it to the ContentTemplateId field.
func (o *IndiaDltOptions) SetContentTemplateId(v string) {
	o.ContentTemplateId = &v
}

// GetPrincipalEntityId returns the PrincipalEntityId field value
func (o *IndiaDltOptions) GetPrincipalEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrincipalEntityId
}

// GetPrincipalEntityIdOk returns a tuple with the PrincipalEntityId field value
// and a boolean to check if the value has been set.
func (o *IndiaDltOptions) GetPrincipalEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrincipalEntityId, true
}

// SetPrincipalEntityId sets field value
func (o *IndiaDltOptions) SetPrincipalEntityId(v string) {
	o.PrincipalEntityId = v
}

// GetTelemarketerId returns the TelemarketerId field value if set, zero value otherwise.
func (o *IndiaDltOptions) GetTelemarketerId() string {
	if o == nil || IsNil(o.TelemarketerId) {
		var ret string
		return ret
	}
	return *o.TelemarketerId
}

// GetTelemarketerIdOk returns a tuple with the TelemarketerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndiaDltOptions) GetTelemarketerIdOk() (*string, bool) {
	if o == nil || IsNil(o.TelemarketerId) {
		return nil, false
	}
	return o.TelemarketerId, true
}

// HasTelemarketerId returns a boolean if a field has been set.
func (o *IndiaDltOptions) HasTelemarketerId() bool {
	if o != nil && !IsNil(o.TelemarketerId) {
		return true
	}

	return false
}

// SetTelemarketerId gets a reference to the given string and assigns it to the TelemarketerId field.
func (o *IndiaDltOptions) SetTelemarketerId(v string) {
	o.TelemarketerId = &v
}

func (o IndiaDltOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndiaDltOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentTemplateId) {
		toSerialize["contentTemplateId"] = o.ContentTemplateId
	}
	toSerialize["principalEntityId"] = o.PrincipalEntityId
	if !IsNil(o.TelemarketerId) {
		toSerialize["telemarketerId"] = o.TelemarketerId
	}
	return toSerialize, nil
}

type NullableIndiaDltOptions struct {
	value *IndiaDltOptions
	isSet bool
}

func (v NullableIndiaDltOptions) Get() *IndiaDltOptions {
	return v.value
}

func (v *NullableIndiaDltOptions) Set(val *IndiaDltOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIndiaDltOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIndiaDltOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndiaDltOptions(val *IndiaDltOptions) *NullableIndiaDltOptions {
	return &NullableIndiaDltOptions{value: val, isSet: true}
}

func (v NullableIndiaDltOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndiaDltOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
