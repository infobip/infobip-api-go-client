/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package email

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DomainInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainInfo{}

// DomainInfo Domain get response.
type DomainInfo struct {
	// Name of the requested domain.
	DomainName string
	DataAccess ApiDomainAccess
	// Read bounces permission.
	ReadBounces bool
	// Create bounces permission.
	CreateBounces bool
	// Delete bounces permission.
	DeleteBounces bool
	// Read complaints permission.
	ReadComplaints bool
	// Create complaints permission.
	CreateComplaints bool
	// Delete complaints permission.
	DeleteComplaints bool
	// Read overquotas permission.
	ReadOverquotas bool
	// Delete overquotas permission.
	DeleteOverquotas bool
}

type _DomainInfo DomainInfo

// NewDomainInfo instantiates a new DomainInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDomainInfo(domainName string, dataAccess ApiDomainAccess, readBounces bool, createBounces bool, deleteBounces bool, readComplaints bool, createComplaints bool, deleteComplaints bool, readOverquotas bool, deleteOverquotas bool) *DomainInfo {
	this := DomainInfo{}
	this.DomainName = domainName
	this.DataAccess = dataAccess
	this.ReadBounces = readBounces
	this.CreateBounces = createBounces
	this.DeleteBounces = deleteBounces
	this.ReadComplaints = readComplaints
	this.CreateComplaints = createComplaints
	this.DeleteComplaints = deleteComplaints
	this.ReadOverquotas = readOverquotas
	this.DeleteOverquotas = deleteOverquotas
	return &this
}

// NewDomainInfoWithDefaults instantiates a new DomainInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainInfoWithDefaults() *DomainInfo {
	this := DomainInfo{}

	return &this
}

// GetDomainName returns the DomainName field value
func (o *DomainInfo) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *DomainInfo) SetDomainName(v string) {
	o.DomainName = v
}

// GetDataAccess returns the DataAccess field value
func (o *DomainInfo) GetDataAccess() ApiDomainAccess {
	if o == nil {
		var ret ApiDomainAccess
		return ret
	}

	return o.DataAccess
}

// GetDataAccessOk returns a tuple with the DataAccess field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetDataAccessOk() (*ApiDomainAccess, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataAccess, true
}

// SetDataAccess sets field value
func (o *DomainInfo) SetDataAccess(v ApiDomainAccess) {
	o.DataAccess = v
}

// GetReadBounces returns the ReadBounces field value
func (o *DomainInfo) GetReadBounces() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadBounces
}

// GetReadBouncesOk returns a tuple with the ReadBounces field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetReadBouncesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadBounces, true
}

// SetReadBounces sets field value
func (o *DomainInfo) SetReadBounces(v bool) {
	o.ReadBounces = v
}

// GetCreateBounces returns the CreateBounces field value
func (o *DomainInfo) GetCreateBounces() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CreateBounces
}

// GetCreateBouncesOk returns a tuple with the CreateBounces field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetCreateBouncesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateBounces, true
}

// SetCreateBounces sets field value
func (o *DomainInfo) SetCreateBounces(v bool) {
	o.CreateBounces = v
}

// GetDeleteBounces returns the DeleteBounces field value
func (o *DomainInfo) GetDeleteBounces() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DeleteBounces
}

// GetDeleteBouncesOk returns a tuple with the DeleteBounces field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetDeleteBouncesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeleteBounces, true
}

// SetDeleteBounces sets field value
func (o *DomainInfo) SetDeleteBounces(v bool) {
	o.DeleteBounces = v
}

// GetReadComplaints returns the ReadComplaints field value
func (o *DomainInfo) GetReadComplaints() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadComplaints
}

// GetReadComplaintsOk returns a tuple with the ReadComplaints field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetReadComplaintsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadComplaints, true
}

// SetReadComplaints sets field value
func (o *DomainInfo) SetReadComplaints(v bool) {
	o.ReadComplaints = v
}

// GetCreateComplaints returns the CreateComplaints field value
func (o *DomainInfo) GetCreateComplaints() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CreateComplaints
}

// GetCreateComplaintsOk returns a tuple with the CreateComplaints field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetCreateComplaintsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateComplaints, true
}

// SetCreateComplaints sets field value
func (o *DomainInfo) SetCreateComplaints(v bool) {
	o.CreateComplaints = v
}

// GetDeleteComplaints returns the DeleteComplaints field value
func (o *DomainInfo) GetDeleteComplaints() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DeleteComplaints
}

// GetDeleteComplaintsOk returns a tuple with the DeleteComplaints field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetDeleteComplaintsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeleteComplaints, true
}

// SetDeleteComplaints sets field value
func (o *DomainInfo) SetDeleteComplaints(v bool) {
	o.DeleteComplaints = v
}

// GetReadOverquotas returns the ReadOverquotas field value
func (o *DomainInfo) GetReadOverquotas() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadOverquotas
}

// GetReadOverquotasOk returns a tuple with the ReadOverquotas field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetReadOverquotasOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadOverquotas, true
}

// SetReadOverquotas sets field value
func (o *DomainInfo) SetReadOverquotas(v bool) {
	o.ReadOverquotas = v
}

// GetDeleteOverquotas returns the DeleteOverquotas field value
func (o *DomainInfo) GetDeleteOverquotas() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DeleteOverquotas
}

// GetDeleteOverquotasOk returns a tuple with the DeleteOverquotas field value
// and a boolean to check if the value has been set.
func (o *DomainInfo) GetDeleteOverquotasOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeleteOverquotas, true
}

// SetDeleteOverquotas sets field value
func (o *DomainInfo) SetDeleteOverquotas(v bool) {
	o.DeleteOverquotas = v
}

func (o DomainInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domainName"] = o.DomainName
	toSerialize["dataAccess"] = o.DataAccess
	toSerialize["readBounces"] = o.ReadBounces
	toSerialize["createBounces"] = o.CreateBounces
	toSerialize["deleteBounces"] = o.DeleteBounces
	toSerialize["readComplaints"] = o.ReadComplaints
	toSerialize["createComplaints"] = o.CreateComplaints
	toSerialize["deleteComplaints"] = o.DeleteComplaints
	toSerialize["readOverquotas"] = o.ReadOverquotas
	toSerialize["deleteOverquotas"] = o.DeleteOverquotas
	return toSerialize, nil
}

type NullableDomainInfo struct {
	value *DomainInfo
	isSet bool
}

func (v NullableDomainInfo) Get() *DomainInfo {
	return v.value
}

func (v *NullableDomainInfo) Set(val *DomainInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainInfo(val *DomainInfo) *NullableDomainInfo {
	return &NullableDomainInfo{value: val, isSet: true}
}

func (v NullableDomainInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
