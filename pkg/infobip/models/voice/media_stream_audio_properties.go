/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MediaStreamAudioProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaStreamAudioProperties{}

// MediaStreamAudioProperties struct for MediaStreamAudioProperties
type MediaStreamAudioProperties struct {
	// Media stream configuration ID.
	MediaStreamConfigId string
	// Indicates whether outbound media should be replaced. The replacement media is received from the url defined in the media stream configuration.
	ReplaceMedia *bool
}

type _MediaStreamAudioProperties MediaStreamAudioProperties

// NewMediaStreamAudioProperties instantiates a new MediaStreamAudioProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewMediaStreamAudioProperties(mediaStreamConfigId string) *MediaStreamAudioProperties {
	this := MediaStreamAudioProperties{}
	this.MediaStreamConfigId = mediaStreamConfigId
	return &this
}

// NewMediaStreamAudioPropertiesWithDefaults instantiates a new MediaStreamAudioProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaStreamAudioPropertiesWithDefaults() *MediaStreamAudioProperties {
	this := MediaStreamAudioProperties{}

	return &this
}

// GetMediaStreamConfigId returns the MediaStreamConfigId field value
func (o *MediaStreamAudioProperties) GetMediaStreamConfigId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaStreamConfigId
}

// GetMediaStreamConfigIdOk returns a tuple with the MediaStreamConfigId field value
// and a boolean to check if the value has been set.
func (o *MediaStreamAudioProperties) GetMediaStreamConfigIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaStreamConfigId, true
}

// SetMediaStreamConfigId sets field value
func (o *MediaStreamAudioProperties) SetMediaStreamConfigId(v string) {
	o.MediaStreamConfigId = v
}

// GetReplaceMedia returns the ReplaceMedia field value if set, zero value otherwise.
func (o *MediaStreamAudioProperties) GetReplaceMedia() bool {
	if o == nil || IsNil(o.ReplaceMedia) {
		var ret bool
		return ret
	}
	return *o.ReplaceMedia
}

// GetReplaceMediaOk returns a tuple with the ReplaceMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaStreamAudioProperties) GetReplaceMediaOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplaceMedia) {
		return nil, false
	}
	return o.ReplaceMedia, true
}

// HasReplaceMedia returns a boolean if a field has been set.
func (o *MediaStreamAudioProperties) HasReplaceMedia() bool {
	if o != nil && !IsNil(o.ReplaceMedia) {
		return true
	}

	return false
}

// SetReplaceMedia gets a reference to the given bool and assigns it to the ReplaceMedia field.
func (o *MediaStreamAudioProperties) SetReplaceMedia(v bool) {
	o.ReplaceMedia = &v
}

func (o MediaStreamAudioProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaStreamAudioProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mediaStreamConfigId"] = o.MediaStreamConfigId
	if !IsNil(o.ReplaceMedia) {
		toSerialize["replaceMedia"] = o.ReplaceMedia
	}
	return toSerialize, nil
}

type NullableMediaStreamAudioProperties struct {
	value *MediaStreamAudioProperties
	isSet bool
}

func (v NullableMediaStreamAudioProperties) Get() *MediaStreamAudioProperties {
	return v.value
}

func (v *NullableMediaStreamAudioProperties) Set(val *MediaStreamAudioProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaStreamAudioProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaStreamAudioProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaStreamAudioProperties(val *MediaStreamAudioProperties) *NullableMediaStreamAudioProperties {
	return &NullableMediaStreamAudioProperties{value: val, isSet: true}
}

func (v NullableMediaStreamAudioProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaStreamAudioProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
