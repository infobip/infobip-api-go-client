/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"
	"fmt"
)

// MessageCardOptionsHeightEnum Height of the card media.
type MessageCardOptionsHeightEnum string

// List of MessageCardOptionsHeightEnum
const (
	MESSAGECARDOPTIONSHEIGHTENUM_SHORT  MessageCardOptionsHeightEnum = "SHORT"
	MESSAGECARDOPTIONSHEIGHTENUM_MEDIUM MessageCardOptionsHeightEnum = "MEDIUM"
	MESSAGECARDOPTIONSHEIGHTENUM_TALL   MessageCardOptionsHeightEnum = "TALL"
)

// All allowed values of MessageCardOptionsHeightEnum enum
var AllowedMessageCardOptionsHeightEnumEnumValues = []MessageCardOptionsHeightEnum{
	"SHORT",
	"MEDIUM",
	"TALL",
}

func (v *MessageCardOptionsHeightEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MessageCardOptionsHeightEnum(value)
	for _, existing := range AllowedMessageCardOptionsHeightEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MessageCardOptionsHeightEnum", value)
}

// NewMessageCardOptionsHeightEnumFromValue returns a pointer to a valid MessageCardOptionsHeightEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMessageCardOptionsHeightEnumFromValue(v string) (*MessageCardOptionsHeightEnum, error) {
	ev := MessageCardOptionsHeightEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MessageCardOptionsHeightEnum: valid values are %v", v, AllowedMessageCardOptionsHeightEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MessageCardOptionsHeightEnum) IsValid() bool {
	for _, existing := range AllowedMessageCardOptionsHeightEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MessageCardOptionsHeightEnum value
func (v MessageCardOptionsHeightEnum) Ptr() *MessageCardOptionsHeightEnum {
	return &v
}

type NullableMessageCardOptionsHeightEnum struct {
	value *MessageCardOptionsHeightEnum
	isSet bool
}

func (v NullableMessageCardOptionsHeightEnum) Get() *MessageCardOptionsHeightEnum {
	return v.value
}

func (v *NullableMessageCardOptionsHeightEnum) Set(val *MessageCardOptionsHeightEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageCardOptionsHeightEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageCardOptionsHeightEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageCardOptionsHeightEnum(val *MessageCardOptionsHeightEnum) *NullableMessageCardOptionsHeightEnum {
	return &NullableMessageCardOptionsHeightEnum{value: val, isSet: true}
}

func (v NullableMessageCardOptionsHeightEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageCardOptionsHeightEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
