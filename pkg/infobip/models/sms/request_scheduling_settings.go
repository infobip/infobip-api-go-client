/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the RequestSchedulingSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestSchedulingSettings{}

// RequestSchedulingSettings Options for scheduling a message.
type RequestSchedulingSettings struct {
	// Unique ID assigned to the request if messaging multiple recipients or sending multiple messages via a single API request. If not provided, it will be auto-generated and returned in the API response.
	BulkId *string
	// Date and time when the message is to be sent. Used for scheduled messages. Has the following format: `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, and can only be scheduled for no later than 180 days in advance.
	SendAt            *Time
	SendingSpeedLimit *SendingSpeedLimit
}

// NewRequestSchedulingSettings instantiates a new RequestSchedulingSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestSchedulingSettings() *RequestSchedulingSettings {
	this := RequestSchedulingSettings{}
	return &this
}

// NewRequestSchedulingSettingsWithDefaults instantiates a new RequestSchedulingSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestSchedulingSettingsWithDefaults() *RequestSchedulingSettings {
	this := RequestSchedulingSettings{}
	return &this
}

// GetBulkId returns the BulkId field value if set, zero value otherwise.
func (o *RequestSchedulingSettings) GetBulkId() string {
	if o == nil || IsNil(o.BulkId) {
		var ret string
		return ret
	}
	return *o.BulkId
}

// GetBulkIdOk returns a tuple with the BulkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestSchedulingSettings) GetBulkIdOk() (*string, bool) {
	if o == nil || IsNil(o.BulkId) {
		return nil, false
	}
	return o.BulkId, true
}

// HasBulkId returns a boolean if a field has been set.
func (o *RequestSchedulingSettings) HasBulkId() bool {
	if o != nil && !IsNil(o.BulkId) {
		return true
	}

	return false
}

// SetBulkId gets a reference to the given string and assigns it to the BulkId field.
func (o *RequestSchedulingSettings) SetBulkId(v string) {
	o.BulkId = &v
}

// GetSendAt returns the SendAt field value if set, zero value otherwise.
func (o *RequestSchedulingSettings) GetSendAt() Time {
	if o == nil || IsNil(o.SendAt) {
		var ret Time
		return ret
	}
	return *o.SendAt
}

// GetSendAtOk returns a tuple with the SendAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestSchedulingSettings) GetSendAtOk() (*Time, bool) {
	if o == nil || IsNil(o.SendAt) {
		return nil, false
	}
	return o.SendAt, true
}

// HasSendAt returns a boolean if a field has been set.
func (o *RequestSchedulingSettings) HasSendAt() bool {
	if o != nil && !IsNil(o.SendAt) {
		return true
	}

	return false
}

// SetSendAt gets a reference to the given Time and assigns it to the SendAt field.
func (o *RequestSchedulingSettings) SetSendAt(v Time) {
	o.SendAt = &v
}

// GetSendingSpeedLimit returns the SendingSpeedLimit field value if set, zero value otherwise.
func (o *RequestSchedulingSettings) GetSendingSpeedLimit() SendingSpeedLimit {
	if o == nil || IsNil(o.SendingSpeedLimit) {
		var ret SendingSpeedLimit
		return ret
	}
	return *o.SendingSpeedLimit
}

// GetSendingSpeedLimitOk returns a tuple with the SendingSpeedLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestSchedulingSettings) GetSendingSpeedLimitOk() (*SendingSpeedLimit, bool) {
	if o == nil || IsNil(o.SendingSpeedLimit) {
		return nil, false
	}
	return o.SendingSpeedLimit, true
}

// HasSendingSpeedLimit returns a boolean if a field has been set.
func (o *RequestSchedulingSettings) HasSendingSpeedLimit() bool {
	if o != nil && !IsNil(o.SendingSpeedLimit) {
		return true
	}

	return false
}

// SetSendingSpeedLimit gets a reference to the given SendingSpeedLimit and assigns it to the SendingSpeedLimit field.
func (o *RequestSchedulingSettings) SetSendingSpeedLimit(v SendingSpeedLimit) {
	o.SendingSpeedLimit = &v
}

func (o RequestSchedulingSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestSchedulingSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BulkId) {
		toSerialize["bulkId"] = o.BulkId
	}
	if !IsNil(o.SendAt) {
		toSerialize["sendAt"] = o.SendAt
	}
	if !IsNil(o.SendingSpeedLimit) {
		toSerialize["sendingSpeedLimit"] = o.SendingSpeedLimit
	}
	return toSerialize, nil
}

type NullableRequestSchedulingSettings struct {
	value *RequestSchedulingSettings
	isSet bool
}

func (v NullableRequestSchedulingSettings) Get() *RequestSchedulingSettings {
	return v.value
}

func (v *NullableRequestSchedulingSettings) Set(val *RequestSchedulingSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestSchedulingSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestSchedulingSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestSchedulingSettings(val *RequestSchedulingSettings) *NullableRequestSchedulingSettings {
	return &NullableRequestSchedulingSettings{value: val, isSet: true}
}

func (v NullableRequestSchedulingSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestSchedulingSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
