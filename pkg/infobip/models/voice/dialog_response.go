/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialogResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialogResponse{}

// DialogResponse struct for DialogResponse
type DialogResponse struct {
	// Unique dialog ID.
	Id *string
	// Calls Configuration ID.
	CallsConfigurationId *string
	Platform             *Platform
	State                *DialogState
	// Date and time for when the dialog has been created.
	StartTime *Time
	// Date and time for when the dialog has been established.
	EstablishTime *Time
	// Date and time for when the dialog has been finished.
	EndTime    *Time
	ParentCall *Call
	ChildCall  *Call
}

// NewDialogResponse instantiates a new DialogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialogResponse() *DialogResponse {
	this := DialogResponse{}
	return &this
}

// NewDialogResponseWithDefaults instantiates a new DialogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialogResponseWithDefaults() *DialogResponse {
	this := DialogResponse{}

	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DialogResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DialogResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DialogResponse) SetId(v string) {
	o.Id = &v
}

// GetCallsConfigurationId returns the CallsConfigurationId field value if set, zero value otherwise.
func (o *DialogResponse) GetCallsConfigurationId() string {
	if o == nil || IsNil(o.CallsConfigurationId) {
		var ret string
		return ret
	}
	return *o.CallsConfigurationId
}

// GetCallsConfigurationIdOk returns a tuple with the CallsConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetCallsConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallsConfigurationId) {
		return nil, false
	}
	return o.CallsConfigurationId, true
}

// HasCallsConfigurationId returns a boolean if a field has been set.
func (o *DialogResponse) HasCallsConfigurationId() bool {
	if o != nil && !IsNil(o.CallsConfigurationId) {
		return true
	}

	return false
}

// SetCallsConfigurationId gets a reference to the given string and assigns it to the CallsConfigurationId field.
func (o *DialogResponse) SetCallsConfigurationId(v string) {
	o.CallsConfigurationId = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *DialogResponse) GetPlatform() Platform {
	if o == nil || IsNil(o.Platform) {
		var ret Platform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetPlatformOk() (*Platform, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *DialogResponse) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given Platform and assigns it to the Platform field.
func (o *DialogResponse) SetPlatform(v Platform) {
	o.Platform = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DialogResponse) GetState() DialogState {
	if o == nil || IsNil(o.State) {
		var ret DialogState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetStateOk() (*DialogState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DialogResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given DialogState and assigns it to the State field.
func (o *DialogResponse) SetState(v DialogState) {
	o.State = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DialogResponse) GetStartTime() Time {
	if o == nil || IsNil(o.StartTime) {
		var ret Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetStartTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DialogResponse) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given Time and assigns it to the StartTime field.
func (o *DialogResponse) SetStartTime(v Time) {
	o.StartTime = &v
}

// GetEstablishTime returns the EstablishTime field value if set, zero value otherwise.
func (o *DialogResponse) GetEstablishTime() Time {
	if o == nil || IsNil(o.EstablishTime) {
		var ret Time
		return ret
	}
	return *o.EstablishTime
}

// GetEstablishTimeOk returns a tuple with the EstablishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetEstablishTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.EstablishTime) {
		return nil, false
	}
	return o.EstablishTime, true
}

// HasEstablishTime returns a boolean if a field has been set.
func (o *DialogResponse) HasEstablishTime() bool {
	if o != nil && !IsNil(o.EstablishTime) {
		return true
	}

	return false
}

// SetEstablishTime gets a reference to the given Time and assigns it to the EstablishTime field.
func (o *DialogResponse) SetEstablishTime(v Time) {
	o.EstablishTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DialogResponse) GetEndTime() Time {
	if o == nil || IsNil(o.EndTime) {
		var ret Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetEndTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DialogResponse) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given Time and assigns it to the EndTime field.
func (o *DialogResponse) SetEndTime(v Time) {
	o.EndTime = &v
}

// GetParentCall returns the ParentCall field value if set, zero value otherwise.
func (o *DialogResponse) GetParentCall() Call {
	if o == nil || IsNil(o.ParentCall) {
		var ret Call
		return ret
	}
	return *o.ParentCall
}

// GetParentCallOk returns a tuple with the ParentCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetParentCallOk() (*Call, bool) {
	if o == nil || IsNil(o.ParentCall) {
		return nil, false
	}
	return o.ParentCall, true
}

// HasParentCall returns a boolean if a field has been set.
func (o *DialogResponse) HasParentCall() bool {
	if o != nil && !IsNil(o.ParentCall) {
		return true
	}

	return false
}

// SetParentCall gets a reference to the given Call and assigns it to the ParentCall field.
func (o *DialogResponse) SetParentCall(v Call) {
	o.ParentCall = &v
}

// GetChildCall returns the ChildCall field value if set, zero value otherwise.
func (o *DialogResponse) GetChildCall() Call {
	if o == nil || IsNil(o.ChildCall) {
		var ret Call
		return ret
	}
	return *o.ChildCall
}

// GetChildCallOk returns a tuple with the ChildCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogResponse) GetChildCallOk() (*Call, bool) {
	if o == nil || IsNil(o.ChildCall) {
		return nil, false
	}
	return o.ChildCall, true
}

// HasChildCall returns a boolean if a field has been set.
func (o *DialogResponse) HasChildCall() bool {
	if o != nil && !IsNil(o.ChildCall) {
		return true
	}

	return false
}

// SetChildCall gets a reference to the given Call and assigns it to the ChildCall field.
func (o *DialogResponse) SetChildCall(v Call) {
	o.ChildCall = &v
}

func (o DialogResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialogResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CallsConfigurationId) {
		toSerialize["callsConfigurationId"] = o.CallsConfigurationId
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EstablishTime) {
		toSerialize["establishTime"] = o.EstablishTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.ParentCall) {
		toSerialize["parentCall"] = o.ParentCall
	}
	if !IsNil(o.ChildCall) {
		toSerialize["childCall"] = o.ChildCall
	}
	return toSerialize, nil
}

type NullableDialogResponse struct {
	value *DialogResponse
	isSet bool
}

func (v NullableDialogResponse) Get() *DialogResponse {
	return v.value
}

func (v *NullableDialogResponse) Set(val *DialogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDialogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDialogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialogResponse(val *DialogResponse) *NullableDialogResponse {
	return &NullableDialogResponse{value: val, isSet: true}
}

func (v NullableDialogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
