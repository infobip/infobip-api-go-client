/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowPersonUniqueField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowPersonUniqueField{}

// FlowPersonUniqueField Unique identifier of the participant.
type FlowPersonUniqueField struct {
	// Unique ID for a person
	Identifier string
	Type       FlowPersonUniqueFieldType
	// Sender or application ID.`sender` is required for all identifier types except `PHONE`, `EMAIL`
	Sender *string
}

type _FlowPersonUniqueField FlowPersonUniqueField

// NewFlowPersonUniqueField instantiates a new FlowPersonUniqueField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowPersonUniqueField(identifier string, type_ FlowPersonUniqueFieldType) *FlowPersonUniqueField {
	this := FlowPersonUniqueField{}
	this.Identifier = identifier
	this.Type = type_
	return &this
}

// NewFlowPersonUniqueFieldWithDefaults instantiates a new FlowPersonUniqueField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowPersonUniqueFieldWithDefaults() *FlowPersonUniqueField {
	this := FlowPersonUniqueField{}

	return &this
}

// GetIdentifier returns the Identifier field value
func (o *FlowPersonUniqueField) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *FlowPersonUniqueField) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *FlowPersonUniqueField) SetIdentifier(v string) {
	o.Identifier = v
}

// GetType returns the Type field value
func (o *FlowPersonUniqueField) GetType() FlowPersonUniqueFieldType {
	if o == nil {
		var ret FlowPersonUniqueFieldType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FlowPersonUniqueField) GetTypeOk() (*FlowPersonUniqueFieldType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FlowPersonUniqueField) SetType(v FlowPersonUniqueFieldType) {
	o.Type = v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *FlowPersonUniqueField) GetSender() string {
	if o == nil || IsNil(o.Sender) {
		var ret string
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonUniqueField) GetSenderOk() (*string, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *FlowPersonUniqueField) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given string and assigns it to the Sender field.
func (o *FlowPersonUniqueField) SetSender(v string) {
	o.Sender = &v
}

func (o FlowPersonUniqueField) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowPersonUniqueField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["type"] = o.Type
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	return toSerialize, nil
}

type NullableFlowPersonUniqueField struct {
	value *FlowPersonUniqueField
	isSet bool
}

func (v NullableFlowPersonUniqueField) Get() *FlowPersonUniqueField {
	return v.value
}

func (v *NullableFlowPersonUniqueField) Set(val *FlowPersonUniqueField) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowPersonUniqueField) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowPersonUniqueField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowPersonUniqueField(val *FlowPersonUniqueField) *NullableFlowPersonUniqueField {
	return &NullableFlowPersonUniqueField{value: val, isSet: true}
}

func (v NullableFlowPersonUniqueField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowPersonUniqueField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
