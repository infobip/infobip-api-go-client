/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SbcHosts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SbcHosts{}

// SbcHosts Infobip SBC (Session Border Controller) hosts.
type SbcHosts struct {
	Primary []string
	Backup  []string
}

// NewSbcHosts instantiates a new SbcHosts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewSbcHosts() *SbcHosts {
	this := SbcHosts{}
	return &this
}

// NewSbcHostsWithDefaults instantiates a new SbcHosts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSbcHostsWithDefaults() *SbcHosts {
	this := SbcHosts{}

	return &this
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *SbcHosts) GetPrimary() []string {
	if o == nil || IsNil(o.Primary) {
		var ret []string
		return ret
	}
	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbcHosts) GetPrimaryOk() ([]string, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *SbcHosts) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given []string and assigns it to the Primary field.
func (o *SbcHosts) SetPrimary(v []string) {
	o.Primary = v
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *SbcHosts) GetBackup() []string {
	if o == nil || IsNil(o.Backup) {
		var ret []string
		return ret
	}
	return o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbcHosts) GetBackupOk() ([]string, bool) {
	if o == nil || IsNil(o.Backup) {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *SbcHosts) HasBackup() bool {
	if o != nil && !IsNil(o.Backup) {
		return true
	}

	return false
}

// SetBackup gets a reference to the given []string and assigns it to the Backup field.
func (o *SbcHosts) SetBackup(v []string) {
	o.Backup = v
}

func (o SbcHosts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SbcHosts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	if !IsNil(o.Backup) {
		toSerialize["backup"] = o.Backup
	}
	return toSerialize, nil
}

type NullableSbcHosts struct {
	value *SbcHosts
	isSet bool
}

func (v NullableSbcHosts) Get() *SbcHosts {
	return v.value
}

func (v *NullableSbcHosts) Set(val *SbcHosts) {
	v.value = val
	v.isSet = true
}

func (v NullableSbcHosts) IsSet() bool {
	return v.isSet
}

func (v *NullableSbcHosts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSbcHosts(val *SbcHosts) *NullableSbcHosts {
	return &NullableSbcHosts{value: val, isSet: true}
}

func (v NullableSbcHosts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSbcHosts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
