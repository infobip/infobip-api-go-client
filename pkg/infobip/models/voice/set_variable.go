/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the SetVariable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetVariable{}

// SetVariable Set variable action makes it possible to set a variable defined inside the IVR scenario to a specified value.
type SetVariable struct {
	// Name of a variable.
	SetVariable string
	// Value to which the variable should be set.
	Value string
}

type _SetVariable SetVariable

// NewSetVariable instantiates a new SetVariable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewSetVariable(setVariable string, value string) *SetVariable {
	this := SetVariable{}
	this.SetVariable = setVariable
	this.Value = value
	return &this
}

// NewSetVariableWithDefaults instantiates a new SetVariable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetVariableWithDefaults() *SetVariable {
	this := SetVariable{}

	return &this
}

// GetSetVariable returns the SetVariable field value
func (o *SetVariable) GetSetVariable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SetVariable
}

// GetSetVariableOk returns a tuple with the SetVariable field value
// and a boolean to check if the value has been set.
func (o *SetVariable) GetSetVariableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SetVariable, true
}

// SetSetVariable sets field value
func (o *SetVariable) SetSetVariable(v string) {
	o.SetVariable = v
}

// GetValue returns the Value field value
func (o *SetVariable) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SetVariable) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SetVariable) SetValue(v string) {
	o.Value = v
}

func (o SetVariable) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetVariable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["setVariable"] = o.SetVariable
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableSetVariable struct {
	value *SetVariable
	isSet bool
}

func (v NullableSetVariable) Get() *SetVariable {
	return v.value
}

func (v *NullableSetVariable) Set(val *SetVariable) {
	v.value = val
	v.isSet = true
}

func (v NullableSetVariable) IsSet() bool {
	return v.isSet
}

func (v *NullableSetVariable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetVariable(val *SetVariable) *NullableSetVariable {
	return &NullableSetVariable{value: val, isSet: true}
}

func (v NullableSetVariable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetVariable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
