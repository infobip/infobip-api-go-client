/*
 * Infobip Client API Libraries OpenAPI Specification
 *
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infobip

import (
	"encoding/json"
)

// SmsPreviewResponse struct for SmsPreviewResponse
type SmsPreviewResponse struct {
	// Message content supplied in the request.
	OriginalText *string `json:"originalText,omitempty"`
	// Allows for previewing the original message content once additional language configuration has been applied to it.
	Previews *[]SmsPreview `json:"previews,omitempty"`
}

// NewSmsPreviewResponse instantiates a new SmsPreviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsPreviewResponse() *SmsPreviewResponse {
	this := SmsPreviewResponse{}
	return &this
}

// NewSmsPreviewResponseWithDefaults instantiates a new SmsPreviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsPreviewResponseWithDefaults() *SmsPreviewResponse {
	this := SmsPreviewResponse{}
	return &this
}

// GetOriginalText returns the OriginalText field value if set, zero value otherwise.
func (o *SmsPreviewResponse) GetOriginalText() string {
	if o == nil || o.OriginalText == nil {
		var ret string
		return ret
	}
	return *o.OriginalText
}

// GetOriginalTextOk returns a tuple with the OriginalText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsPreviewResponse) GetOriginalTextOk() (*string, bool) {
	if o == nil || o.OriginalText == nil {
		return nil, false
	}
	return o.OriginalText, true
}

// HasOriginalText returns a boolean if a field has been set.
func (o *SmsPreviewResponse) HasOriginalText() bool {
	if o != nil && o.OriginalText != nil {
		return true
	}

	return false
}

// SetOriginalText gets a reference to the given string and assigns it to the OriginalText field.
func (o *SmsPreviewResponse) SetOriginalText(v string) {
	o.OriginalText = &v
}

// GetPreviews returns the Previews field value if set, zero value otherwise.
func (o *SmsPreviewResponse) GetPreviews() []SmsPreview {
	if o == nil || o.Previews == nil {
		var ret []SmsPreview
		return ret
	}
	return *o.Previews
}

// GetPreviewsOk returns a tuple with the Previews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsPreviewResponse) GetPreviewsOk() (*[]SmsPreview, bool) {
	if o == nil || o.Previews == nil {
		return nil, false
	}
	return o.Previews, true
}

// HasPreviews returns a boolean if a field has been set.
func (o *SmsPreviewResponse) HasPreviews() bool {
	if o != nil && o.Previews != nil {
		return true
	}

	return false
}

// SetPreviews gets a reference to the given []SmsPreview and assigns it to the Previews field.
func (o *SmsPreviewResponse) SetPreviews(v []SmsPreview) {
	o.Previews = &v
}

func (o SmsPreviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OriginalText != nil {
		toSerialize["originalText"] = o.OriginalText
	}
	if o.Previews != nil {
		toSerialize["previews"] = o.Previews
	}
	return json.Marshal(toSerialize)
}

type NullableSmsPreviewResponse struct {
	value *SmsPreviewResponse
	isSet bool
}

func (v NullableSmsPreviewResponse) Get() *SmsPreviewResponse {
	return v.value
}

func (v *NullableSmsPreviewResponse) Set(val *SmsPreviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsPreviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsPreviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsPreviewResponse(val *SmsPreviewResponse) *NullableSmsPreviewResponse {
	return &NullableSmsPreviewResponse{value: val, isSet: true}
}

func (v NullableSmsPreviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsPreviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
