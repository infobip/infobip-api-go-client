/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the DialogRecordingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DialogRecordingResponse{}

// DialogRecordingResponse struct for DialogRecordingResponse
type DialogRecordingResponse struct {
	// Unique dialog ID.
	DialogId *string
	// Calls Configuration ID.
	CallsConfigurationId *string
	Platform             *Platform
	// File(s) with a recording of both dialog participants.
	ComposedFiles []RecordingFile
	// File(s) with a recording of one dialog participant.
	CallRecordings []Recording
	// Date and time when the (first) recording started.
	StartTime *Time
	// Date and time when the (last) recording ended.
	EndTime *Time
}

// NewDialogRecordingResponse instantiates a new DialogRecordingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewDialogRecordingResponse() *DialogRecordingResponse {
	this := DialogRecordingResponse{}
	return &this
}

// NewDialogRecordingResponseWithDefaults instantiates a new DialogRecordingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDialogRecordingResponseWithDefaults() *DialogRecordingResponse {
	this := DialogRecordingResponse{}

	return &this
}

// GetDialogId returns the DialogId field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetDialogId() string {
	if o == nil || IsNil(o.DialogId) {
		var ret string
		return ret
	}
	return *o.DialogId
}

// GetDialogIdOk returns a tuple with the DialogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetDialogIdOk() (*string, bool) {
	if o == nil || IsNil(o.DialogId) {
		return nil, false
	}
	return o.DialogId, true
}

// HasDialogId returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasDialogId() bool {
	if o != nil && !IsNil(o.DialogId) {
		return true
	}

	return false
}

// SetDialogId gets a reference to the given string and assigns it to the DialogId field.
func (o *DialogRecordingResponse) SetDialogId(v string) {
	o.DialogId = &v
}

// GetCallsConfigurationId returns the CallsConfigurationId field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetCallsConfigurationId() string {
	if o == nil || IsNil(o.CallsConfigurationId) {
		var ret string
		return ret
	}
	return *o.CallsConfigurationId
}

// GetCallsConfigurationIdOk returns a tuple with the CallsConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetCallsConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallsConfigurationId) {
		return nil, false
	}
	return o.CallsConfigurationId, true
}

// HasCallsConfigurationId returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasCallsConfigurationId() bool {
	if o != nil && !IsNil(o.CallsConfigurationId) {
		return true
	}

	return false
}

// SetCallsConfigurationId gets a reference to the given string and assigns it to the CallsConfigurationId field.
func (o *DialogRecordingResponse) SetCallsConfigurationId(v string) {
	o.CallsConfigurationId = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetPlatform() Platform {
	if o == nil || IsNil(o.Platform) {
		var ret Platform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetPlatformOk() (*Platform, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given Platform and assigns it to the Platform field.
func (o *DialogRecordingResponse) SetPlatform(v Platform) {
	o.Platform = &v
}

// GetComposedFiles returns the ComposedFiles field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetComposedFiles() []RecordingFile {
	if o == nil || IsNil(o.ComposedFiles) {
		var ret []RecordingFile
		return ret
	}
	return o.ComposedFiles
}

// GetComposedFilesOk returns a tuple with the ComposedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetComposedFilesOk() ([]RecordingFile, bool) {
	if o == nil || IsNil(o.ComposedFiles) {
		return nil, false
	}
	return o.ComposedFiles, true
}

// HasComposedFiles returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasComposedFiles() bool {
	if o != nil && !IsNil(o.ComposedFiles) {
		return true
	}

	return false
}

// SetComposedFiles gets a reference to the given []RecordingFile and assigns it to the ComposedFiles field.
func (o *DialogRecordingResponse) SetComposedFiles(v []RecordingFile) {
	o.ComposedFiles = v
}

// GetCallRecordings returns the CallRecordings field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetCallRecordings() []Recording {
	if o == nil || IsNil(o.CallRecordings) {
		var ret []Recording
		return ret
	}
	return o.CallRecordings
}

// GetCallRecordingsOk returns a tuple with the CallRecordings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetCallRecordingsOk() ([]Recording, bool) {
	if o == nil || IsNil(o.CallRecordings) {
		return nil, false
	}
	return o.CallRecordings, true
}

// HasCallRecordings returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasCallRecordings() bool {
	if o != nil && !IsNil(o.CallRecordings) {
		return true
	}

	return false
}

// SetCallRecordings gets a reference to the given []Recording and assigns it to the CallRecordings field.
func (o *DialogRecordingResponse) SetCallRecordings(v []Recording) {
	o.CallRecordings = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetStartTime() Time {
	if o == nil || IsNil(o.StartTime) {
		var ret Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetStartTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given Time and assigns it to the StartTime field.
func (o *DialogRecordingResponse) SetStartTime(v Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *DialogRecordingResponse) GetEndTime() Time {
	if o == nil || IsNil(o.EndTime) {
		var ret Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DialogRecordingResponse) GetEndTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *DialogRecordingResponse) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given Time and assigns it to the EndTime field.
func (o *DialogRecordingResponse) SetEndTime(v Time) {
	o.EndTime = &v
}

func (o DialogRecordingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DialogRecordingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DialogId) {
		toSerialize["dialogId"] = o.DialogId
	}
	if !IsNil(o.CallsConfigurationId) {
		toSerialize["callsConfigurationId"] = o.CallsConfigurationId
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.ComposedFiles) {
		toSerialize["composedFiles"] = o.ComposedFiles
	}
	if !IsNil(o.CallRecordings) {
		toSerialize["callRecordings"] = o.CallRecordings
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullableDialogRecordingResponse struct {
	value *DialogRecordingResponse
	isSet bool
}

func (v NullableDialogRecordingResponse) Get() *DialogRecordingResponse {
	return v.value
}

func (v *NullableDialogRecordingResponse) Set(val *DialogRecordingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDialogRecordingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDialogRecordingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDialogRecordingResponse(val *DialogRecordingResponse) *NullableDialogRecordingResponse {
	return &NullableDialogRecordingResponse{value: val, isSet: true}
}

func (v NullableDialogRecordingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDialogRecordingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
