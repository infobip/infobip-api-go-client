/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the ConferenceRecording type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConferenceRecording{}

// ConferenceRecording struct for ConferenceRecording
type ConferenceRecording struct {
	// Conference ID.
	ConferenceId *string
	// Conference name.
	ConferenceName *string
	// Calls Configuration ID.
	CallsConfigurationId *string
	Platform             *Platform
	// File(s) with a recording of all conference participants.
	ComposedFiles []RecordingFile
	// File(s) with a recording of one conference participant.
	CallRecordings []Recording
	// Date and time when the (first) recording started.
	StartTime *Time
	// Date and time when the (last) recording ended.
	EndTime *Time
}

// NewConferenceRecording instantiates a new ConferenceRecording object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewConferenceRecording() *ConferenceRecording {
	this := ConferenceRecording{}
	return &this
}

// NewConferenceRecordingWithDefaults instantiates a new ConferenceRecording object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConferenceRecordingWithDefaults() *ConferenceRecording {
	this := ConferenceRecording{}

	return &this
}

// GetConferenceId returns the ConferenceId field value if set, zero value otherwise.
func (o *ConferenceRecording) GetConferenceId() string {
	if o == nil || IsNil(o.ConferenceId) {
		var ret string
		return ret
	}
	return *o.ConferenceId
}

// GetConferenceIdOk returns a tuple with the ConferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetConferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceId) {
		return nil, false
	}
	return o.ConferenceId, true
}

// HasConferenceId returns a boolean if a field has been set.
func (o *ConferenceRecording) HasConferenceId() bool {
	if o != nil && !IsNil(o.ConferenceId) {
		return true
	}

	return false
}

// SetConferenceId gets a reference to the given string and assigns it to the ConferenceId field.
func (o *ConferenceRecording) SetConferenceId(v string) {
	o.ConferenceId = &v
}

// GetConferenceName returns the ConferenceName field value if set, zero value otherwise.
func (o *ConferenceRecording) GetConferenceName() string {
	if o == nil || IsNil(o.ConferenceName) {
		var ret string
		return ret
	}
	return *o.ConferenceName
}

// GetConferenceNameOk returns a tuple with the ConferenceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetConferenceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConferenceName) {
		return nil, false
	}
	return o.ConferenceName, true
}

// HasConferenceName returns a boolean if a field has been set.
func (o *ConferenceRecording) HasConferenceName() bool {
	if o != nil && !IsNil(o.ConferenceName) {
		return true
	}

	return false
}

// SetConferenceName gets a reference to the given string and assigns it to the ConferenceName field.
func (o *ConferenceRecording) SetConferenceName(v string) {
	o.ConferenceName = &v
}

// GetCallsConfigurationId returns the CallsConfigurationId field value if set, zero value otherwise.
func (o *ConferenceRecording) GetCallsConfigurationId() string {
	if o == nil || IsNil(o.CallsConfigurationId) {
		var ret string
		return ret
	}
	return *o.CallsConfigurationId
}

// GetCallsConfigurationIdOk returns a tuple with the CallsConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetCallsConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallsConfigurationId) {
		return nil, false
	}
	return o.CallsConfigurationId, true
}

// HasCallsConfigurationId returns a boolean if a field has been set.
func (o *ConferenceRecording) HasCallsConfigurationId() bool {
	if o != nil && !IsNil(o.CallsConfigurationId) {
		return true
	}

	return false
}

// SetCallsConfigurationId gets a reference to the given string and assigns it to the CallsConfigurationId field.
func (o *ConferenceRecording) SetCallsConfigurationId(v string) {
	o.CallsConfigurationId = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ConferenceRecording) GetPlatform() Platform {
	if o == nil || IsNil(o.Platform) {
		var ret Platform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetPlatformOk() (*Platform, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ConferenceRecording) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given Platform and assigns it to the Platform field.
func (o *ConferenceRecording) SetPlatform(v Platform) {
	o.Platform = &v
}

// GetComposedFiles returns the ComposedFiles field value if set, zero value otherwise.
func (o *ConferenceRecording) GetComposedFiles() []RecordingFile {
	if o == nil || IsNil(o.ComposedFiles) {
		var ret []RecordingFile
		return ret
	}
	return o.ComposedFiles
}

// GetComposedFilesOk returns a tuple with the ComposedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetComposedFilesOk() ([]RecordingFile, bool) {
	if o == nil || IsNil(o.ComposedFiles) {
		return nil, false
	}
	return o.ComposedFiles, true
}

// HasComposedFiles returns a boolean if a field has been set.
func (o *ConferenceRecording) HasComposedFiles() bool {
	if o != nil && !IsNil(o.ComposedFiles) {
		return true
	}

	return false
}

// SetComposedFiles gets a reference to the given []RecordingFile and assigns it to the ComposedFiles field.
func (o *ConferenceRecording) SetComposedFiles(v []RecordingFile) {
	o.ComposedFiles = v
}

// GetCallRecordings returns the CallRecordings field value if set, zero value otherwise.
func (o *ConferenceRecording) GetCallRecordings() []Recording {
	if o == nil || IsNil(o.CallRecordings) {
		var ret []Recording
		return ret
	}
	return o.CallRecordings
}

// GetCallRecordingsOk returns a tuple with the CallRecordings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetCallRecordingsOk() ([]Recording, bool) {
	if o == nil || IsNil(o.CallRecordings) {
		return nil, false
	}
	return o.CallRecordings, true
}

// HasCallRecordings returns a boolean if a field has been set.
func (o *ConferenceRecording) HasCallRecordings() bool {
	if o != nil && !IsNil(o.CallRecordings) {
		return true
	}

	return false
}

// SetCallRecordings gets a reference to the given []Recording and assigns it to the CallRecordings field.
func (o *ConferenceRecording) SetCallRecordings(v []Recording) {
	o.CallRecordings = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ConferenceRecording) GetStartTime() Time {
	if o == nil || IsNil(o.StartTime) {
		var ret Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetStartTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ConferenceRecording) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given Time and assigns it to the StartTime field.
func (o *ConferenceRecording) SetStartTime(v Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *ConferenceRecording) GetEndTime() Time {
	if o == nil || IsNil(o.EndTime) {
		var ret Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConferenceRecording) GetEndTimeOk() (*Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *ConferenceRecording) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given Time and assigns it to the EndTime field.
func (o *ConferenceRecording) SetEndTime(v Time) {
	o.EndTime = &v
}

func (o ConferenceRecording) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConferenceRecording) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConferenceId) {
		toSerialize["conferenceId"] = o.ConferenceId
	}
	if !IsNil(o.ConferenceName) {
		toSerialize["conferenceName"] = o.ConferenceName
	}
	if !IsNil(o.CallsConfigurationId) {
		toSerialize["callsConfigurationId"] = o.CallsConfigurationId
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.ComposedFiles) {
		toSerialize["composedFiles"] = o.ComposedFiles
	}
	if !IsNil(o.CallRecordings) {
		toSerialize["callRecordings"] = o.CallRecordings
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullableConferenceRecording struct {
	value *ConferenceRecording
	isSet bool
}

func (v NullableConferenceRecording) Get() *ConferenceRecording {
	return v.value
}

func (v *NullableConferenceRecording) Set(val *ConferenceRecording) {
	v.value = val
	v.isSet = true
}

func (v NullableConferenceRecording) IsSet() bool {
	return v.isSet
}

func (v *NullableConferenceRecording) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConferenceRecording(val *ConferenceRecording) *NullableConferenceRecording {
	return &NullableConferenceRecording{value: val, isSet: true}
}

func (v NullableConferenceRecording) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConferenceRecording) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
