/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// SipTrunkAdminStatus SIP trunk admin status.
type SipTrunkAdminStatus string

// List of SipTrunkAdminStatus
const (
	SIPTRUNKADMINSTATUS_ENABLED         SipTrunkAdminStatus = "ENABLED"
	SIPTRUNKADMINSTATUS_DISABLED        SipTrunkAdminStatus = "DISABLED"
	SIPTRUNKADMINSTATUS_SYSTEM_DISABLED SipTrunkAdminStatus = "SYSTEM_DISABLED"
)

// All allowed values of SipTrunkAdminStatus enum
var AllowedSipTrunkAdminStatusEnumValues = []SipTrunkAdminStatus{
	"ENABLED",
	"DISABLED",
	"SYSTEM_DISABLED",
}

func (v *SipTrunkAdminStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SipTrunkAdminStatus(value)
	for _, existing := range AllowedSipTrunkAdminStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SipTrunkAdminStatus", value)
}

// NewSipTrunkAdminStatusFromValue returns a pointer to a valid SipTrunkAdminStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSipTrunkAdminStatusFromValue(v string) (*SipTrunkAdminStatus, error) {
	ev := SipTrunkAdminStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SipTrunkAdminStatus: valid values are %v", v, AllowedSipTrunkAdminStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SipTrunkAdminStatus) IsValid() bool {
	for _, existing := range AllowedSipTrunkAdminStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SipTrunkAdminStatus value
func (v SipTrunkAdminStatus) Ptr() *SipTrunkAdminStatus {
	return &v
}

type NullableSipTrunkAdminStatus struct {
	value *SipTrunkAdminStatus
	isSet bool
}

func (v NullableSipTrunkAdminStatus) Get() *SipTrunkAdminStatus {
	return v.value
}

func (v *NullableSipTrunkAdminStatus) Set(val *SipTrunkAdminStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSipTrunkAdminStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSipTrunkAdminStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSipTrunkAdminStatus(val *SipTrunkAdminStatus) *NullableSipTrunkAdminStatus {
	return &NullableSipTrunkAdminStatus{value: val, isSet: true}
}

func (v NullableSipTrunkAdminStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSipTrunkAdminStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
