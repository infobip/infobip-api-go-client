/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"
	"fmt"
)

// CallDirection Call direction.
type CallDirection string

// List of CallDirection
const (
	CALLDIRECTION_INBOUND  CallDirection = "INBOUND"
	CALLDIRECTION_OUTBOUND CallDirection = "OUTBOUND"
)

// All allowed values of CallDirection enum
var AllowedCallDirectionEnumValues = []CallDirection{
	"INBOUND",
	"OUTBOUND",
}

func (v *CallDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CallDirection(value)
	for _, existing := range AllowedCallDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CallDirection", value)
}

// NewCallDirectionFromValue returns a pointer to a valid CallDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCallDirectionFromValue(v string) (*CallDirection, error) {
	ev := CallDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CallDirection: valid values are %v", v, AllowedCallDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CallDirection) IsValid() bool {
	for _, existing := range AllowedCallDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CallDirection value
func (v CallDirection) Ptr() *CallDirection {
	return &v
}

type NullableCallDirection struct {
	value *CallDirection
	isSet bool
}

func (v NullableCallDirection) Get() *CallDirection {
	return v.value
}

func (v *NullableCallDirection) Set(val *CallDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableCallDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableCallDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallDirection(val *CallDirection) *NullableCallDirection {
	return &NullableCallDirection{value: val, isSet: true}
}

func (v NullableCallDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
