/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the CallRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRate{}

// CallRate Call rate defined in number of calls created per second, minute, hour, or day.
type CallRate struct {
	// Defines the number of calls scheduled per specified time unit.
	MaxCalls *int32
	TimeUnit *TimeUnit
}

// NewCallRate instantiates a new CallRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewCallRate() *CallRate {
	this := CallRate{}
	return &this
}

// NewCallRateWithDefaults instantiates a new CallRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRateWithDefaults() *CallRate {
	this := CallRate{}

	return &this
}

// GetMaxCalls returns the MaxCalls field value if set, zero value otherwise.
func (o *CallRate) GetMaxCalls() int32 {
	if o == nil || IsNil(o.MaxCalls) {
		var ret int32
		return ret
	}
	return *o.MaxCalls
}

// GetMaxCallsOk returns a tuple with the MaxCalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRate) GetMaxCallsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxCalls) {
		return nil, false
	}
	return o.MaxCalls, true
}

// HasMaxCalls returns a boolean if a field has been set.
func (o *CallRate) HasMaxCalls() bool {
	if o != nil && !IsNil(o.MaxCalls) {
		return true
	}

	return false
}

// SetMaxCalls gets a reference to the given int32 and assigns it to the MaxCalls field.
func (o *CallRate) SetMaxCalls(v int32) {
	o.MaxCalls = &v
}

// GetTimeUnit returns the TimeUnit field value if set, zero value otherwise.
func (o *CallRate) GetTimeUnit() TimeUnit {
	if o == nil || IsNil(o.TimeUnit) {
		var ret TimeUnit
		return ret
	}
	return *o.TimeUnit
}

// GetTimeUnitOk returns a tuple with the TimeUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRate) GetTimeUnitOk() (*TimeUnit, bool) {
	if o == nil || IsNil(o.TimeUnit) {
		return nil, false
	}
	return o.TimeUnit, true
}

// HasTimeUnit returns a boolean if a field has been set.
func (o *CallRate) HasTimeUnit() bool {
	if o != nil && !IsNil(o.TimeUnit) {
		return true
	}

	return false
}

// SetTimeUnit gets a reference to the given TimeUnit and assigns it to the TimeUnit field.
func (o *CallRate) SetTimeUnit(v TimeUnit) {
	o.TimeUnit = &v
}

func (o CallRate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxCalls) {
		toSerialize["maxCalls"] = o.MaxCalls
	}
	if !IsNil(o.TimeUnit) {
		toSerialize["timeUnit"] = o.TimeUnit
	}
	return toSerialize, nil
}

type NullableCallRate struct {
	value *CallRate
	isSet bool
}

func (v NullableCallRate) Get() *CallRate {
	return v.value
}

func (v *NullableCallRate) Set(val *CallRate) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRate) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRate(val *CallRate) *NullableCallRate {
	return &NullableCallRate{value: val, isSet: true}
}

func (v NullableCallRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
