/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the MediaProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaProperties{}

// MediaProperties struct for MediaProperties
type MediaProperties struct {
	Audio *AudioMediaProperties
	Video *VideoMediaProperties
}

// NewMediaProperties instantiates a new MediaProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewMediaProperties() *MediaProperties {
	this := MediaProperties{}
	return &this
}

// NewMediaPropertiesWithDefaults instantiates a new MediaProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaPropertiesWithDefaults() *MediaProperties {
	this := MediaProperties{}

	return &this
}

// GetAudio returns the Audio field value if set, zero value otherwise.
func (o *MediaProperties) GetAudio() AudioMediaProperties {
	if o == nil || IsNil(o.Audio) {
		var ret AudioMediaProperties
		return ret
	}
	return *o.Audio
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProperties) GetAudioOk() (*AudioMediaProperties, bool) {
	if o == nil || IsNil(o.Audio) {
		return nil, false
	}
	return o.Audio, true
}

// HasAudio returns a boolean if a field has been set.
func (o *MediaProperties) HasAudio() bool {
	if o != nil && !IsNil(o.Audio) {
		return true
	}

	return false
}

// SetAudio gets a reference to the given AudioMediaProperties and assigns it to the Audio field.
func (o *MediaProperties) SetAudio(v AudioMediaProperties) {
	o.Audio = &v
}

// GetVideo returns the Video field value if set, zero value otherwise.
func (o *MediaProperties) GetVideo() VideoMediaProperties {
	if o == nil || IsNil(o.Video) {
		var ret VideoMediaProperties
		return ret
	}
	return *o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProperties) GetVideoOk() (*VideoMediaProperties, bool) {
	if o == nil || IsNil(o.Video) {
		return nil, false
	}
	return o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *MediaProperties) HasVideo() bool {
	if o != nil && !IsNil(o.Video) {
		return true
	}

	return false
}

// SetVideo gets a reference to the given VideoMediaProperties and assigns it to the Video field.
func (o *MediaProperties) SetVideo(v VideoMediaProperties) {
	o.Video = &v
}

func (o MediaProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audio) {
		toSerialize["audio"] = o.Audio
	}
	if !IsNil(o.Video) {
		toSerialize["video"] = o.Video
	}
	return toSerialize, nil
}

type NullableMediaProperties struct {
	value *MediaProperties
	isSet bool
}

func (v NullableMediaProperties) Get() *MediaProperties {
	return v.value
}

func (v *NullableMediaProperties) Set(val *MediaProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaProperties(val *MediaProperties) *NullableMediaProperties {
	return &NullableMediaProperties{value: val, isSet: true}
}

func (v NullableMediaProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
