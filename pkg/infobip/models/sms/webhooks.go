/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sms

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the Webhooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhooks{}

// Webhooks Provides options for configuring message webhooks.
type Webhooks struct {
	Delivery *MessageDeliveryReporting
	// Preferred delivery report content type, `application/json` or `application/xml`.
	ContentType *string
	// Additional data that can be used for identifying, managing, or monitoring a message. Data included here will also be automatically included in the message Delivery Report. The maximum value is 4000 characters.
	CallbackData *string
}

// NewWebhooks instantiates a new Webhooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewWebhooks() *Webhooks {
	this := Webhooks{}
	return &this
}

// NewWebhooksWithDefaults instantiates a new Webhooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksWithDefaults() *Webhooks {
	this := Webhooks{}

	return &this
}

// GetDelivery returns the Delivery field value if set, zero value otherwise.
func (o *Webhooks) GetDelivery() MessageDeliveryReporting {
	if o == nil || IsNil(o.Delivery) {
		var ret MessageDeliveryReporting
		return ret
	}
	return *o.Delivery
}

// GetDeliveryOk returns a tuple with the Delivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhooks) GetDeliveryOk() (*MessageDeliveryReporting, bool) {
	if o == nil || IsNil(o.Delivery) {
		return nil, false
	}
	return o.Delivery, true
}

// HasDelivery returns a boolean if a field has been set.
func (o *Webhooks) HasDelivery() bool {
	if o != nil && !IsNil(o.Delivery) {
		return true
	}

	return false
}

// SetDelivery gets a reference to the given MessageDeliveryReporting and assigns it to the Delivery field.
func (o *Webhooks) SetDelivery(v MessageDeliveryReporting) {
	o.Delivery = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *Webhooks) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhooks) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *Webhooks) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *Webhooks) SetContentType(v string) {
	o.ContentType = &v
}

// GetCallbackData returns the CallbackData field value if set, zero value otherwise.
func (o *Webhooks) GetCallbackData() string {
	if o == nil || IsNil(o.CallbackData) {
		var ret string
		return ret
	}
	return *o.CallbackData
}

// GetCallbackDataOk returns a tuple with the CallbackData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhooks) GetCallbackDataOk() (*string, bool) {
	if o == nil || IsNil(o.CallbackData) {
		return nil, false
	}
	return o.CallbackData, true
}

// HasCallbackData returns a boolean if a field has been set.
func (o *Webhooks) HasCallbackData() bool {
	if o != nil && !IsNil(o.CallbackData) {
		return true
	}

	return false
}

// SetCallbackData gets a reference to the given string and assigns it to the CallbackData field.
func (o *Webhooks) SetCallbackData(v string) {
	o.CallbackData = &v
}

func (o Webhooks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Delivery) {
		toSerialize["delivery"] = o.Delivery
	}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.CallbackData) {
		toSerialize["callbackData"] = o.CallbackData
	}
	return toSerialize, nil
}

type NullableWebhooks struct {
	value *Webhooks
	isSet bool
}

func (v NullableWebhooks) Get() *Webhooks {
	return v.value
}

func (v *NullableWebhooks) Set(val *Webhooks) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooks) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooks(val *Webhooks) *NullableWebhooks {
	return &NullableWebhooks{value: val, isSet: true}
}

func (v NullableWebhooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
