/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package messagesapi

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the TemplateDocumentHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateDocumentHeader{}

// TemplateDocumentHeader struct for TemplateDocumentHeader
type TemplateDocumentHeader struct {
	Type TemplateHeaderType
	// URL of a document.
	Url string
	// Name of the file which will be used to display in message.
	Filename string
}

type _TemplateDocumentHeader TemplateDocumentHeader

// NewTemplateDocumentHeader instantiates a new TemplateDocumentHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateDocumentHeader(url string, filename string) *TemplateDocumentHeader {
	this := TemplateDocumentHeader{}
	this.Type = TEMPLATEHEADERTYPE_DOCUMENT
	this.Url = url
	this.Filename = filename
	return &this
}

// NewTemplateDocumentHeaderWithDefaults instantiates a new TemplateDocumentHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateDocumentHeaderWithDefaults() *TemplateDocumentHeader {
	this := TemplateDocumentHeader{}
	return &this
}

// GetUrl returns the Url field value
func (o *TemplateDocumentHeader) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TemplateDocumentHeader) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TemplateDocumentHeader) SetUrl(v string) {
	o.Url = v
}

// GetFilename returns the Filename field value
func (o *TemplateDocumentHeader) GetFilename() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value
// and a boolean to check if the value has been set.
func (o *TemplateDocumentHeader) GetFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filename, true
}

// SetFilename sets field value
func (o *TemplateDocumentHeader) SetFilename(v string) {
	o.Filename = v
}

func (o TemplateDocumentHeader) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateDocumentHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url
	toSerialize["filename"] = o.Filename
	return toSerialize, nil
}

type NullableTemplateDocumentHeader struct {
	value *TemplateDocumentHeader
	isSet bool
}

func (v NullableTemplateDocumentHeader) Get() *TemplateDocumentHeader {
	return v.value
}

func (v *NullableTemplateDocumentHeader) Set(val *TemplateDocumentHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateDocumentHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateDocumentHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateDocumentHeader(val *TemplateDocumentHeader) *NullableTemplateDocumentHeader {
	return &NullableTemplateDocumentHeader{value: val, isSet: true}
}

func (v NullableTemplateDocumentHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateDocumentHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
