/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package voice

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the NumberMaskingUploadBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NumberMaskingUploadBody{}

// NumberMaskingUploadBody struct for NumberMaskingUploadBody
type NumberMaskingUploadBody struct {
	// URL of your voice file location. Max size of the file is 4MB. The acceptable file format is mp3.
	Url *string
	// Encoded (Base64) value of mp3 file can be included instead of the file location URL.
	Content *string
}

// NewNumberMaskingUploadBody instantiates a new NumberMaskingUploadBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewNumberMaskingUploadBody() *NumberMaskingUploadBody {
	this := NumberMaskingUploadBody{}
	return &this
}

// NewNumberMaskingUploadBodyWithDefaults instantiates a new NumberMaskingUploadBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNumberMaskingUploadBodyWithDefaults() *NumberMaskingUploadBody {
	this := NumberMaskingUploadBody{}

	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *NumberMaskingUploadBody) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingUploadBody) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *NumberMaskingUploadBody) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *NumberMaskingUploadBody) SetUrl(v string) {
	o.Url = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *NumberMaskingUploadBody) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NumberMaskingUploadBody) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *NumberMaskingUploadBody) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *NumberMaskingUploadBody) SetContent(v string) {
	o.Content = &v
}

func (o NumberMaskingUploadBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NumberMaskingUploadBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullableNumberMaskingUploadBody struct {
	value *NumberMaskingUploadBody
	isSet bool
}

func (v NullableNumberMaskingUploadBody) Get() *NumberMaskingUploadBody {
	return v.value
}

func (v *NullableNumberMaskingUploadBody) Set(val *NumberMaskingUploadBody) {
	v.value = val
	v.isSet = true
}

func (v NullableNumberMaskingUploadBody) IsSet() bool {
	return v.isSet
}

func (v *NullableNumberMaskingUploadBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNumberMaskingUploadBody(val *NumberMaskingUploadBody) *NullableNumberMaskingUploadBody {
	return &NullableNumberMaskingUploadBody{value: val, isSet: true}
}

func (v NullableNumberMaskingUploadBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNumberMaskingUploadBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
