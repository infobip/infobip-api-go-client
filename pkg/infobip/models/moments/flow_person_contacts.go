/*
Infobip Client API Libraries OpenAPI Specification

OpenAPI specification containing public endpoints supported in client API libraries.

Contact: support@infobip.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moments

import (
	"encoding/json"

	. "github.com/infobip/infobip-api-go-client/v3/pkg/infobip"
)

// checks if the FlowPersonContacts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FlowPersonContacts{}

// FlowPersonContacts List of phones, emails and other information how a person can be contacted.
type FlowPersonContacts struct {
	// A list of person's phone numbers. Max 100 numbers per person.
	Phone []FlowPhoneContact
	// A list of person's email addresses. Max 100 emails per person.
	Email []FlowEmailContact
	// List of person's push registrations.
	Push []FlowPushContact
	// A list of person's Messenger destinations.
	Facebook []FlowCommonOttContact
	// A list of person's Line destinations.
	Line []FlowCommonOttContact
	// A list of person's Viber Bots destinations.
	ViberBots []FlowCommonOttContact
	// A list of person's Live Chat destinations.
	LiveChat []FlowCommonOttContact
	// A list of person's Instagram destinations.
	Instagram []FlowCommonOttContact
	// A list of person's Telegram destinations.
	Telegram []FlowCommonOttContact
	// A list of person's Apple Business Chat destinations.
	AppleBusinessChat []FlowCommonOttContact
	// A list of person's web push destinations.
	Webpush []FlowCommonPushContact
	// A list of person's Instagram DM destinations.
	InstagramDm []FlowCommonOttContact
	// A list of person's Kakao Sangdam destinations.
	KakaoSangdam []FlowCommonOttContact
}

// NewFlowPersonContacts instantiates a new FlowPersonContacts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed

func NewFlowPersonContacts() *FlowPersonContacts {
	this := FlowPersonContacts{}
	return &this
}

// NewFlowPersonContactsWithDefaults instantiates a new FlowPersonContacts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowPersonContactsWithDefaults() *FlowPersonContacts {
	this := FlowPersonContacts{}

	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetPhone() []FlowPhoneContact {
	if o == nil || IsNil(o.Phone) {
		var ret []FlowPhoneContact
		return ret
	}
	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetPhoneOk() ([]FlowPhoneContact, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given []FlowPhoneContact and assigns it to the Phone field.
func (o *FlowPersonContacts) SetPhone(v []FlowPhoneContact) {
	o.Phone = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetEmail() []FlowEmailContact {
	if o == nil || IsNil(o.Email) {
		var ret []FlowEmailContact
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetEmailOk() ([]FlowEmailContact, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given []FlowEmailContact and assigns it to the Email field.
func (o *FlowPersonContacts) SetEmail(v []FlowEmailContact) {
	o.Email = v
}

// GetPush returns the Push field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetPush() []FlowPushContact {
	if o == nil || IsNil(o.Push) {
		var ret []FlowPushContact
		return ret
	}
	return o.Push
}

// GetPushOk returns a tuple with the Push field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetPushOk() ([]FlowPushContact, bool) {
	if o == nil || IsNil(o.Push) {
		return nil, false
	}
	return o.Push, true
}

// HasPush returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasPush() bool {
	if o != nil && !IsNil(o.Push) {
		return true
	}

	return false
}

// SetPush gets a reference to the given []FlowPushContact and assigns it to the Push field.
func (o *FlowPersonContacts) SetPush(v []FlowPushContact) {
	o.Push = v
}

// GetFacebook returns the Facebook field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetFacebook() []FlowCommonOttContact {
	if o == nil || IsNil(o.Facebook) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.Facebook
}

// GetFacebookOk returns a tuple with the Facebook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetFacebookOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.Facebook) {
		return nil, false
	}
	return o.Facebook, true
}

// HasFacebook returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasFacebook() bool {
	if o != nil && !IsNil(o.Facebook) {
		return true
	}

	return false
}

// SetFacebook gets a reference to the given []FlowCommonOttContact and assigns it to the Facebook field.
func (o *FlowPersonContacts) SetFacebook(v []FlowCommonOttContact) {
	o.Facebook = v
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetLine() []FlowCommonOttContact {
	if o == nil || IsNil(o.Line) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetLineOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.Line) {
		return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasLine() bool {
	if o != nil && !IsNil(o.Line) {
		return true
	}

	return false
}

// SetLine gets a reference to the given []FlowCommonOttContact and assigns it to the Line field.
func (o *FlowPersonContacts) SetLine(v []FlowCommonOttContact) {
	o.Line = v
}

// GetViberBots returns the ViberBots field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetViberBots() []FlowCommonOttContact {
	if o == nil || IsNil(o.ViberBots) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.ViberBots
}

// GetViberBotsOk returns a tuple with the ViberBots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetViberBotsOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.ViberBots) {
		return nil, false
	}
	return o.ViberBots, true
}

// HasViberBots returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasViberBots() bool {
	if o != nil && !IsNil(o.ViberBots) {
		return true
	}

	return false
}

// SetViberBots gets a reference to the given []FlowCommonOttContact and assigns it to the ViberBots field.
func (o *FlowPersonContacts) SetViberBots(v []FlowCommonOttContact) {
	o.ViberBots = v
}

// GetLiveChat returns the LiveChat field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetLiveChat() []FlowCommonOttContact {
	if o == nil || IsNil(o.LiveChat) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.LiveChat
}

// GetLiveChatOk returns a tuple with the LiveChat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetLiveChatOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.LiveChat) {
		return nil, false
	}
	return o.LiveChat, true
}

// HasLiveChat returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasLiveChat() bool {
	if o != nil && !IsNil(o.LiveChat) {
		return true
	}

	return false
}

// SetLiveChat gets a reference to the given []FlowCommonOttContact and assigns it to the LiveChat field.
func (o *FlowPersonContacts) SetLiveChat(v []FlowCommonOttContact) {
	o.LiveChat = v
}

// GetInstagram returns the Instagram field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetInstagram() []FlowCommonOttContact {
	if o == nil || IsNil(o.Instagram) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.Instagram
}

// GetInstagramOk returns a tuple with the Instagram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetInstagramOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.Instagram) {
		return nil, false
	}
	return o.Instagram, true
}

// HasInstagram returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasInstagram() bool {
	if o != nil && !IsNil(o.Instagram) {
		return true
	}

	return false
}

// SetInstagram gets a reference to the given []FlowCommonOttContact and assigns it to the Instagram field.
func (o *FlowPersonContacts) SetInstagram(v []FlowCommonOttContact) {
	o.Instagram = v
}

// GetTelegram returns the Telegram field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetTelegram() []FlowCommonOttContact {
	if o == nil || IsNil(o.Telegram) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.Telegram
}

// GetTelegramOk returns a tuple with the Telegram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetTelegramOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.Telegram) {
		return nil, false
	}
	return o.Telegram, true
}

// HasTelegram returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasTelegram() bool {
	if o != nil && !IsNil(o.Telegram) {
		return true
	}

	return false
}

// SetTelegram gets a reference to the given []FlowCommonOttContact and assigns it to the Telegram field.
func (o *FlowPersonContacts) SetTelegram(v []FlowCommonOttContact) {
	o.Telegram = v
}

// GetAppleBusinessChat returns the AppleBusinessChat field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetAppleBusinessChat() []FlowCommonOttContact {
	if o == nil || IsNil(o.AppleBusinessChat) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.AppleBusinessChat
}

// GetAppleBusinessChatOk returns a tuple with the AppleBusinessChat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetAppleBusinessChatOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.AppleBusinessChat) {
		return nil, false
	}
	return o.AppleBusinessChat, true
}

// HasAppleBusinessChat returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasAppleBusinessChat() bool {
	if o != nil && !IsNil(o.AppleBusinessChat) {
		return true
	}

	return false
}

// SetAppleBusinessChat gets a reference to the given []FlowCommonOttContact and assigns it to the AppleBusinessChat field.
func (o *FlowPersonContacts) SetAppleBusinessChat(v []FlowCommonOttContact) {
	o.AppleBusinessChat = v
}

// GetWebpush returns the Webpush field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetWebpush() []FlowCommonPushContact {
	if o == nil || IsNil(o.Webpush) {
		var ret []FlowCommonPushContact
		return ret
	}
	return o.Webpush
}

// GetWebpushOk returns a tuple with the Webpush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetWebpushOk() ([]FlowCommonPushContact, bool) {
	if o == nil || IsNil(o.Webpush) {
		return nil, false
	}
	return o.Webpush, true
}

// HasWebpush returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasWebpush() bool {
	if o != nil && !IsNil(o.Webpush) {
		return true
	}

	return false
}

// SetWebpush gets a reference to the given []FlowCommonPushContact and assigns it to the Webpush field.
func (o *FlowPersonContacts) SetWebpush(v []FlowCommonPushContact) {
	o.Webpush = v
}

// GetInstagramDm returns the InstagramDm field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetInstagramDm() []FlowCommonOttContact {
	if o == nil || IsNil(o.InstagramDm) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.InstagramDm
}

// GetInstagramDmOk returns a tuple with the InstagramDm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetInstagramDmOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.InstagramDm) {
		return nil, false
	}
	return o.InstagramDm, true
}

// HasInstagramDm returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasInstagramDm() bool {
	if o != nil && !IsNil(o.InstagramDm) {
		return true
	}

	return false
}

// SetInstagramDm gets a reference to the given []FlowCommonOttContact and assigns it to the InstagramDm field.
func (o *FlowPersonContacts) SetInstagramDm(v []FlowCommonOttContact) {
	o.InstagramDm = v
}

// GetKakaoSangdam returns the KakaoSangdam field value if set, zero value otherwise.
func (o *FlowPersonContacts) GetKakaoSangdam() []FlowCommonOttContact {
	if o == nil || IsNil(o.KakaoSangdam) {
		var ret []FlowCommonOttContact
		return ret
	}
	return o.KakaoSangdam
}

// GetKakaoSangdamOk returns a tuple with the KakaoSangdam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlowPersonContacts) GetKakaoSangdamOk() ([]FlowCommonOttContact, bool) {
	if o == nil || IsNil(o.KakaoSangdam) {
		return nil, false
	}
	return o.KakaoSangdam, true
}

// HasKakaoSangdam returns a boolean if a field has been set.
func (o *FlowPersonContacts) HasKakaoSangdam() bool {
	if o != nil && !IsNil(o.KakaoSangdam) {
		return true
	}

	return false
}

// SetKakaoSangdam gets a reference to the given []FlowCommonOttContact and assigns it to the KakaoSangdam field.
func (o *FlowPersonContacts) SetKakaoSangdam(v []FlowCommonOttContact) {
	o.KakaoSangdam = v
}

func (o FlowPersonContacts) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FlowPersonContacts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Push) {
		toSerialize["push"] = o.Push
	}
	if !IsNil(o.Facebook) {
		toSerialize["facebook"] = o.Facebook
	}
	if !IsNil(o.Line) {
		toSerialize["line"] = o.Line
	}
	if !IsNil(o.ViberBots) {
		toSerialize["viberBots"] = o.ViberBots
	}
	if !IsNil(o.LiveChat) {
		toSerialize["liveChat"] = o.LiveChat
	}
	if !IsNil(o.Instagram) {
		toSerialize["instagram"] = o.Instagram
	}
	if !IsNil(o.Telegram) {
		toSerialize["telegram"] = o.Telegram
	}
	if !IsNil(o.AppleBusinessChat) {
		toSerialize["appleBusinessChat"] = o.AppleBusinessChat
	}
	if !IsNil(o.Webpush) {
		toSerialize["webpush"] = o.Webpush
	}
	if !IsNil(o.InstagramDm) {
		toSerialize["instagramDm"] = o.InstagramDm
	}
	if !IsNil(o.KakaoSangdam) {
		toSerialize["kakaoSangdam"] = o.KakaoSangdam
	}
	return toSerialize, nil
}

type NullableFlowPersonContacts struct {
	value *FlowPersonContacts
	isSet bool
}

func (v NullableFlowPersonContacts) Get() *FlowPersonContacts {
	return v.value
}

func (v *NullableFlowPersonContacts) Set(val *FlowPersonContacts) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowPersonContacts) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowPersonContacts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowPersonContacts(val *FlowPersonContacts) *NullableFlowPersonContacts {
	return &NullableFlowPersonContacts{value: val, isSet: true}
}

func (v NullableFlowPersonContacts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowPersonContacts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
